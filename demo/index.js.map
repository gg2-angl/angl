{
  "version": 3,
  "file": "out/demo/index.js",
  "sources": [
    "../../..\\node_modules\\almond\\almond.js",
    "../../demo/vendor/jquery-1.9.1.min.js",
    "../../demo/vendor/knockout-2.2.1.min.js",
    "../../fs.js",
    "../../path.js",
    "../../../parser/out/parser.js",
    "../../../parser/out/angl.js",
    "../../..\\node_modules\\lodash/dist/lodash.js",
    "../../vendor/buckets.js",
    "../../lib/angl-scope.js",
    "../../lib/scope-variable.js",
    "../../lib/strings.js",
    "../../../runtime/src/angl-globals-namespace.js",
    "../../../runtime/src/../../compiler/vendor/buckets.js",
    "../../../runtime/src/object-creation.js",
    "../../../runtime/src/angl-object.js",
    "../../../runtime/src/angl-game-object.js",
    "../../../runtime/src/special-constants.js",
    "../../../runtime/src/console.js",
    "../../../runtime/src/angl-globals.js",
    "../../lib/global-scope.js",
    "../../lib/process-phase-zero.js",
    "../../lib/ast-node-children.js",
    "../../lib/tree-walker.js",
    "../../lib/ast-utils.js",
    "../../lib/process-phase-one.js",
    "../../lib/process-phase-resolve-identifiers-to-variables.js",
    "../../lib/process-phase-mark-method-calls.js",
    "../../lib/process-phase-assign-js-identifiers.js",
    "../../lib/run-all-transformations.js",
    "../../lib/main.js",
    "../../lib/compile.js",
    "../../demo/index.js"
  ],
  "names": [],
  "mappingsvZA,ADwZA;ACvZA;AACA;AACA;AACA;ACJA,ADKA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA,ADsFA;ACrFA;AACA;ACFA,ADGA;ACFA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC37BA,AD47BA;AC37BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChUA,ADiUA;AChz3JA,AD03JA;ACznLA,ADoLA;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9FA,AD+FA;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA,ADWA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC31EA,AD41EA;AC31EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA,ADyEA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA,AD2BA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA,ADQA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA,ADyBA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrnEA,ADoEA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA,ADiCA;AChjUA,ADkUA;ACjUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA,ADkCA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA,ADiBA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA,ADcA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjkBA,AD+kBA;AC9kBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA,ADmBA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "\n/**\n * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split(\"/\"));\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        config = cfg;\n        if (config.deps) {\n            req(config.deps, config.callback);\n        }\n        return req;\n    };\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"..\\node_modules\\almond\\almond\", function(){});\n",
    "\n/*! jQuery v1.9.1 | (c) 2005, 2012 jQuery Foundation, Inc. | jquery.org/license\r\n//@ sourceMappingURL=jquery.min.map\r\n*/(function(e,t){var n,r,i=typeof t,o=e.document,a=e.location,s=e.jQuery,u=e.$,l={},c=[],p=\"1.9.1\",f=c.concat,d=c.push,h=c.slice,g=c.indexOf,m=l.toString,y=l.hasOwnProperty,v=p.trim,b=function(e,t){return new b.fn.init(e,t,r)},x=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,w=/\\S+/g,T=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,N=/^(?:(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,k=/^[\\],:{}\\s]*$/,E=/(?:^|:|,)(?:\\s*\\[)+/g,S=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,A=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,j=/^-ms-/,D=/-([\\da-z])/gi,L=function(e,t){return t.toUpperCase()},H=function(e){(o.addEventListener||\"load\"===e.type||\"complete\"===o.readyState)&&(q(),b.ready())},q=function(){o.addEventListener?(o.removeEventListener(\"DOMContentLoaded\",H,!1),e.removeEventListener(\"load\",H,!1)):(o.detachEvent(\"onreadystatechange\",H),e.detachEvent(\"onload\",H))};b.fn=b.prototype={jquery:p,constructor:b,init:function(e,n,r){var i,a;if(!e)return this;if(\"string\"==typeof e){if(i=\"<\"===e.charAt(0)&&\">\"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:N.exec(e),!i||!i[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(i[1]){if(n=n instanceof b?n[0]:n,b.merge(this,b.parseHTML(i[1],n&&n.nodeType?n.ownerDocument||n:o,!0)),C.test(i[1])&&b.isPlainObject(n))for(i in n)b.isFunction(this[i])?this[i](n[i]):this.attr(i,n[i]);return this}if(a=o.getElementById(i[2]),a&&a.parentNode){if(a.id!==i[2])return r.find(e);this.length=1,this[0]=a}return this.context=o,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):b.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),b.makeArray(e,this))},selector:\"\",length:0,size:function(){return this.length},toArray:function(){return h.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=b.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return b.each(this,e,t)},ready:function(e){return b.ready.promise().done(e),this},slice:function(){return this.pushStack(h.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(b.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:d,sort:[].sort,splice:[].splice},b.fn.init.prototype=b.fn,b.extend=b.fn.extend=function(){var e,n,r,i,o,a,s=arguments[0]||{},u=1,l=arguments.length,c=!1;for(\"boolean\"==typeof s&&(c=s,s=arguments[1]||{},u=2),\"object\"==typeof s||b.isFunction(s)||(s={}),l===u&&(s=this,--u);l>u;u++)if(null!=(o=arguments[u]))for(i in o)e=s[i],r=o[i],s!==r&&(c&&r&&(b.isPlainObject(r)||(n=b.isArray(r)))?(n?(n=!1,a=e&&b.isArray(e)?e:[]):a=e&&b.isPlainObject(e)?e:{},s[i]=b.extend(c,a,r)):r!==t&&(s[i]=r));return s},b.extend({noConflict:function(t){return e.$===b&&(e.$=u),t&&e.jQuery===b&&(e.jQuery=s),b},isReady:!1,readyWait:1,holdReady:function(e){e?b.readyWait++:b.ready(!0)},ready:function(e){if(e===!0?!--b.readyWait:!b.isReady){if(!o.body)return setTimeout(b.ready);b.isReady=!0,e!==!0&&--b.readyWait>0||(n.resolveWith(o,[b]),b.fn.trigger&&b(o).trigger(\"ready\").off(\"ready\"))}},isFunction:function(e){return\"function\"===b.type(e)},isArray:Array.isArray||function(e){return\"array\"===b.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?l[m.call(e)]||\"object\":typeof e},isPlainObject:function(e){if(!e||\"object\"!==b.type(e)||e.nodeType||b.isWindow(e))return!1;try{if(e.constructor&&!y.call(e,\"constructor\")&&!y.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(n){return!1}var r;for(r in e);return r===t||y.call(e,r)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||\"string\"!=typeof e)return null;\"boolean\"==typeof t&&(n=t,t=!1),t=t||o;var r=C.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=b.buildFragment([e],t,i),i&&b(i).remove(),b.merge([],r.childNodes))},parseJSON:function(n){return e.JSON&&e.JSON.parse?e.JSON.parse(n):null===n?n:\"string\"==typeof n&&(n=b.trim(n),n&&k.test(n.replace(S,\"@\").replace(A,\"]\").replace(E,\"\")))?Function(\"return \"+n)():(b.error(\"Invalid JSON: \"+n),t)},parseXML:function(n){var r,i;if(!n||\"string\"!=typeof n)return null;try{e.DOMParser?(i=new DOMParser,r=i.parseFromString(n,\"text/xml\")):(r=new ActiveXObject(\"Microsoft.XMLDOM\"),r.async=\"false\",r.loadXML(n))}catch(o){r=t}return r&&r.documentElement&&!r.getElementsByTagName(\"parsererror\").length||b.error(\"Invalid XML: \"+n),r},noop:function(){},globalEval:function(t){t&&b.trim(t)&&(e.execScript||function(t){e.eval.call(e,t)})(t)},camelCase:function(e){return e.replace(j,\"ms-\").replace(D,L)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r,i=0,o=e.length,a=M(e);if(n){if(a){for(;o>i;i++)if(r=t.apply(e[i],n),r===!1)break}else for(i in e)if(r=t.apply(e[i],n),r===!1)break}else if(a){for(;o>i;i++)if(r=t.call(e[i],i,e[i]),r===!1)break}else for(i in e)if(r=t.call(e[i],i,e[i]),r===!1)break;return e},trim:v&&!v.call(\"\\ufeff\\u00a0\")?function(e){return null==e?\"\":v.call(e)}:function(e){return null==e?\"\":(e+\"\").replace(T,\"\")},makeArray:function(e,t){var n=t||[];return null!=e&&(M(Object(e))?b.merge(n,\"string\"==typeof e?[e]:e):d.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(g)return g.call(t,e,n);for(r=t.length,n=n?0>n?Math.max(0,r+n):n:0;r>n;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,n){var r=n.length,i=e.length,o=0;if(\"number\"==typeof r)for(;r>o;o++)e[i++]=n[o];else while(n[o]!==t)e[i++]=n[o++];return e.length=i,e},grep:function(e,t,n){var r,i=[],o=0,a=e.length;for(n=!!n;a>o;o++)r=!!t(e[o],o),n!==r&&i.push(e[o]);return i},map:function(e,t,n){var r,i=0,o=e.length,a=M(e),s=[];if(a)for(;o>i;i++)r=t(e[i],i,n),null!=r&&(s[s.length]=r);else for(i in e)r=t(e[i],i,n),null!=r&&(s[s.length]=r);return f.apply([],s)},guid:1,proxy:function(e,n){var r,i,o;return\"string\"==typeof n&&(o=e[n],n=e,e=o),b.isFunction(e)?(r=h.call(arguments,2),i=function(){return e.apply(n||this,r.concat(h.call(arguments)))},i.guid=e.guid=e.guid||b.guid++,i):t},access:function(e,n,r,i,o,a,s){var u=0,l=e.length,c=null==r;if(\"object\"===b.type(r)){o=!0;for(u in r)b.access(e,n,u,r[u],!0,a,s)}else if(i!==t&&(o=!0,b.isFunction(i)||(s=!0),c&&(s?(n.call(e,i),n=null):(c=n,n=function(e,t,n){return c.call(b(e),n)})),n))for(;l>u;u++)n(e[u],r,s?i:i.call(e[u],u,n(e[u],r)));return o?e:c?n.call(e):l?n(e[0],r):a},now:function(){return(new Date).getTime()}}),b.ready.promise=function(t){if(!n)if(n=b.Deferred(),\"complete\"===o.readyState)setTimeout(b.ready);else if(o.addEventListener)o.addEventListener(\"DOMContentLoaded\",H,!1),e.addEventListener(\"load\",H,!1);else{o.attachEvent(\"onreadystatechange\",H),e.attachEvent(\"onload\",H);var r=!1;try{r=null==e.frameElement&&o.documentElement}catch(i){}r&&r.doScroll&&function a(){if(!b.isReady){try{r.doScroll(\"left\")}catch(e){return setTimeout(a,50)}q(),b.ready()}}()}return n.promise(t)},b.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(e,t){l[\"[object \"+t+\"]\"]=t.toLowerCase()});function M(e){var t=e.length,n=b.type(e);return b.isWindow(e)?!1:1===e.nodeType&&t?!0:\"array\"===n||\"function\"!==n&&(0===t||\"number\"==typeof t&&t>0&&t-1 in e)}r=b(o);var _={};function F(e){var t=_[e]={};return b.each(e.match(w)||[],function(e,n){t[n]=!0}),t}b.Callbacks=function(e){e=\"string\"==typeof e?_[e]||F(e):b.extend({},e);var n,r,i,o,a,s,u=[],l=!e.once&&[],c=function(t){for(r=e.memory&&t,i=!0,a=s||0,s=0,o=u.length,n=!0;u&&o>a;a++)if(u[a].apply(t[0],t[1])===!1&&e.stopOnFalse){r=!1;break}n=!1,u&&(l?l.length&&c(l.shift()):r?u=[]:p.disable())},p={add:function(){if(u){var t=u.length;(function i(t){b.each(t,function(t,n){var r=b.type(n);\"function\"===r?e.unique&&p.has(n)||u.push(n):n&&n.length&&\"string\"!==r&&i(n)})})(arguments),n?o=u.length:r&&(s=t,c(r))}return this},remove:function(){return u&&b.each(arguments,function(e,t){var r;while((r=b.inArray(t,u,r))>-1)u.splice(r,1),n&&(o>=r&&o--,a>=r&&a--)}),this},has:function(e){return e?b.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],this},disable:function(){return u=l=r=t,this},disabled:function(){return!u},lock:function(){return l=t,r||p.disable(),this},locked:function(){return!l},fireWith:function(e,t){return t=t||[],t=[e,t.slice?t.slice():t],!u||i&&!l||(n?l.push(t):c(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!i}};return p},b.extend({Deferred:function(e){var t=[[\"resolve\",\"done\",b.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",b.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",b.Callbacks(\"memory\")]],n=\"pending\",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return b.Deferred(function(n){b.each(t,function(t,o){var a=o[0],s=b.isFunction(e[t])&&e[t];i[o[1]](function(){var e=s&&s.apply(this,arguments);e&&b.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a+\"With\"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?b.extend(e,r):r}},i={};return r.pipe=r.then,b.each(t,function(e,o){var a=o[2],s=o[3];r[o[1]]=a.add,s&&a.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[o[0]]=function(){return i[o[0]+\"With\"](this===i?r:this,arguments),this},i[o[0]+\"With\"]=a.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=0,n=h.call(arguments),r=n.length,i=1!==r||e&&b.isFunction(e.promise)?r:0,o=1===i?e:b.Deferred(),a=function(e,t,n){return function(r){t[e]=this,n[e]=arguments.length>1?h.call(arguments):r,n===s?o.notifyWith(t,n):--i||o.resolveWith(t,n)}},s,u,l;if(r>1)for(s=Array(r),u=Array(r),l=Array(r);r>t;t++)n[t]&&b.isFunction(n[t].promise)?n[t].promise().done(a(t,l,n)).fail(o.reject).progress(a(t,u,s)):--i;return i||o.resolveWith(l,n),o.promise()}}),b.support=function(){var t,n,r,a,s,u,l,c,p,f,d=o.createElement(\"div\");if(d.setAttribute(\"className\",\"t\"),d.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",n=d.getElementsByTagName(\"*\"),r=d.getElementsByTagName(\"a\")[0],!n||!r||!n.length)return{};s=o.createElement(\"select\"),l=s.appendChild(o.createElement(\"option\")),a=d.getElementsByTagName(\"input\")[0],r.style.cssText=\"top:1px;float:left;opacity:.5\",t={getSetAttribute:\"t\"!==d.className,leadingWhitespace:3===d.firstChild.nodeType,tbody:!d.getElementsByTagName(\"tbody\").length,htmlSerialize:!!d.getElementsByTagName(\"link\").length,style:/top/.test(r.getAttribute(\"style\")),hrefNormalized:\"/a\"===r.getAttribute(\"href\"),opacity:/^0.5/.test(r.style.opacity),cssFloat:!!r.style.cssFloat,checkOn:!!a.value,optSelected:l.selected,enctype:!!o.createElement(\"form\").enctype,html5Clone:\"<:nav></:nav>\"!==o.createElement(\"nav\").cloneNode(!0).outerHTML,boxModel:\"CSS1Compat\"===o.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},a.checked=!0,t.noCloneChecked=a.cloneNode(!0).checked,s.disabled=!0,t.optDisabled=!l.disabled;try{delete d.test}catch(h){t.deleteExpando=!1}a=o.createElement(\"input\"),a.setAttribute(\"value\",\"\"),t.input=\"\"===a.getAttribute(\"value\"),a.value=\"t\",a.setAttribute(\"type\",\"radio\"),t.radioValue=\"t\"===a.value,a.setAttribute(\"checked\",\"t\"),a.setAttribute(\"name\",\"t\"),u=o.createDocumentFragment(),u.appendChild(a),t.appendChecked=a.checked,t.checkClone=u.cloneNode(!0).cloneNode(!0).lastChild.checked,d.attachEvent&&(d.attachEvent(\"onclick\",function(){t.noCloneEvent=!1}),d.cloneNode(!0).click());for(f in{submit:!0,change:!0,focusin:!0})d.setAttribute(c=\"on\"+f,\"t\"),t[f+\"Bubbles\"]=c in e||d.attributes[c].expando===!1;return d.style.backgroundClip=\"content-box\",d.cloneNode(!0).style.backgroundClip=\"\",t.clearCloneStyle=\"content-box\"===d.style.backgroundClip,b(function(){var n,r,a,s=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",u=o.getElementsByTagName(\"body\")[0];u&&(n=o.createElement(\"div\"),n.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",u.appendChild(n).appendChild(d),d.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",a=d.getElementsByTagName(\"td\"),a[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",p=0===a[0].offsetHeight,a[0].style.display=\"\",a[1].style.display=\"none\",t.reliableHiddenOffsets=p&&0===a[0].offsetHeight,d.innerHTML=\"\",d.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",t.boxSizing=4===d.offsetWidth,t.doesNotIncludeMarginInBodyOffset=1!==u.offsetTop,e.getComputedStyle&&(t.pixelPosition=\"1%\"!==(e.getComputedStyle(d,null)||{}).top,t.boxSizingReliable=\"4px\"===(e.getComputedStyle(d,null)||{width:\"4px\"}).width,r=d.appendChild(o.createElement(\"div\")),r.style.cssText=d.style.cssText=s,r.style.marginRight=r.style.width=\"0\",d.style.width=\"1px\",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),typeof d.style.zoom!==i&&(d.innerHTML=\"\",d.style.cssText=s+\"width:1px;padding:1px;display:inline;zoom:1\",t.inlineBlockNeedsLayout=3===d.offsetWidth,d.style.display=\"block\",d.innerHTML=\"<div></div>\",d.firstChild.style.width=\"5px\",t.shrinkWrapBlocks=3!==d.offsetWidth,t.inlineBlockNeedsLayout&&(u.style.zoom=1)),u.removeChild(n),n=d=a=r=null)}),n=s=u=l=r=a=null,t}();var O=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,B=/([A-Z])/g;function P(e,n,r,i){if(b.acceptData(e)){var o,a,s=b.expando,u=\"string\"==typeof n,l=e.nodeType,p=l?b.cache:e,f=l?e[s]:e[s]&&s;if(f&&p[f]&&(i||p[f].data)||!u||r!==t)return f||(l?e[s]=f=c.pop()||b.guid++:f=s),p[f]||(p[f]={},l||(p[f].toJSON=b.noop)),(\"object\"==typeof n||\"function\"==typeof n)&&(i?p[f]=b.extend(p[f],n):p[f].data=b.extend(p[f].data,n)),o=p[f],i||(o.data||(o.data={}),o=o.data),r!==t&&(o[b.camelCase(n)]=r),u?(a=o[n],null==a&&(a=o[b.camelCase(n)])):a=o,a}}function R(e,t,n){if(b.acceptData(e)){var r,i,o,a=e.nodeType,s=a?b.cache:e,u=a?e[b.expando]:b.expando;if(s[u]){if(t&&(o=n?s[u]:s[u].data)){b.isArray(t)?t=t.concat(b.map(t,b.camelCase)):t in o?t=[t]:(t=b.camelCase(t),t=t in o?[t]:t.split(\" \"));for(r=0,i=t.length;i>r;r++)delete o[t[r]];if(!(n?$:b.isEmptyObject)(o))return}(n||(delete s[u].data,$(s[u])))&&(a?b.cleanData([e],!0):b.support.deleteExpando||s!=s.window?delete s[u]:s[u]=null)}}}b.extend({cache:{},expando:\"jQuery\"+(p+Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",applet:!0},hasData:function(e){return e=e.nodeType?b.cache[e[b.expando]]:e[b.expando],!!e&&!$(e)},data:function(e,t,n){return P(e,t,n)},removeData:function(e,t){return R(e,t)},_data:function(e,t,n){return P(e,t,n,!0)},_removeData:function(e,t){return R(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&b.noData[e.nodeName.toLowerCase()];return!t||t!==!0&&e.getAttribute(\"classid\")===t}}),b.fn.extend({data:function(e,n){var r,i,o=this[0],a=0,s=null;if(e===t){if(this.length&&(s=b.data(o),1===o.nodeType&&!b._data(o,\"parsedAttrs\"))){for(r=o.attributes;r.length>a;a++)i=r[a].name,i.indexOf(\"data-\")||(i=b.camelCase(i.slice(5)),W(o,i,s[i]));b._data(o,\"parsedAttrs\",!0)}return s}return\"object\"==typeof e?this.each(function(){b.data(this,e)}):b.access(this,function(n){return n===t?o?W(o,e,b.data(o,e)):null:(this.each(function(){b.data(this,e,n)}),t)},null,n,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){b.removeData(this,e)})}});function W(e,n,r){if(r===t&&1===e.nodeType){var i=\"data-\"+n.replace(B,\"-$1\").toLowerCase();if(r=e.getAttribute(i),\"string\"==typeof r){try{r=\"true\"===r?!0:\"false\"===r?!1:\"null\"===r?null:+r+\"\"===r?+r:O.test(r)?b.parseJSON(r):r}catch(o){}b.data(e,n,r)}else r=t}return r}function $(e){var t;for(t in e)if((\"data\"!==t||!b.isEmptyObject(e[t]))&&\"toJSON\"!==t)return!1;return!0}b.extend({queue:function(e,n,r){var i;return e?(n=(n||\"fx\")+\"queue\",i=b._data(e,n),r&&(!i||b.isArray(r)?i=b._data(e,n,b.makeArray(r)):i.push(r)),i||[]):t},dequeue:function(e,t){t=t||\"fx\";var n=b.queue(e,t),r=n.length,i=n.shift(),o=b._queueHooks(e,t),a=function(){b.dequeue(e,t)};\"inprogress\"===i&&(i=n.shift(),r--),o.cur=i,i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,a,o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return b._data(e,n)||b._data(e,n,{empty:b.Callbacks(\"once memory\").add(function(){b._removeData(e,t+\"queue\"),b._removeData(e,n)})})}}),b.fn.extend({queue:function(e,n){var r=2;return\"string\"!=typeof e&&(n=e,e=\"fx\",r--),r>arguments.length?b.queue(this[0],e):n===t?this:this.each(function(){var t=b.queue(this,e,n);b._queueHooks(this,e),\"fx\"===e&&\"inprogress\"!==t[0]&&b.dequeue(this,e)})},dequeue:function(e){return this.each(function(){b.dequeue(this,e)})},delay:function(e,t){return e=b.fx?b.fx.speeds[e]||e:e,t=t||\"fx\",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,n){var r,i=1,o=b.Deferred(),a=this,s=this.length,u=function(){--i||o.resolveWith(a,[a])};\"string\"!=typeof e&&(n=e,e=t),e=e||\"fx\";while(s--)r=b._data(a[s],e+\"queueHooks\"),r&&r.empty&&(i++,r.empty.add(u));return u(),o.promise(n)}});var I,z,X=/[\\t\\r\\n]/g,U=/\\r/g,V=/^(?:input|select|textarea|button|object)$/i,Y=/^(?:a|area)$/i,J=/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,G=/^(?:checked|selected)$/i,Q=b.support.getSetAttribute,K=b.support.input;b.fn.extend({attr:function(e,t){return b.access(this,b.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){b.removeAttr(this,e)})},prop:function(e,t){return b.access(this,b.prop,e,t,arguments.length>1)},removeProp:function(e){return e=b.propFix[e]||e,this.each(function(){try{this[e]=t,delete this[e]}catch(n){}})},addClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).addClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\" \")){o=0;while(i=t[o++])0>r.indexOf(\" \"+i+\" \")&&(r+=i+\" \");n.className=b.trim(r)}return this},removeClass:function(e){var t,n,r,i,o,a=0,s=this.length,u=0===arguments.length||\"string\"==typeof e&&e;if(b.isFunction(e))return this.each(function(t){b(this).removeClass(e.call(this,t,this.className))});if(u)for(t=(e||\"\").match(w)||[];s>a;a++)if(n=this[a],r=1===n.nodeType&&(n.className?(\" \"+n.className+\" \").replace(X,\" \"):\"\")){o=0;while(i=t[o++])while(r.indexOf(\" \"+i+\" \")>=0)r=r.replace(\" \"+i+\" \",\" \");n.className=e?b.trim(r):\"\"}return this},toggleClass:function(e,t){var n=typeof e,r=\"boolean\"==typeof t;return b.isFunction(e)?this.each(function(n){b(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if(\"string\"===n){var o,a=0,s=b(this),u=t,l=e.match(w)||[];while(o=l[a++])u=r?u:!s.hasClass(o),s[u?\"addClass\":\"removeClass\"](o)}else(n===i||\"boolean\"===n)&&(this.className&&b._data(this,\"__className__\",this.className),this.className=this.className||e===!1?\"\":b._data(this,\"__className__\")||\"\")})},hasClass:function(e){var t=\" \"+e+\" \",n=0,r=this.length;for(;r>n;n++)if(1===this[n].nodeType&&(\" \"+this[n].className+\" \").replace(X,\" \").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,i,o=this[0];{if(arguments.length)return i=b.isFunction(e),this.each(function(n){var o,a=b(this);1===this.nodeType&&(o=i?e.call(this,n,a.val()):e,null==o?o=\"\":\"number\"==typeof o?o+=\"\":b.isArray(o)&&(o=b.map(o,function(e){return null==e?\"\":e+\"\"})),r=b.valHooks[this.type]||b.valHooks[this.nodeName.toLowerCase()],r&&\"set\"in r&&r.set(this,o,\"value\")!==t||(this.value=o))});if(o)return r=b.valHooks[o.type]||b.valHooks[o.nodeName.toLowerCase()],r&&\"get\"in r&&(n=r.get(o,\"value\"))!==t?n:(n=o.value,\"string\"==typeof n?n.replace(U,\"\"):null==n?\"\":n)}}}),b.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){var t,n,r=e.options,i=e.selectedIndex,o=\"select-one\"===e.type||0>i,a=o?null:[],s=o?i+1:r.length,u=0>i?s:o?i:0;for(;s>u;u++)if(n=r[u],!(!n.selected&&u!==i||(b.support.optDisabled?n.disabled:null!==n.getAttribute(\"disabled\"))||n.parentNode.disabled&&b.nodeName(n.parentNode,\"optgroup\"))){if(t=b(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n=b.makeArray(t);return b(e).find(\"option\").each(function(){this.selected=b.inArray(b(this).val(),n)>=0}),n.length||(e.selectedIndex=-1),n}}},attr:function(e,n,r){var o,a,s,u=e.nodeType;if(e&&3!==u&&8!==u&&2!==u)return typeof e.getAttribute===i?b.prop(e,n,r):(a=1!==u||!b.isXMLDoc(e),a&&(n=n.toLowerCase(),o=b.attrHooks[n]||(J.test(n)?z:I)),r===t?o&&a&&\"get\"in o&&null!==(s=o.get(e,n))?s:(typeof e.getAttribute!==i&&(s=e.getAttribute(n)),null==s?t:s):null!==r?o&&a&&\"set\"in o&&(s=o.set(e,r,n))!==t?s:(e.setAttribute(n,r+\"\"),r):(b.removeAttr(e,n),t))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(w);if(o&&1===e.nodeType)while(n=o[i++])r=b.propFix[n]||n,J.test(n)?!Q&&G.test(n)?e[b.camelCase(\"default-\"+n)]=e[r]=!1:e[r]=!1:b.attr(e,n,\"\"),e.removeAttribute(Q?n:r)},attrHooks:{type:{set:function(e,t){if(!b.support.radioValue&&\"radio\"===t&&b.nodeName(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},propFix:{tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},prop:function(e,n,r){var i,o,a,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return a=1!==s||!b.isXMLDoc(e),a&&(n=b.propFix[n]||n,o=b.propHooks[n]),r!==t?o&&\"set\"in o&&(i=o.set(e,r,n))!==t?i:e[n]=r:o&&\"get\"in o&&null!==(i=o.get(e,n))?i:e[n]},propHooks:{tabIndex:{get:function(e){var n=e.getAttributeNode(\"tabindex\");return n&&n.specified?parseInt(n.value,10):V.test(e.nodeName)||Y.test(e.nodeName)&&e.href?0:t}}}}),z={get:function(e,n){var r=b.prop(e,n),i=\"boolean\"==typeof r&&e.getAttribute(n),o=\"boolean\"==typeof r?K&&Q?null!=i:G.test(n)?e[b.camelCase(\"default-\"+n)]:!!i:e.getAttributeNode(n);return o&&o.value!==!1?n.toLowerCase():t},set:function(e,t,n){return t===!1?b.removeAttr(e,n):K&&Q||!G.test(n)?e.setAttribute(!Q&&b.propFix[n]||n,n):e[b.camelCase(\"default-\"+n)]=e[n]=!0,n}},K&&Q||(b.attrHooks.value={get:function(e,n){var r=e.getAttributeNode(n);return b.nodeName(e,\"input\")?e.defaultValue:r&&r.specified?r.value:t},set:function(e,n,r){return b.nodeName(e,\"input\")?(e.defaultValue=n,t):I&&I.set(e,n,r)}}),Q||(I=b.valHooks.button={get:function(e,n){var r=e.getAttributeNode(n);return r&&(\"id\"===n||\"name\"===n||\"coords\"===n?\"\"!==r.value:r.specified)?r.value:t},set:function(e,n,r){var i=e.getAttributeNode(r);return i||e.setAttributeNode(i=e.ownerDocument.createAttribute(r)),i.value=n+=\"\",\"value\"===r||n===e.getAttribute(r)?n:t}},b.attrHooks.contenteditable={get:I.get,set:function(e,t,n){I.set(e,\"\"===t?!1:t,n)}},b.each([\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{set:function(e,r){return\"\"===r?(e.setAttribute(n,\"auto\"),r):t}})})),b.support.hrefNormalized||(b.each([\"href\",\"src\",\"width\",\"height\"],function(e,n){b.attrHooks[n]=b.extend(b.attrHooks[n],{get:function(e){var r=e.getAttribute(n,2);return null==r?t:r}})}),b.each([\"href\",\"src\"],function(e,t){b.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}})),b.support.style||(b.attrHooks.style={get:function(e){return e.style.cssText||t},set:function(e,t){return e.style.cssText=t+\"\"}}),b.support.optSelected||(b.propHooks.selected=b.extend(b.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),b.support.enctype||(b.propFix.enctype=\"encoding\"),b.support.checkOn||b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]={get:function(e){return null===e.getAttribute(\"value\")?\"on\":e.value}}}),b.each([\"radio\",\"checkbox\"],function(){b.valHooks[this]=b.extend(b.valHooks[this],{set:function(e,n){return b.isArray(n)?e.checked=b.inArray(b(e).val(),n)>=0:t}})});var Z=/^(?:input|select|textarea)$/i,et=/^key/,tt=/^(?:mouse|contextmenu)|click/,nt=/^(?:focusinfocus|focusoutblur)$/,rt=/^([^.]*)(?:\\.(.+)|)$/;function it(){return!0}function ot(){return!1}b.event={global:{},add:function(e,n,r,o,a){var s,u,l,c,p,f,d,h,g,m,y,v=b._data(e);if(v){r.handler&&(c=r,r=c.handler,a=c.selector),r.guid||(r.guid=b.guid++),(u=v.events)||(u=v.events={}),(f=v.handle)||(f=v.handle=function(e){return typeof b===i||e&&b.event.triggered===e.type?t:b.event.dispatch.apply(f.elem,arguments)},f.elem=e),n=(n||\"\").match(w)||[\"\"],l=n.length;while(l--)s=rt.exec(n[l])||[],g=y=s[1],m=(s[2]||\"\").split(\".\").sort(),p=b.event.special[g]||{},g=(a?p.delegateType:p.bindType)||g,p=b.event.special[g]||{},d=b.extend({type:g,origType:y,data:o,handler:r,guid:r.guid,selector:a,needsContext:a&&b.expr.match.needsContext.test(a),namespace:m.join(\".\")},c),(h=u[g])||(h=u[g]=[],h.delegateCount=0,p.setup&&p.setup.call(e,o,m,f)!==!1||(e.addEventListener?e.addEventListener(g,f,!1):e.attachEvent&&e.attachEvent(\"on\"+g,f))),p.add&&(p.add.call(e,d),d.handler.guid||(d.handler.guid=r.guid)),a?h.splice(h.delegateCount++,0,d):h.push(d),b.event.global[g]=!0;e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,p,f,d,h,g,m=b.hasData(e)&&b._data(e);if(m&&(c=m.events)){t=(t||\"\").match(w)||[\"\"],l=t.length;while(l--)if(s=rt.exec(t[l])||[],d=g=s[1],h=(s[2]||\"\").split(\".\").sort(),d){p=b.event.special[d]||{},d=(r?p.delegateType:p.bindType)||d,f=c[d]||[],s=s[2]&&RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),u=o=f.length;while(o--)a=f[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&(\"**\"!==r||!a.selector)||(f.splice(o,1),a.selector&&f.delegateCount--,p.remove&&p.remove.call(e,a));u&&!f.length&&(p.teardown&&p.teardown.call(e,h,m.handle)!==!1||b.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)b.event.remove(e,d+t[l],n,r,!0);b.isEmptyObject(c)&&(delete m.handle,b._removeData(e,\"events\"))}},trigger:function(n,r,i,a){var s,u,l,c,p,f,d,h=[i||o],g=y.call(n,\"type\")?n.type:n,m=y.call(n,\"namespace\")?n.namespace.split(\".\"):[];if(l=f=i=i||o,3!==i.nodeType&&8!==i.nodeType&&!nt.test(g+b.event.triggered)&&(g.indexOf(\".\")>=0&&(m=g.split(\".\"),g=m.shift(),m.sort()),u=0>g.indexOf(\":\")&&\"on\"+g,n=n[b.expando]?n:new b.Event(g,\"object\"==typeof n&&n),n.isTrigger=!0,n.namespace=m.join(\".\"),n.namespace_re=n.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,n.result=t,n.target||(n.target=i),r=null==r?[n]:b.makeArray(r,[n]),p=b.event.special[g]||{},a||!p.trigger||p.trigger.apply(i,r)!==!1)){if(!a&&!p.noBubble&&!b.isWindow(i)){for(c=p.delegateType||g,nt.test(c+g)||(l=l.parentNode);l;l=l.parentNode)h.push(l),f=l;f===(i.ownerDocument||o)&&h.push(f.defaultView||f.parentWindow||e)}d=0;while((l=h[d++])&&!n.isPropagationStopped())n.type=d>1?c:p.bindType||g,s=(b._data(l,\"events\")||{})[n.type]&&b._data(l,\"handle\"),s&&s.apply(l,r),s=u&&l[u],s&&b.acceptData(l)&&s.apply&&s.apply(l,r)===!1&&n.preventDefault();if(n.type=g,!(a||n.isDefaultPrevented()||p._default&&p._default.apply(i.ownerDocument,r)!==!1||\"click\"===g&&b.nodeName(i,\"a\")||!b.acceptData(i)||!u||!i[g]||b.isWindow(i))){f=i[u],f&&(i[u]=null),b.event.triggered=g;try{i[g]()}catch(v){}b.event.triggered=t,f&&(i[u]=f)}return n.result}},dispatch:function(e){e=b.event.fix(e);var n,r,i,o,a,s=[],u=h.call(arguments),l=(b._data(this,\"events\")||{})[e.type]||[],c=b.event.special[e.type]||{};if(u[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){s=b.event.handlers.call(this,e,l),n=0;while((o=s[n++])&&!e.isPropagationStopped()){e.currentTarget=o.elem,a=0;while((i=o.handlers[a++])&&!e.isImmediatePropagationStopped())(!e.namespace_re||e.namespace_re.test(i.namespace))&&(e.handleObj=i,e.data=i.data,r=((b.event.special[i.origType]||{}).handle||i.handler).apply(o.elem,u),r!==t&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,i,o,a,s=[],u=n.delegateCount,l=e.target;if(u&&l.nodeType&&(!e.button||\"click\"!==e.type))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||\"click\"!==e.type)){for(o=[],a=0;u>a;a++)i=n[a],r=i.selector+\" \",o[r]===t&&(o[r]=i.needsContext?b(r,this).index(l)>=0:b.find(r,this,null,[l]).length),o[r]&&o.push(i);o.length&&s.push({elem:l,handlers:o})}return n.length>u&&s.push({elem:this,handlers:n.slice(u)}),s},fix:function(e){if(e[b.expando])return e;var t,n,r,i=e.type,a=e,s=this.fixHooks[i];s||(this.fixHooks[i]=s=tt.test(i)?this.mouseHooks:et.test(i)?this.keyHooks:{}),r=s.props?this.props.concat(s.props):this.props,e=new b.Event(a),t=r.length;while(t--)n=r[t],e[n]=a[n];return e.target||(e.target=a.srcElement||o),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,s.filter?s.filter(e,a):e},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(e,n){var r,i,a,s=n.button,u=n.fromElement;return null==e.pageX&&null!=n.clientX&&(i=e.target.ownerDocument||o,a=i.documentElement,r=i.body,e.pageX=n.clientX+(a&&a.scrollLeft||r&&r.scrollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),e.pageY=n.clientY+(a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),!e.relatedTarget&&u&&(e.relatedTarget=u===e.target?n.toElement:u),e.which||s===t||(e.which=1&s?1:2&s?3:4&s?2:0),e}},special:{load:{noBubble:!0},click:{trigger:function(){return b.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):t}},focus:{trigger:function(){if(this!==o.activeElement&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===o.activeElement&&this.blur?(this.blur(),!1):t},delegateType:\"focusout\"},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=b.extend(new b.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?b.event.trigger(i,null,t):b.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},b.removeEvent=o.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r=\"on\"+t;e.detachEvent&&(typeof e[r]===i&&(e[r]=null),e.detachEvent(r,n))},b.Event=function(e,n){return this instanceof b.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.returnValue===!1||e.getPreventDefault&&e.getPreventDefault()?it:ot):this.type=e,n&&b.extend(this,n),this.timeStamp=e&&e.timeStamp||b.now(),this[b.expando]=!0,t):new b.Event(e,n)},b.Event.prototype={isDefaultPrevented:ot,isPropagationStopped:ot,isImmediatePropagationStopped:ot,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=it,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=it,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=it,this.stopPropagation()}},b.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(e,t){b.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,o=e.handleObj;\r\nreturn(!i||i!==r&&!b.contains(r,i))&&(e.type=o.origType,n=o.handler.apply(this,arguments),e.type=t),n}}}),b.support.submitBubbles||(b.event.special.submit={setup:function(){return b.nodeName(this,\"form\")?!1:(b.event.add(this,\"click._submit keypress._submit\",function(e){var n=e.target,r=b.nodeName(n,\"input\")||b.nodeName(n,\"button\")?n.form:t;r&&!b._data(r,\"submitBubbles\")&&(b.event.add(r,\"submit._submit\",function(e){e._submit_bubble=!0}),b._data(r,\"submitBubbles\",!0))}),t)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&b.event.simulate(\"submit\",this.parentNode,e,!0))},teardown:function(){return b.nodeName(this,\"form\")?!1:(b.event.remove(this,\"._submit\"),t)}}),b.support.changeBubbles||(b.event.special.change={setup:function(){return Z.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(b.event.add(this,\"propertychange._change\",function(e){\"checked\"===e.originalEvent.propertyName&&(this._just_changed=!0)}),b.event.add(this,\"click._change\",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),b.event.simulate(\"change\",this,e,!0)})),!1):(b.event.add(this,\"beforeactivate._change\",function(e){var t=e.target;Z.test(t.nodeName)&&!b._data(t,\"changeBubbles\")&&(b.event.add(t,\"change._change\",function(e){!this.parentNode||e.isSimulated||e.isTrigger||b.event.simulate(\"change\",this.parentNode,e,!0)}),b._data(t,\"changeBubbles\",!0))}),t)},handle:function(e){var n=e.target;return this!==n||e.isSimulated||e.isTrigger||\"radio\"!==n.type&&\"checkbox\"!==n.type?e.handleObj.handler.apply(this,arguments):t},teardown:function(){return b.event.remove(this,\"._change\"),!Z.test(this.nodeName)}}),b.support.focusinBubbles||b.each({focus:\"focusin\",blur:\"focusout\"},function(e,t){var n=0,r=function(e){b.event.simulate(t,e.target,b.event.fix(e),!0)};b.event.special[t]={setup:function(){0===n++&&o.addEventListener(e,r,!0)},teardown:function(){0===--n&&o.removeEventListener(e,r,!0)}}}),b.fn.extend({on:function(e,n,r,i,o){var a,s;if(\"object\"==typeof e){\"string\"!=typeof n&&(r=r||n,n=t);for(a in e)this.on(a,n,r,e[a],o);return this}if(null==r&&null==i?(i=n,r=n=t):null==i&&(\"string\"==typeof n?(i=r,r=t):(i=r,r=n,n=t)),i===!1)i=ot;else if(!i)return this;return 1===o&&(s=i,i=function(e){return b().off(e),s.apply(this,arguments)},i.guid=s.guid||(s.guid=b.guid++)),this.each(function(){b.event.add(this,e,i,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var i,o;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,b(e.delegateTarget).off(i.namespace?i.origType+\".\"+i.namespace:i.origType,i.selector,i.handler),this;if(\"object\"==typeof e){for(o in e)this.off(o,n,e[o]);return this}return(n===!1||\"function\"==typeof n)&&(r=n,n=t),r===!1&&(r=ot),this.each(function(){b.event.remove(this,e,r,n)})},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)},trigger:function(e,t){return this.each(function(){b.event.trigger(e,t,this)})},triggerHandler:function(e,n){var r=this[0];return r?b.event.trigger(e,n,r,!0):t}}),function(e,t){var n,r,i,o,a,s,u,l,c,p,f,d,h,g,m,y,v,x=\"sizzle\"+-new Date,w=e.document,T={},N=0,C=0,k=it(),E=it(),S=it(),A=typeof t,j=1<<31,D=[],L=D.pop,H=D.push,q=D.slice,M=D.indexOf||function(e){var t=0,n=this.length;for(;n>t;t++)if(this[t]===e)return t;return-1},_=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",F=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",O=F.replace(\"w\",\"w#\"),B=\"([*^$|!~]?=)\",P=\"\\\\[\"+_+\"*(\"+F+\")\"+_+\"*(?:\"+B+_+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+O+\")|)|)\"+_+\"*\\\\]\",R=\":(\"+F+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+P.replace(3,8)+\")*)|.*)\\\\)|)\",W=RegExp(\"^\"+_+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+_+\"+$\",\"g\"),$=RegExp(\"^\"+_+\"*,\"+_+\"*\"),I=RegExp(\"^\"+_+\"*([\\\\x20\\\\t\\\\r\\\\n\\\\f>+~])\"+_+\"*\"),z=RegExp(R),X=RegExp(\"^\"+O+\"$\"),U={ID:RegExp(\"^#(\"+F+\")\"),CLASS:RegExp(\"^\\\\.(\"+F+\")\"),NAME:RegExp(\"^\\\\[name=['\\\"]?(\"+F+\")['\\\"]?\\\\]\"),TAG:RegExp(\"^(\"+F.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+P),PSEUDO:RegExp(\"^\"+R),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+_+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+_+\"*(?:([+-]|)\"+_+\"*(\\\\d+)|))\"+_+\"*\\\\)|)\",\"i\"),needsContext:RegExp(\"^\"+_+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+_+\"*((?:-\\\\d)?\\\\d*)\"+_+\"*\\\\)|)(?=[^-]|$)\",\"i\")},V=/[\\x20\\t\\r\\n\\f]*[+~]/,Y=/^[^{]+\\{\\s*\\[native code/,J=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,G=/^(?:input|select|textarea|button)$/i,Q=/^h\\d$/i,K=/'|\\\\/g,Z=/\\=[\\x20\\t\\r\\n\\f]*([^'\"\\]]*)[\\x20\\t\\r\\n\\f]*\\]/g,et=/\\\\([\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|.)/g,tt=function(e,t){var n=\"0x\"+t-65536;return n!==n?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>>10,56320|1023&n)};try{q.call(w.documentElement.childNodes,0)[0].nodeType}catch(nt){q=function(e){var t,n=[];while(t=this[e++])n.push(t);return n}}function rt(e){return Y.test(e+\"\")}function it(){var e,t=[];return e=function(n,r){return t.push(n+=\" \")>i.cacheLength&&delete e[t.shift()],e[n]=r}}function ot(e){return e[x]=!0,e}function at(e){var t=p.createElement(\"div\");try{return e(t)}catch(n){return!1}finally{t=null}}function st(e,t,n,r){var i,o,a,s,u,l,f,g,m,v;if((t?t.ownerDocument||t:w)!==p&&c(t),t=t||p,n=n||[],!e||\"string\"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(!d&&!r){if(i=J.exec(e))if(a=i[1]){if(9===s){if(o=t.getElementById(a),!o||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&y(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return H.apply(n,q.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&T.getByClassName&&t.getElementsByClassName)return H.apply(n,q.call(t.getElementsByClassName(a),0)),n}if(T.qsa&&!h.test(e)){if(f=!0,g=x,m=t,v=9===s&&e,1===s&&\"object\"!==t.nodeName.toLowerCase()){l=ft(e),(f=t.getAttribute(\"id\"))?g=f.replace(K,\"\\\\$&\"):t.setAttribute(\"id\",g),g=\"[id='\"+g+\"'] \",u=l.length;while(u--)l[u]=g+dt(l[u]);m=V.test(e)&&t.parentNode||t,v=l.join(\",\")}if(v)try{return H.apply(n,q.call(m.querySelectorAll(v),0)),n}catch(b){}finally{f||t.removeAttribute(\"id\")}}}return wt(e.replace(W,\"$1\"),t,n,r)}a=st.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?\"HTML\"!==t.nodeName:!1},c=st.setDocument=function(e){var n=e?e.ownerDocument||e:w;return n!==p&&9===n.nodeType&&n.documentElement?(p=n,f=n.documentElement,d=a(n),T.tagNameNoComments=at(function(e){return e.appendChild(n.createComment(\"\")),!e.getElementsByTagName(\"*\").length}),T.attributes=at(function(e){e.innerHTML=\"<select></select>\";var t=typeof e.lastChild.getAttribute(\"multiple\");return\"boolean\"!==t&&\"string\"!==t}),T.getByClassName=at(function(e){return e.innerHTML=\"<div class='hidden e'></div><div class='hidden'></div>\",e.getElementsByClassName&&e.getElementsByClassName(\"e\").length?(e.lastChild.className=\"e\",2===e.getElementsByClassName(\"e\").length):!1}),T.getByName=at(function(e){e.id=x+0,e.innerHTML=\"<a name='\"+x+\"'></a><div name='\"+x+\"'></div>\",f.insertBefore(e,f.firstChild);var t=n.getElementsByName&&n.getElementsByName(x).length===2+n.getElementsByName(x+0).length;return T.getIdNotName=!n.getElementById(x),f.removeChild(e),t}),i.attrHandle=at(function(e){return e.innerHTML=\"<a href='#'></a>\",e.firstChild&&typeof e.firstChild.getAttribute!==A&&\"#\"===e.firstChild.getAttribute(\"href\")})?{}:{href:function(e){return e.getAttribute(\"href\",2)},type:function(e){return e.getAttribute(\"type\")}},T.getIdNotName?(i.find.ID=function(e,t){if(typeof t.getElementById!==A&&!d){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){return e.getAttribute(\"id\")===t}}):(i.find.ID=function(e,n){if(typeof n.getElementById!==A&&!d){var r=n.getElementById(e);return r?r.id===e||typeof r.getAttributeNode!==A&&r.getAttributeNode(\"id\").value===e?[r]:t:[]}},i.filter.ID=function(e){var t=e.replace(et,tt);return function(e){var n=typeof e.getAttributeNode!==A&&e.getAttributeNode(\"id\");return n&&n.value===t}}),i.find.TAG=T.tagNameNoComments?function(e,n){return typeof n.getElementsByTagName!==A?n.getElementsByTagName(e):t}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if(\"*\"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},i.find.NAME=T.getByName&&function(e,n){return typeof n.getElementsByName!==A?n.getElementsByName(name):t},i.find.CLASS=T.getByClassName&&function(e,n){return typeof n.getElementsByClassName===A||d?t:n.getElementsByClassName(e)},g=[],h=[\":focus\"],(T.qsa=rt(n.querySelectorAll))&&(at(function(e){e.innerHTML=\"<select><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||h.push(\"\\\\[\"+_+\"*(?:checked|disabled|ismap|multiple|readonly|selected|value)\"),e.querySelectorAll(\":checked\").length||h.push(\":checked\")}),at(function(e){e.innerHTML=\"<input type='hidden' i=''/>\",e.querySelectorAll(\"[i^='']\").length&&h.push(\"[*^$]=\"+_+\"*(?:\\\"\\\"|'')\"),e.querySelectorAll(\":enabled\").length||h.push(\":enabled\",\":disabled\"),e.querySelectorAll(\"*,:x\"),h.push(\",.*:\")})),(T.matchesSelector=rt(m=f.matchesSelector||f.mozMatchesSelector||f.webkitMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&at(function(e){T.disconnectedMatch=m.call(e,\"div\"),m.call(e,\"[s!='']:x\"),g.push(\"!=\",R)}),h=RegExp(h.join(\"|\")),g=RegExp(g.join(\"|\")),y=rt(f.contains)||f.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},v=f.compareDocumentPosition?function(e,t){var r;return e===t?(u=!0,0):(r=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t))?1&r||e.parentNode&&11===e.parentNode.nodeType?e===n||y(w,e)?-1:t===n||y(w,t)?1:0:4&r?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var r,i=0,o=e.parentNode,a=t.parentNode,s=[e],l=[t];if(e===t)return u=!0,0;if(!o||!a)return e===n?-1:t===n?1:o?-1:a?1:0;if(o===a)return ut(e,t);r=e;while(r=r.parentNode)s.unshift(r);r=t;while(r=r.parentNode)l.unshift(r);while(s[i]===l[i])i++;return i?ut(s[i],l[i]):s[i]===w?-1:l[i]===w?1:0},u=!1,[0,0].sort(v),T.detectDuplicates=u,p):p},st.matches=function(e,t){return st(e,null,null,t)},st.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&c(e),t=t.replace(Z,\"='$1']\"),!(!T.matchesSelector||d||g&&g.test(t)||h.test(t)))try{var n=m.call(e,t);if(n||T.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(r){}return st(t,p,null,[e]).length>0},st.contains=function(e,t){return(e.ownerDocument||e)!==p&&c(e),y(e,t)},st.attr=function(e,t){var n;return(e.ownerDocument||e)!==p&&c(e),d||(t=t.toLowerCase()),(n=i.attrHandle[t])?n(e):d||T.attributes?e.getAttribute(t):((n=e.getAttributeNode(t))||e.getAttribute(t))&&e[t]===!0?t:n&&n.specified?n.value:null},st.error=function(e){throw Error(\"Syntax error, unrecognized expression: \"+e)},st.uniqueSort=function(e){var t,n=[],r=1,i=0;if(u=!T.detectDuplicates,e.sort(v),u){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));while(i--)e.splice(n[i],1)}return e};function ut(e,t){var n=t&&e,r=n&&(~t.sourceIndex||j)-(~e.sourceIndex||j);if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function lt(e){return function(t){var n=t.nodeName.toLowerCase();return\"input\"===n&&t.type===e}}function ct(e){return function(t){var n=t.nodeName.toLowerCase();return(\"input\"===n||\"button\"===n)&&t.type===e}}function pt(e){return ot(function(t){return t=+t,ot(function(n,r){var i,o=e([],n.length,t),a=o.length;while(a--)n[i=o[a]]&&(n[i]=!(r[i]=n[i]))})})}o=st.getText=function(e){var t,n=\"\",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if(\"string\"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},i=st.selectors={cacheLength:50,createPseudo:ot,match:U,find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(et,tt),e[3]=(e[4]||e[5]||\"\").replace(et,tt),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||st.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&st.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return U.CHILD.test(e[0])?null:(e[4]?e[2]=e[4]:n&&z.test(n)&&(t=ft(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){return\"*\"===e?function(){return!0}:(e=e.replace(et,tt).toLowerCase(),function(t){return t.nodeName&&t.nodeName.toLowerCase()===e})},CLASS:function(e){var t=k[e+\" \"];return t||(t=RegExp(\"(^|\"+_+\")\"+e+\"(\"+_+\"|$)\"))&&k(e,function(e){return t.test(e.className||typeof e.getAttribute!==A&&e.getAttribute(\"class\")||\"\")})},ATTR:function(e,t,n){return function(r){var i=st.attr(r,e);return null==i?\"!=\"===t:t?(i+=\"\",\"=\"===t?i===n:\"!=\"===t?i!==n:\"^=\"===t?n&&0===i.indexOf(n):\"*=\"===t?n&&i.indexOf(n)>-1:\"$=\"===t?n&&i.slice(-n.length)===n:\"~=\"===t?(\" \"+i+\" \").indexOf(n)>-1:\"|=\"===t?i===n||i.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(e,t,n,r,i){var o=\"nth\"!==e.slice(0,3),a=\"last\"!==e.slice(-4),s=\"of-type\"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var l,c,p,f,d,h,g=o!==a?\"nextSibling\":\"previousSibling\",m=t.parentNode,y=s&&t.nodeName.toLowerCase(),v=!u&&!s;if(m){if(o){while(g){p=t;while(p=p[g])if(s?p.nodeName.toLowerCase()===y:1===p.nodeType)return!1;h=g=\"only\"===e&&!h&&\"nextSibling\"}return!0}if(h=[a?m.firstChild:m.lastChild],a&&v){c=m[x]||(m[x]={}),l=c[e]||[],d=l[0]===N&&l[1],f=l[0]===N&&l[2],p=d&&m.childNodes[d];while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if(1===p.nodeType&&++f&&p===t){c[e]=[N,d,f];break}}else if(v&&(l=(t[x]||(t[x]={}))[e])&&l[0]===N)f=l[1];else while(p=++d&&p&&p[g]||(f=d=0)||h.pop())if((s?p.nodeName.toLowerCase()===y:1===p.nodeType)&&++f&&(v&&((p[x]||(p[x]={}))[e]=[N,f]),p===t))break;return f-=i,f===r||0===f%r&&f/r>=0}}},PSEUDO:function(e,t){var n,r=i.pseudos[e]||i.setFilters[e.toLowerCase()]||st.error(\"unsupported pseudo: \"+e);return r[x]?r(t):r.length>1?(n=[e,e,\"\",t],i.setFilters.hasOwnProperty(e.toLowerCase())?ot(function(e,n){var i,o=r(e,t),a=o.length;while(a--)i=M.call(e,o[a]),e[i]=!(n[i]=o[a])}):function(e){return r(e,0,n)}):r}},pseudos:{not:ot(function(e){var t=[],n=[],r=s(e.replace(W,\"$1\"));return r[x]?ot(function(e,t,n,i){var o,a=r(e,null,i,[]),s=e.length;while(s--)(o=a[s])&&(e[s]=!(t[s]=o))}):function(e,i,o){return t[0]=e,r(t,null,o,n),!n.pop()}}),has:ot(function(e){return function(t){return st(e,t).length>0}}),contains:ot(function(e){return function(t){return(t.textContent||t.innerText||o(t)).indexOf(e)>-1}}),lang:ot(function(e){return X.test(e||\"\")||st.error(\"unsupported lang: \"+e),e=e.replace(et,tt).toLowerCase(),function(t){var n;do if(n=d?t.getAttribute(\"xml:lang\")||t.getAttribute(\"lang\"):t.lang)return n=n.toLowerCase(),n===e||0===n.indexOf(e+\"-\");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===f},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&!!e.checked||\"option\"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>\"@\"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!i.pseudos.empty(e)},header:function(e){return Q.test(e.nodeName)},input:function(e){return G.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return\"input\"===t&&\"button\"===e.type||\"button\"===t},text:function(e){var t;return\"input\"===e.nodeName.toLowerCase()&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||t.toLowerCase()===e.type)},first:pt(function(){return[0]}),last:pt(function(e,t){return[t-1]}),eq:pt(function(e,t,n){return[0>n?n+t:n]}),even:pt(function(e,t){var n=0;for(;t>n;n+=2)e.push(n);return e}),odd:pt(function(e,t){var n=1;for(;t>n;n+=2)e.push(n);return e}),lt:pt(function(e,t,n){var r=0>n?n+t:n;for(;--r>=0;)e.push(r);return e}),gt:pt(function(e,t,n){var r=0>n?n+t:n;for(;t>++r;)e.push(r);return e})}};for(n in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})i.pseudos[n]=lt(n);for(n in{submit:!0,reset:!0})i.pseudos[n]=ct(n);function ft(e,t){var n,r,o,a,s,u,l,c=E[e+\" \"];if(c)return t?0:c.slice(0);s=e,u=[],l=i.preFilter;while(s){(!n||(r=$.exec(s)))&&(r&&(s=s.slice(r[0].length)||s),u.push(o=[])),n=!1,(r=I.exec(s))&&(n=r.shift(),o.push({value:n,type:r[0].replace(W,\" \")}),s=s.slice(n.length));for(a in i.filter)!(r=U[a].exec(s))||l[a]&&!(r=l[a](r))||(n=r.shift(),o.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?st.error(e):E(e,u).slice(0)}function dt(e){var t=0,n=e.length,r=\"\";for(;n>t;t++)r+=e[t].value;return r}function ht(e,t,n){var i=t.dir,o=n&&\"parentNode\"===i,a=C++;return t.first?function(t,n,r){while(t=t[i])if(1===t.nodeType||o)return e(t,n,r)}:function(t,n,s){var u,l,c,p=N+\" \"+a;if(s){while(t=t[i])if((1===t.nodeType||o)&&e(t,n,s))return!0}else while(t=t[i])if(1===t.nodeType||o)if(c=t[x]||(t[x]={}),(l=c[i])&&l[0]===p){if((u=l[1])===!0||u===r)return u===!0}else if(l=c[i]=[p],l[1]=e(t,n,s)||r,l[1]===!0)return!0}}function gt(e){return e.length>1?function(t,n,r){var i=e.length;while(i--)if(!e[i](t,n,r))return!1;return!0}:e[0]}function mt(e,t,n,r,i){var o,a=[],s=0,u=e.length,l=null!=t;for(;u>s;s++)(o=e[s])&&(!n||n(o,r,i))&&(a.push(o),l&&t.push(s));return a}function yt(e,t,n,r,i,o){return r&&!r[x]&&(r=yt(r)),i&&!i[x]&&(i=yt(i,o)),ot(function(o,a,s,u){var l,c,p,f=[],d=[],h=a.length,g=o||xt(t||\"*\",s.nodeType?[s]:s,[]),m=!e||!o&&t?g:mt(g,f,e,s,u),y=n?i||(o?e:h||r)?[]:a:m;if(n&&n(m,y,s,u),r){l=mt(y,d),r(l,[],s,u),c=l.length;while(c--)(p=l[c])&&(y[d[c]]=!(m[d[c]]=p))}if(o){if(i||e){if(i){l=[],c=y.length;while(c--)(p=y[c])&&l.push(m[c]=p);i(null,y=[],l,u)}c=y.length;while(c--)(p=y[c])&&(l=i?M.call(o,p):f[c])>-1&&(o[l]=!(a[l]=p))}}else y=mt(y===a?y.splice(h,y.length):y),i?i(null,a,y,u):H.apply(a,y)})}function vt(e){var t,n,r,o=e.length,a=i.relative[e[0].type],s=a||i.relative[\" \"],u=a?1:0,c=ht(function(e){return e===t},s,!0),p=ht(function(e){return M.call(t,e)>-1},s,!0),f=[function(e,n,r){return!a&&(r||n!==l)||((t=n).nodeType?c(e,n,r):p(e,n,r))}];for(;o>u;u++)if(n=i.relative[e[u].type])f=[ht(gt(f),n)];else{if(n=i.filter[e[u].type].apply(null,e[u].matches),n[x]){for(r=++u;o>r;r++)if(i.relative[e[r].type])break;return yt(u>1&&gt(f),u>1&&dt(e.slice(0,u-1)).replace(W,\"$1\"),n,r>u&&vt(e.slice(u,r)),o>r&&vt(e=e.slice(r)),o>r&&dt(e))}f.push(n)}return gt(f)}function bt(e,t){var n=0,o=t.length>0,a=e.length>0,s=function(s,u,c,f,d){var h,g,m,y=[],v=0,b=\"0\",x=s&&[],w=null!=d,T=l,C=s||a&&i.find.TAG(\"*\",d&&u.parentNode||u),k=N+=null==T?1:Math.random()||.1;for(w&&(l=u!==p&&u,r=n);null!=(h=C[b]);b++){if(a&&h){g=0;while(m=e[g++])if(m(h,u,c)){f.push(h);break}w&&(N=k,r=++n)}o&&((h=!m&&h)&&v--,s&&x.push(h))}if(v+=b,o&&b!==v){g=0;while(m=t[g++])m(x,y,u,c);if(s){if(v>0)while(b--)x[b]||y[b]||(y[b]=L.call(f));y=mt(y)}H.apply(f,y),w&&!s&&y.length>0&&v+t.length>1&&st.uniqueSort(f)}return w&&(N=k,l=T),x};return o?ot(s):s}s=st.compile=function(e,t){var n,r=[],i=[],o=S[e+\" \"];if(!o){t||(t=ft(e)),n=t.length;while(n--)o=vt(t[n]),o[x]?r.push(o):i.push(o);o=S(e,bt(i,r))}return o};function xt(e,t,n){var r=0,i=t.length;for(;i>r;r++)st(e,t[r],n);return n}function wt(e,t,n,r){var o,a,u,l,c,p=ft(e);if(!r&&1===p.length){if(a=p[0]=p[0].slice(0),a.length>2&&\"ID\"===(u=a[0]).type&&9===t.nodeType&&!d&&i.relative[a[1].type]){if(t=i.find.ID(u.matches[0].replace(et,tt),t)[0],!t)return n;e=e.slice(a.shift().value.length)}o=U.needsContext.test(e)?0:a.length;while(o--){if(u=a[o],i.relative[l=u.type])break;if((c=i.find[l])&&(r=c(u.matches[0].replace(et,tt),V.test(a[0].type)&&t.parentNode||t))){if(a.splice(o,1),e=r.length&&dt(a),!e)return H.apply(n,q.call(r,0)),n;break}}}return s(e,p)(r,t,d,n,V.test(e)),n}i.pseudos.nth=i.pseudos.eq;function Tt(){}i.filters=Tt.prototype=i.pseudos,i.setFilters=new Tt,c(),st.attr=b.attr,b.find=st,b.expr=st.selectors,b.expr[\":\"]=b.expr.pseudos,b.unique=st.uniqueSort,b.text=st.getText,b.isXMLDoc=st.isXML,b.contains=st.contains}(e);var at=/Until$/,st=/^(?:parents|prev(?:Until|All))/,ut=/^.[^:#\\[\\.,]*$/,lt=b.expr.match.needsContext,ct={children:!0,contents:!0,next:!0,prev:!0};b.fn.extend({find:function(e){var t,n,r,i=this.length;if(\"string\"!=typeof e)return r=this,this.pushStack(b(e).filter(function(){for(t=0;i>t;t++)if(b.contains(r[t],this))return!0}));for(n=[],t=0;i>t;t++)b.find(e,this[t],n);return n=this.pushStack(i>1?b.unique(n):n),n.selector=(this.selector?this.selector+\" \":\"\")+e,n},has:function(e){var t,n=b(e,this),r=n.length;return this.filter(function(){for(t=0;r>t;t++)if(b.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ft(this,e,!1))},filter:function(e){return this.pushStack(ft(this,e,!0))},is:function(e){return!!e&&(\"string\"==typeof e?lt.test(e)?b(e,this.context).index(this[0])>=0:b.filter(e,this).length>0:this.filter(e).length>0)},closest:function(e,t){var n,r=0,i=this.length,o=[],a=lt.test(e)||\"string\"!=typeof e?b(e,t||this.context):0;for(;i>r;r++){n=this[r];while(n&&n.ownerDocument&&n!==t&&11!==n.nodeType){if(a?a.index(n)>-1:b.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}}return this.pushStack(o.length>1?b.unique(o):o)},index:function(e){return e?\"string\"==typeof e?b.inArray(this[0],b(e)):b.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n=\"string\"==typeof e?b(e,t):b.makeArray(e&&e.nodeType?[e]:e),r=b.merge(this.get(),n);return this.pushStack(b.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),b.fn.andSelf=b.fn.addBack;function pt(e,t){do e=e[t];while(e&&1!==e.nodeType);return e}b.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return b.dir(e,\"parentNode\")},parentsUntil:function(e,t,n){return b.dir(e,\"parentNode\",n)},next:function(e){return pt(e,\"nextSibling\")},prev:function(e){return pt(e,\"previousSibling\")},nextAll:function(e){return b.dir(e,\"nextSibling\")},prevAll:function(e){return b.dir(e,\"previousSibling\")},nextUntil:function(e,t,n){return b.dir(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return b.dir(e,\"previousSibling\",n)},siblings:function(e){return b.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return b.sibling(e.firstChild)},contents:function(e){return b.nodeName(e,\"iframe\")?e.contentDocument||e.contentWindow.document:b.merge([],e.childNodes)}},function(e,t){b.fn[e]=function(n,r){var i=b.map(this,t,n);return at.test(e)||(r=n),r&&\"string\"==typeof r&&(i=b.filter(r,i)),i=this.length>1&&!ct[e]?b.unique(i):i,this.length>1&&st.test(e)&&(i=i.reverse()),this.pushStack(i)}}),b.extend({filter:function(e,t,n){return n&&(e=\":not(\"+e+\")\"),1===t.length?b.find.matchesSelector(t[0],e)?[t[0]]:[]:b.find.matches(e,t)},dir:function(e,n,r){var i=[],o=e[n];while(o&&9!==o.nodeType&&(r===t||1!==o.nodeType||!b(o).is(r)))1===o.nodeType&&i.push(o),o=o[n];return i},sibling:function(e,t){var n=[];for(;e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});function ft(e,t,n){if(t=t||0,b.isFunction(t))return b.grep(e,function(e,r){var i=!!t.call(e,r,e);return i===n});if(t.nodeType)return b.grep(e,function(e){return e===t===n});if(\"string\"==typeof t){var r=b.grep(e,function(e){return 1===e.nodeType});if(ut.test(t))return b.filter(t,r,!n);t=b.filter(t,r)}return b.grep(e,function(e){return b.inArray(e,t)>=0===n})}function dt(e){var t=ht.split(\"|\"),n=e.createDocumentFragment();if(n.createElement)while(t.length)n.createElement(t.pop());return n}var ht=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",gt=/ jQuery\\d+=\"(?:null|\\d+)\"/g,mt=RegExp(\"<(?:\"+ht+\")[\\\\s/>]\",\"i\"),yt=/^\\s+/,vt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,bt=/<([\\w:]+)/,xt=/<tbody/i,wt=/<|&#?\\w+;/,Tt=/<(?:script|style|link)/i,Nt=/^(?:checkbox|radio)$/i,Ct=/checked\\s*(?:[^=]|=\\s*.checked.)/i,kt=/^$|\\/(?:java|ecma)script/i,Et=/^true\\/(.*)/,St=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,At={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:b.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},jt=dt(o),Dt=jt.appendChild(o.createElement(\"div\"));At.optgroup=At.option,At.tbody=At.tfoot=At.colgroup=At.caption=At.thead,At.th=At.td,b.fn.extend({text:function(e){return b.access(this,function(e){return e===t?b.text(this):this.empty().append((this[0]&&this[0].ownerDocument||o).createTextNode(e))},null,e,arguments.length)},wrapAll:function(e){if(b.isFunction(e))return this.each(function(t){b(this).wrapAll(e.call(this,t))});if(this[0]){var t=b(e,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstChild&&1===e.firstChild.nodeType)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(e){return b.isFunction(e)?this.each(function(t){b(this).wrapInner(e.call(this,t))}):this.each(function(){var t=b(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=b.isFunction(e);return this.each(function(n){b(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){b.nodeName(this,\"body\")||b(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&this.insertBefore(e,this.firstChild)})},before:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){var n,r=0;for(;null!=(n=this[r]);r++)(!e||b.filter(e,[n]).length>0)&&(t||1!==n.nodeType||b.cleanData(Ot(n)),n.parentNode&&(t&&b.contains(n.ownerDocument,n)&&Mt(Ot(n,\"script\")),n.parentNode.removeChild(n)));return this},empty:function(){var e,t=0;for(;null!=(e=this[t]);t++){1===e.nodeType&&b.cleanData(Ot(e,!1));while(e.firstChild)e.removeChild(e.firstChild);e.options&&b.nodeName(e,\"select\")&&(e.options.length=0)}return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return b.clone(this,e,t)})},html:function(e){return b.access(this,function(e){var n=this[0]||{},r=0,i=this.length;if(e===t)return 1===n.nodeType?n.innerHTML.replace(gt,\"\"):t;if(!(\"string\"!=typeof e||Tt.test(e)||!b.support.htmlSerialize&&mt.test(e)||!b.support.leadingWhitespace&&yt.test(e)||At[(bt.exec(e)||[\"\",\"\"])[1].toLowerCase()])){e=e.replace(vt,\"<$1></$2>\");try{for(;i>r;r++)n=this[r]||{},1===n.nodeType&&(b.cleanData(Ot(n,!1)),n.innerHTML=e);n=0}catch(o){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){var t=b.isFunction(e);return t||\"string\"==typeof e||(e=b(e).not(this).detach()),this.domManip([e],!0,function(e){var t=this.nextSibling,n=this.parentNode;n&&(b(this).remove(),n.insertBefore(e,t))})},detach:function(e){return this.remove(e,!0)},domManip:function(e,n,r){e=f.apply([],e);var i,o,a,s,u,l,c=0,p=this.length,d=this,h=p-1,g=e[0],m=b.isFunction(g);if(m||!(1>=p||\"string\"!=typeof g||b.support.checkClone)&&Ct.test(g))return this.each(function(i){var o=d.eq(i);m&&(e[0]=g.call(this,i,n?o.html():t)),o.domManip(e,n,r)});if(p&&(l=b.buildFragment(e,this[0].ownerDocument,!1,this),i=l.firstChild,1===l.childNodes.length&&(l=i),i)){for(n=n&&b.nodeName(i,\"tr\"),s=b.map(Ot(l,\"script\"),Ht),a=s.length;p>c;c++)o=l,c!==h&&(o=b.clone(o,!0,!0),a&&b.merge(s,Ot(o,\"script\"))),r.call(n&&b.nodeName(this[c],\"table\")?Lt(this[c],\"tbody\"):this[c],o,c);if(a)for(u=s[s.length-1].ownerDocument,b.map(s,qt),c=0;a>c;c++)o=s[c],kt.test(o.type||\"\")&&!b._data(o,\"globalEval\")&&b.contains(u,o)&&(o.src?b.ajax({url:o.src,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0}):b.globalEval((o.text||o.textContent||o.innerHTML||\"\").replace(St,\"\")));l=i=null}return this}});function Lt(e,t){return e.getElementsByTagName(t)[0]||e.appendChild(e.ownerDocument.createElement(t))}function Ht(e){var t=e.getAttributeNode(\"type\");return e.type=(t&&t.specified)+\"/\"+e.type,e}function qt(e){var t=Et.exec(e.type);return t?e.type=t[1]:e.removeAttribute(\"type\"),e}function Mt(e,t){var n,r=0;for(;null!=(n=e[r]);r++)b._data(n,\"globalEval\",!t||b._data(t[r],\"globalEval\"))}function _t(e,t){if(1===t.nodeType&&b.hasData(e)){var n,r,i,o=b._data(e),a=b._data(t,o),s=o.events;if(s){delete a.handle,a.events={};for(n in s)for(r=0,i=s[n].length;i>r;r++)b.event.add(t,n,s[n][r])}a.data&&(a.data=b.extend({},a.data))}}function Ft(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!b.support.noCloneEvent&&t[b.expando]){i=b._data(t);for(r in i.events)b.removeEvent(t,r,i.handle);t.removeAttribute(b.expando)}\"script\"===n&&t.text!==e.text?(Ht(t).text=e.text,qt(t)):\"object\"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),b.support.html5Clone&&e.innerHTML&&!b.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):\"input\"===n&&Nt.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):\"option\"===n?t.defaultSelected=t.selected=e.defaultSelected:(\"input\"===n||\"textarea\"===n)&&(t.defaultValue=e.defaultValue)}}b.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,t){b.fn[e]=function(e){var n,r=0,i=[],o=b(e),a=o.length-1;for(;a>=r;r++)n=r===a?this:this.clone(!0),b(o[r])[t](n),d.apply(i,n.get());return this.pushStack(i)}});function Ot(e,n){var r,o,a=0,s=typeof e.getElementsByTagName!==i?e.getElementsByTagName(n||\"*\"):typeof e.querySelectorAll!==i?e.querySelectorAll(n||\"*\"):t;if(!s)for(s=[],r=e.childNodes||e;null!=(o=r[a]);a++)!n||b.nodeName(o,n)?s.push(o):b.merge(s,Ot(o,n));return n===t||n&&b.nodeName(e,n)?b.merge([e],s):s}function Bt(e){Nt.test(e.type)&&(e.defaultChecked=e.checked)}b.extend({clone:function(e,t,n){var r,i,o,a,s,u=b.contains(e.ownerDocument,e);if(b.support.html5Clone||b.isXMLDoc(e)||!mt.test(\"<\"+e.nodeName+\">\")?o=e.cloneNode(!0):(Dt.innerHTML=e.outerHTML,Dt.removeChild(o=Dt.firstChild)),!(b.support.noCloneEvent&&b.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||b.isXMLDoc(e)))for(r=Ot(o),s=Ot(e),a=0;null!=(i=s[a]);++a)r[a]&&Ft(i,r[a]);if(t)if(n)for(s=s||Ot(e),r=r||Ot(o),a=0;null!=(i=s[a]);a++)_t(i,r[a]);else _t(e,o);return r=Ot(o,\"script\"),r.length>0&&Mt(r,!u&&Ot(e,\"script\")),r=s=i=null,o},buildFragment:function(e,t,n,r){var i,o,a,s,u,l,c,p=e.length,f=dt(t),d=[],h=0;for(;p>h;h++)if(o=e[h],o||0===o)if(\"object\"===b.type(o))b.merge(d,o.nodeType?[o]:o);else if(wt.test(o)){s=s||f.appendChild(t.createElement(\"div\")),u=(bt.exec(o)||[\"\",\"\"])[1].toLowerCase(),c=At[u]||At._default,s.innerHTML=c[1]+o.replace(vt,\"<$1></$2>\")+c[2],i=c[0];while(i--)s=s.lastChild;if(!b.support.leadingWhitespace&&yt.test(o)&&d.push(t.createTextNode(yt.exec(o)[0])),!b.support.tbody){o=\"table\"!==u||xt.test(o)?\"<table>\"!==c[1]||xt.test(o)?0:s:s.firstChild,i=o&&o.childNodes.length;while(i--)b.nodeName(l=o.childNodes[i],\"tbody\")&&!l.childNodes.length&&o.removeChild(l)\r\n}b.merge(d,s.childNodes),s.textContent=\"\";while(s.firstChild)s.removeChild(s.firstChild);s=f.lastChild}else d.push(t.createTextNode(o));s&&f.removeChild(s),b.support.appendChecked||b.grep(Ot(d,\"input\"),Bt),h=0;while(o=d[h++])if((!r||-1===b.inArray(o,r))&&(a=b.contains(o.ownerDocument,o),s=Ot(f.appendChild(o),\"script\"),a&&Mt(s),n)){i=0;while(o=s[i++])kt.test(o.type||\"\")&&n.push(o)}return s=null,f},cleanData:function(e,t){var n,r,o,a,s=0,u=b.expando,l=b.cache,p=b.support.deleteExpando,f=b.event.special;for(;null!=(n=e[s]);s++)if((t||b.acceptData(n))&&(o=n[u],a=o&&l[o])){if(a.events)for(r in a.events)f[r]?b.event.remove(n,r):b.removeEvent(n,r,a.handle);l[o]&&(delete l[o],p?delete n[u]:typeof n.removeAttribute!==i?n.removeAttribute(u):n[u]=null,c.push(o))}}});var Pt,Rt,Wt,$t=/alpha\\([^)]*\\)/i,It=/opacity\\s*=\\s*([^)]*)/,zt=/^(top|right|bottom|left)$/,Xt=/^(none|table(?!-c[ea]).+)/,Ut=/^margin/,Vt=RegExp(\"^(\"+x+\")(.*)$\",\"i\"),Yt=RegExp(\"^(\"+x+\")(?!px)[a-z%]+$\",\"i\"),Jt=RegExp(\"^([+-])=(\"+x+\")\",\"i\"),Gt={BODY:\"block\"},Qt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Kt={letterSpacing:0,fontWeight:400},Zt=[\"Top\",\"Right\",\"Bottom\",\"Left\"],en=[\"Webkit\",\"O\",\"Moz\",\"ms\"];function tn(e,t){if(t in e)return t;var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=en.length;while(i--)if(t=en[i]+n,t in e)return t;return r}function nn(e,t){return e=t||e,\"none\"===b.css(e,\"display\")||!b.contains(e.ownerDocument,e)}function rn(e,t){var n,r,i,o=[],a=0,s=e.length;for(;s>a;a++)r=e[a],r.style&&(o[a]=b._data(r,\"olddisplay\"),n=r.style.display,t?(o[a]||\"none\"!==n||(r.style.display=\"\"),\"\"===r.style.display&&nn(r)&&(o[a]=b._data(r,\"olddisplay\",un(r.nodeName)))):o[a]||(i=nn(r),(n&&\"none\"!==n||!i)&&b._data(r,\"olddisplay\",i?n:b.css(r,\"display\"))));for(a=0;s>a;a++)r=e[a],r.style&&(t&&\"none\"!==r.style.display&&\"\"!==r.style.display||(r.style.display=t?o[a]||\"\":\"none\"));return e}b.fn.extend({css:function(e,n){return b.access(this,function(e,n,r){var i,o,a={},s=0;if(b.isArray(n)){for(o=Rt(e),i=n.length;i>s;s++)a[n[s]]=b.css(e,n[s],!1,o);return a}return r!==t?b.style(e,n,r):b.css(e,n)},e,n,arguments.length>1)},show:function(){return rn(this,!0)},hide:function(){return rn(this)},toggle:function(e){var t=\"boolean\"==typeof e;return this.each(function(){(t?e:nn(this))?b(this).show():b(this).hide()})}}),b.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Wt(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":b.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(e,n,r,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,a,s,u=b.camelCase(n),l=e.style;if(n=b.cssProps[u]||(b.cssProps[u]=tn(l,u)),s=b.cssHooks[n]||b.cssHooks[u],r===t)return s&&\"get\"in s&&(o=s.get(e,!1,i))!==t?o:l[n];if(a=typeof r,\"string\"===a&&(o=Jt.exec(r))&&(r=(o[1]+1)*o[2]+parseFloat(b.css(e,n)),a=\"number\"),!(null==r||\"number\"===a&&isNaN(r)||(\"number\"!==a||b.cssNumber[u]||(r+=\"px\"),b.support.clearCloneStyle||\"\"!==r||0!==n.indexOf(\"background\")||(l[n]=\"inherit\"),s&&\"set\"in s&&(r=s.set(e,r,i))===t)))try{l[n]=r}catch(c){}}},css:function(e,n,r,i){var o,a,s,u=b.camelCase(n);return n=b.cssProps[u]||(b.cssProps[u]=tn(e.style,u)),s=b.cssHooks[n]||b.cssHooks[u],s&&\"get\"in s&&(a=s.get(e,!0,r)),a===t&&(a=Wt(e,n,i)),\"normal\"===a&&n in Kt&&(a=Kt[n]),\"\"===r||r?(o=parseFloat(a),r===!0||b.isNumeric(o)?o||0:a):a},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];i=n.apply(e,r||[]);for(o in t)e.style[o]=a[o];return i}}),e.getComputedStyle?(Rt=function(t){return e.getComputedStyle(t,null)},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s.getPropertyValue(n)||s[n]:t,l=e.style;return s&&(\"\"!==u||b.contains(e.ownerDocument,e)||(u=b.style(e,n)),Yt.test(u)&&Ut.test(n)&&(i=l.width,o=l.minWidth,a=l.maxWidth,l.minWidth=l.maxWidth=l.width=u,u=s.width,l.width=i,l.minWidth=o,l.maxWidth=a)),u}):o.documentElement.currentStyle&&(Rt=function(e){return e.currentStyle},Wt=function(e,n,r){var i,o,a,s=r||Rt(e),u=s?s[n]:t,l=e.style;return null==u&&l&&l[n]&&(u=l[n]),Yt.test(u)&&!zt.test(n)&&(i=l.left,o=e.runtimeStyle,a=o&&o.left,a&&(o.left=e.currentStyle.left),l.left=\"fontSize\"===n?\"1em\":u,u=l.pixelLeft+\"px\",l.left=i,a&&(o.left=a)),\"\"===u?\"auto\":u});function on(e,t,n){var r=Vt.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||\"px\"):t}function an(e,t,n,r,i){var o=n===(r?\"border\":\"content\")?4:\"width\"===t?1:0,a=0;for(;4>o;o+=2)\"margin\"===n&&(a+=b.css(e,n+Zt[o],!0,i)),r?(\"content\"===n&&(a-=b.css(e,\"padding\"+Zt[o],!0,i)),\"margin\"!==n&&(a-=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i))):(a+=b.css(e,\"padding\"+Zt[o],!0,i),\"padding\"!==n&&(a+=b.css(e,\"border\"+Zt[o]+\"Width\",!0,i)));return a}function sn(e,t,n){var r=!0,i=\"width\"===t?e.offsetWidth:e.offsetHeight,o=Rt(e),a=b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,o);if(0>=i||null==i){if(i=Wt(e,t,o),(0>i||null==i)&&(i=e.style[t]),Yt.test(i))return i;r=a&&(b.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+an(e,t,n||(a?\"border\":\"content\"),r,o)+\"px\"}function un(e){var t=o,n=Gt[e];return n||(n=ln(e,t),\"none\"!==n&&n||(Pt=(Pt||b(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(t.documentElement),t=(Pt[0].contentWindow||Pt[0].contentDocument).document,t.write(\"<!doctype html><html><body>\"),t.close(),n=ln(e,t),Pt.detach()),Gt[e]=n),n}function ln(e,t){var n=b(t.createElement(e)).appendTo(t.body),r=b.css(n[0],\"display\");return n.remove(),r}b.each([\"height\",\"width\"],function(e,n){b.cssHooks[n]={get:function(e,r,i){return r?0===e.offsetWidth&&Xt.test(b.css(e,\"display\"))?b.swap(e,Qt,function(){return sn(e,n,i)}):sn(e,n,i):t},set:function(e,t,r){var i=r&&Rt(e);return on(e,t,r?an(e,n,r,b.support.boxSizing&&\"border-box\"===b.css(e,\"boxSizing\",!1,i),i):0)}}}),b.support.opacity||(b.cssHooks.opacity={get:function(e,t){return It.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":t?\"1\":\"\"},set:function(e,t){var n=e.style,r=e.currentStyle,i=b.isNumeric(t)?\"alpha(opacity=\"+100*t+\")\":\"\",o=r&&r.filter||n.filter||\"\";n.zoom=1,(t>=1||\"\"===t)&&\"\"===b.trim(o.replace($t,\"\"))&&n.removeAttribute&&(n.removeAttribute(\"filter\"),\"\"===t||r&&!r.filter)||(n.filter=$t.test(o)?o.replace($t,i):o+\" \"+i)}}),b(function(){b.support.reliableMarginRight||(b.cssHooks.marginRight={get:function(e,n){return n?b.swap(e,{display:\"inline-block\"},Wt,[e,\"marginRight\"]):t}}),!b.support.pixelPosition&&b.fn.position&&b.each([\"top\",\"left\"],function(e,n){b.cssHooks[n]={get:function(e,r){return r?(r=Wt(e,n),Yt.test(r)?b(e).position()[n]+\"px\":r):t}}})}),b.expr&&b.expr.filters&&(b.expr.filters.hidden=function(e){return 0>=e.offsetWidth&&0>=e.offsetHeight||!b.support.reliableHiddenOffsets&&\"none\"===(e.style&&e.style.display||b.css(e,\"display\"))},b.expr.filters.visible=function(e){return!b.expr.filters.hidden(e)}),b.each({margin:\"\",padding:\"\",border:\"Width\"},function(e,t){b.cssHooks[e+t]={expand:function(n){var r=0,i={},o=\"string\"==typeof n?n.split(\" \"):[n];for(;4>r;r++)i[e+Zt[r]+t]=o[r]||o[r-2]||o[0];return i}},Ut.test(e)||(b.cssHooks[e+t].set=on)});var cn=/%20/g,pn=/\\[\\]$/,fn=/\\r?\\n/g,dn=/^(?:submit|button|image|reset|file)$/i,hn=/^(?:input|select|textarea|keygen)/i;b.fn.extend({serialize:function(){return b.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=b.prop(this,\"elements\");return e?b.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!b(this).is(\":disabled\")&&hn.test(this.nodeName)&&!dn.test(e)&&(this.checked||!Nt.test(e))}).map(function(e,t){var n=b(this).val();return null==n?null:b.isArray(n)?b.map(n,function(e){return{name:t.name,value:e.replace(fn,\"\\r\\n\")}}):{name:t.name,value:n.replace(fn,\"\\r\\n\")}}).get()}}),b.param=function(e,n){var r,i=[],o=function(e,t){t=b.isFunction(t)?t():null==t?\"\":t,i[i.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(t)};if(n===t&&(n=b.ajaxSettings&&b.ajaxSettings.traditional),b.isArray(e)||e.jquery&&!b.isPlainObject(e))b.each(e,function(){o(this.name,this.value)});else for(r in e)gn(r,e[r],n,o);return i.join(\"&\").replace(cn,\"+\")};function gn(e,t,n,r){var i;if(b.isArray(t))b.each(t,function(t,i){n||pn.test(e)?r(e,i):gn(e+\"[\"+(\"object\"==typeof i?t:\"\")+\"]\",i,n,r)});else if(n||\"object\"!==b.type(t))r(e,t);else for(i in t)gn(e+\"[\"+i+\"]\",t[i],n,r)}b.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(e,t){b.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),b.fn.hover=function(e,t){return this.mouseenter(e).mouseleave(t||e)};var mn,yn,vn=b.now(),bn=/\\?/,xn=/#.*$/,wn=/([?&])_=[^&]*/,Tn=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Nn=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Cn=/^(?:GET|HEAD)$/,kn=/^\\/\\//,En=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Sn=b.fn.load,An={},jn={},Dn=\"*/\".concat(\"*\");try{yn=a.href}catch(Ln){yn=o.createElement(\"a\"),yn.href=\"\",yn=yn.href}mn=En.exec(yn.toLowerCase())||[];function Hn(e){return function(t,n){\"string\"!=typeof t&&(n=t,t=\"*\");var r,i=0,o=t.toLowerCase().match(w)||[];if(b.isFunction(n))while(r=o[i++])\"+\"===r[0]?(r=r.slice(1)||\"*\",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function qn(e,n,r,i){var o={},a=e===jn;function s(u){var l;return o[u]=!0,b.each(e[u]||[],function(e,u){var c=u(n,r,i);return\"string\"!=typeof c||a||o[c]?a?!(l=c):t:(n.dataTypes.unshift(c),s(c),!1)}),l}return s(n.dataTypes[0])||!o[\"*\"]&&s(\"*\")}function Mn(e,n){var r,i,o=b.ajaxSettings.flatOptions||{};for(i in n)n[i]!==t&&((o[i]?e:r||(r={}))[i]=n[i]);return r&&b.extend(!0,e,r),e}b.fn.load=function(e,n,r){if(\"string\"!=typeof e&&Sn)return Sn.apply(this,arguments);var i,o,a,s=this,u=e.indexOf(\" \");return u>=0&&(i=e.slice(u,e.length),e=e.slice(0,u)),b.isFunction(n)?(r=n,n=t):n&&\"object\"==typeof n&&(a=\"POST\"),s.length>0&&b.ajax({url:e,type:a,dataType:\"html\",data:n}).done(function(e){o=arguments,s.html(i?b(\"<div>\").append(b.parseHTML(e)).find(i):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},b.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){b.fn[t]=function(e){return this.on(t,e)}}),b.each([\"get\",\"post\"],function(e,n){b[n]=function(e,r,i,o){return b.isFunction(r)&&(o=o||i,i=r,r=t),b.ajax({url:e,type:n,dataType:o,data:r,success:i})}}),b.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:yn,type:\"GET\",isLocal:Nn.test(mn[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":Dn,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\"},converters:{\"* text\":e.String,\"text html\":!0,\"text json\":b.parseJSON,\"text xml\":b.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Mn(Mn(e,b.ajaxSettings),t):Mn(b.ajaxSettings,e)},ajaxPrefilter:Hn(An),ajaxTransport:Hn(jn),ajax:function(e,n){\"object\"==typeof e&&(n=e,e=t),n=n||{};var r,i,o,a,s,u,l,c,p=b.ajaxSetup({},n),f=p.context||p,d=p.context&&(f.nodeType||f.jquery)?b(f):b.event,h=b.Deferred(),g=b.Callbacks(\"once memory\"),m=p.statusCode||{},y={},v={},x=0,T=\"canceled\",N={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=v[n]=v[n]||e,y[e]=t),this},overrideMimeType:function(e){return x||(p.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)m[t]=[m[t],e[t]];else N.always(e[N.status]);return this},abort:function(e){var t=e||T;return l&&l.abort(t),k(0,t),this}};if(h.promise(N).complete=g.add,N.success=N.done,N.error=N.fail,p.url=((e||p.url||yn)+\"\").replace(xn,\"\").replace(kn,mn[1]+\"//\"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=b.trim(p.dataType||\"*\").toLowerCase().match(w)||[\"\"],null==p.crossDomain&&(r=En.exec(p.url.toLowerCase()),p.crossDomain=!(!r||r[1]===mn[1]&&r[2]===mn[2]&&(r[3]||(\"http:\"===r[1]?80:443))==(mn[3]||(\"http:\"===mn[1]?80:443)))),p.data&&p.processData&&\"string\"!=typeof p.data&&(p.data=b.param(p.data,p.traditional)),qn(An,p,n,N),2===x)return N;u=p.global,u&&0===b.active++&&b.event.trigger(\"ajaxStart\"),p.type=p.type.toUpperCase(),p.hasContent=!Cn.test(p.type),o=p.url,p.hasContent||(p.data&&(o=p.url+=(bn.test(o)?\"&\":\"?\")+p.data,delete p.data),p.cache===!1&&(p.url=wn.test(o)?o.replace(wn,\"$1_=\"+vn++):o+(bn.test(o)?\"&\":\"?\")+\"_=\"+vn++)),p.ifModified&&(b.lastModified[o]&&N.setRequestHeader(\"If-Modified-Since\",b.lastModified[o]),b.etag[o]&&N.setRequestHeader(\"If-None-Match\",b.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&N.setRequestHeader(\"Content-Type\",p.contentType),N.setRequestHeader(\"Accept\",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+(\"*\"!==p.dataTypes[0]?\", \"+Dn+\"; q=0.01\":\"\"):p.accepts[\"*\"]);for(i in p.headers)N.setRequestHeader(i,p.headers[i]);if(p.beforeSend&&(p.beforeSend.call(f,N,p)===!1||2===x))return N.abort();T=\"abort\";for(i in{success:1,error:1,complete:1})N[i](p[i]);if(l=qn(jn,p,n,N)){N.readyState=1,u&&d.trigger(\"ajaxSend\",[N,p]),p.async&&p.timeout>0&&(s=setTimeout(function(){N.abort(\"timeout\")},p.timeout));try{x=1,l.send(y,k)}catch(C){if(!(2>x))throw C;k(-1,C)}}else k(-1,\"No Transport\");function k(e,n,r,i){var c,y,v,w,T,C=n;2!==x&&(x=2,s&&clearTimeout(s),l=t,a=i||\"\",N.readyState=e>0?4:0,r&&(w=_n(p,N,r)),e>=200&&300>e||304===e?(p.ifModified&&(T=N.getResponseHeader(\"Last-Modified\"),T&&(b.lastModified[o]=T),T=N.getResponseHeader(\"etag\"),T&&(b.etag[o]=T)),204===e?(c=!0,C=\"nocontent\"):304===e?(c=!0,C=\"notmodified\"):(c=Fn(p,w),C=c.state,y=c.data,v=c.error,c=!v)):(v=C,(e||!C)&&(C=\"error\",0>e&&(e=0))),N.status=e,N.statusText=(n||C)+\"\",c?h.resolveWith(f,[y,C,N]):h.rejectWith(f,[N,C,v]),N.statusCode(m),m=t,u&&d.trigger(c?\"ajaxSuccess\":\"ajaxError\",[N,p,c?y:v]),g.fireWith(f,[N,C]),u&&(d.trigger(\"ajaxComplete\",[N,p]),--b.active||b.event.trigger(\"ajaxStop\")))}return N},getScript:function(e,n){return b.get(e,t,n,\"script\")},getJSON:function(e,t,n){return b.get(e,t,n,\"json\")}});function _n(e,n,r){var i,o,a,s,u=e.contents,l=e.dataTypes,c=e.responseFields;for(s in c)s in r&&(n[c[s]]=r[s]);while(\"*\"===l[0])l.shift(),o===t&&(o=e.mimeType||n.getResponseHeader(\"Content-Type\"));if(o)for(s in u)if(u[s]&&u[s].test(o)){l.unshift(s);break}if(l[0]in r)a=l[0];else{for(s in r){if(!l[0]||e.converters[s+\" \"+l[0]]){a=s;break}i||(i=s)}a=a||i}return a?(a!==l[0]&&l.unshift(a),r[a]):t}function Fn(e,t){var n,r,i,o,a={},s=0,u=e.dataTypes.slice(),l=u[0];if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u[1])for(i in e.converters)a[i.toLowerCase()]=e.converters[i];for(;r=u[++s];)if(\"*\"!==r){if(\"*\"!==l&&l!==r){if(i=a[l+\" \"+r]||a[\"* \"+r],!i)for(n in a)if(o=n.split(\" \"),o[1]===r&&(i=a[l+\" \"+o[0]]||a[\"* \"+o[0]])){i===!0?i=a[n]:a[n]!==!0&&(r=o[0],u.splice(s--,0,r));break}if(i!==!0)if(i&&e[\"throws\"])t=i(t);else try{t=i(t)}catch(c){return{state:\"parsererror\",error:i?c:\"No conversion from \"+l+\" to \"+r}}}l=r}return{state:\"success\",data:t}}b.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(e){return b.globalEval(e),e}}}),b.ajaxPrefilter(\"script\",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\",e.global=!1)}),b.ajaxTransport(\"script\",function(e){if(e.crossDomain){var n,r=o.head||b(\"head\")[0]||o.documentElement;return{send:function(t,i){n=o.createElement(\"script\"),n.async=!0,e.scriptCharset&&(n.charset=e.scriptCharset),n.src=e.url,n.onload=n.onreadystatechange=function(e,t){(t||!n.readyState||/loaded|complete/.test(n.readyState))&&(n.onload=n.onreadystatechange=null,n.parentNode&&n.parentNode.removeChild(n),n=null,t||i(200,\"success\"))},r.insertBefore(n,r.firstChild)},abort:function(){n&&n.onload(t,!0)}}}});var On=[],Bn=/(=)\\?(?=&|$)|\\?\\?/;b.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=On.pop()||b.expando+\"_\"+vn++;return this[e]=!0,e}}),b.ajaxPrefilter(\"json jsonp\",function(n,r,i){var o,a,s,u=n.jsonp!==!1&&(Bn.test(n.url)?\"url\":\"string\"==typeof n.data&&!(n.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Bn.test(n.data)&&\"data\");return u||\"jsonp\"===n.dataTypes[0]?(o=n.jsonpCallback=b.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,u?n[u]=n[u].replace(Bn,\"$1\"+o):n.jsonp!==!1&&(n.url+=(bn.test(n.url)?\"&\":\"?\")+n.jsonp+\"=\"+o),n.converters[\"script json\"]=function(){return s||b.error(o+\" was not called\"),s[0]},n.dataTypes[0]=\"json\",a=e[o],e[o]=function(){s=arguments},i.always(function(){e[o]=a,n[o]&&(n.jsonpCallback=r.jsonpCallback,On.push(o)),s&&b.isFunction(a)&&a(s[0]),s=a=t}),\"script\"):t});var Pn,Rn,Wn=0,$n=e.ActiveXObject&&function(){var e;for(e in Pn)Pn[e](t,!0)};function In(){try{return new e.XMLHttpRequest}catch(t){}}function zn(){try{return new e.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(t){}}b.ajaxSettings.xhr=e.ActiveXObject?function(){return!this.isLocal&&In()||zn()}:In,Rn=b.ajaxSettings.xhr(),b.support.cors=!!Rn&&\"withCredentials\"in Rn,Rn=b.support.ajax=!!Rn,Rn&&b.ajaxTransport(function(n){if(!n.crossDomain||b.support.cors){var r;return{send:function(i,o){var a,s,u=n.xhr();if(n.username?u.open(n.type,n.url,n.async,n.username,n.password):u.open(n.type,n.url,n.async),n.xhrFields)for(s in n.xhrFields)u[s]=n.xhrFields[s];n.mimeType&&u.overrideMimeType&&u.overrideMimeType(n.mimeType),n.crossDomain||i[\"X-Requested-With\"]||(i[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(s in i)u.setRequestHeader(s,i[s])}catch(l){}u.send(n.hasContent&&n.data||null),r=function(e,i){var s,l,c,p;try{if(r&&(i||4===u.readyState))if(r=t,a&&(u.onreadystatechange=b.noop,$n&&delete Pn[a]),i)4!==u.readyState&&u.abort();else{p={},s=u.status,l=u.getAllResponseHeaders(),\"string\"==typeof u.responseText&&(p.text=u.responseText);try{c=u.statusText}catch(f){c=\"\"}s||!n.isLocal||n.crossDomain?1223===s&&(s=204):s=p.text?200:404}}catch(d){i||o(-1,d)}p&&o(s,c,p,l)},n.async?4===u.readyState?setTimeout(r):(a=++Wn,$n&&(Pn||(Pn={},b(e).unload($n)),Pn[a]=r),u.onreadystatechange=r):r()},abort:function(){r&&r(t,!0)}}}});var Xn,Un,Vn=/^(?:toggle|show|hide)$/,Yn=RegExp(\"^(?:([+-])=|)(\"+x+\")([a-z%]*)$\",\"i\"),Jn=/queueHooks$/,Gn=[nr],Qn={\"*\":[function(e,t){var n,r,i=this.createTween(e,t),o=Yn.exec(t),a=i.cur(),s=+a||0,u=1,l=20;if(o){if(n=+o[2],r=o[3]||(b.cssNumber[e]?\"\":\"px\"),\"px\"!==r&&s){s=b.css(i.elem,e,!0)||n||1;do u=u||\".5\",s/=u,b.style(i.elem,e,s+r);while(u!==(u=i.cur()/a)&&1!==u&&--l)}i.unit=r,i.start=s,i.end=o[1]?s+(o[1]+1)*n:n}return i}]};function Kn(){return setTimeout(function(){Xn=t}),Xn=b.now()}function Zn(e,t){b.each(t,function(t,n){var r=(Qn[t]||[]).concat(Qn[\"*\"]),i=0,o=r.length;for(;o>i;i++)if(r[i].call(e,t,n))return})}function er(e,t,n){var r,i,o=0,a=Gn.length,s=b.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;var t=Xn||Kn(),n=Math.max(0,l.startTime+l.duration-t),r=n/l.duration||0,o=1-r,a=0,u=l.tweens.length;for(;u>a;a++)l.tweens[a].run(o);return s.notifyWith(e,[l,o,n]),1>o&&u?n:(s.resolveWith(e,[l]),!1)},l=s.promise({elem:e,props:b.extend({},t),opts:b.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Xn||Kn(),duration:n.duration,tweens:[],createTween:function(t,n){var r=b.Tween(e,l.opts,t,n,l.opts.specialEasing[t]||l.opts.easing);return l.tweens.push(r),r},stop:function(t){var n=0,r=t?l.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)l.tweens[n].run(1);return t?s.resolveWith(e,[l,t]):s.rejectWith(e,[l,t]),this}}),c=l.props;for(tr(c,l.opts.specialEasing);a>o;o++)if(r=Gn[o].call(l,e,c,l.opts))return r;return Zn(l,c),b.isFunction(l.opts.start)&&l.opts.start.call(e,l),b.fx.timer(b.extend(u,{elem:e,anim:l,queue:l.opts.queue})),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always)}function tr(e,t){var n,r,i,o,a;for(i in e)if(r=b.camelCase(i),o=t[r],n=e[i],b.isArray(n)&&(o=n[1],n=e[i]=n[0]),i!==r&&(e[r]=n,delete e[i]),a=b.cssHooks[r],a&&\"expand\"in a){n=a.expand(n),delete e[r];for(i in n)i in e||(e[i]=n[i],t[i]=o)}else t[r]=o}b.Animation=b.extend(er,{tweener:function(e,t){b.isFunction(e)?(t=e,e=[\"*\"]):e=e.split(\" \");var n,r=0,i=e.length;for(;i>r;r++)n=e[r],Qn[n]=Qn[n]||[],Qn[n].unshift(t)},prefilter:function(e,t){t?Gn.unshift(e):Gn.push(e)}});function nr(e,t,n){var r,i,o,a,s,u,l,c,p,f=this,d=e.style,h={},g=[],m=e.nodeType&&nn(e);n.queue||(c=b._queueHooks(e,\"fx\"),null==c.unqueued&&(c.unqueued=0,p=c.empty.fire,c.empty.fire=function(){c.unqueued||p()}),c.unqueued++,f.always(function(){f.always(function(){c.unqueued--,b.queue(e,\"fx\").length||c.empty.fire()})})),1===e.nodeType&&(\"height\"in t||\"width\"in t)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],\"inline\"===b.css(e,\"display\")&&\"none\"===b.css(e,\"float\")&&(b.support.inlineBlockNeedsLayout&&\"inline\"!==un(e.nodeName)?d.zoom=1:d.display=\"inline-block\")),n.overflow&&(d.overflow=\"hidden\",b.support.shrinkWrapBlocks||f.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]}));for(i in t)if(a=t[i],Vn.exec(a)){if(delete t[i],u=u||\"toggle\"===a,a===(m?\"hide\":\"show\"))continue;g.push(i)}if(o=g.length){s=b._data(e,\"fxshow\")||b._data(e,\"fxshow\",{}),\"hidden\"in s&&(m=s.hidden),u&&(s.hidden=!m),m?b(e).show():f.done(function(){b(e).hide()}),f.done(function(){var t;b._removeData(e,\"fxshow\");for(t in h)b.style(e,t,h[t])});for(i=0;o>i;i++)r=g[i],l=f.createTween(r,m?s[r]:0),h[r]=s[r]||b.style(e,r),r in s||(s[r]=l.start,m&&(l.end=l.start,l.start=\"width\"===r||\"height\"===r?1:0))}}function rr(e,t,n,r,i){return new rr.prototype.init(e,t,n,r,i)}b.Tween=rr,rr.prototype={constructor:rr,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||\"swing\",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(b.cssNumber[n]?\"\":\"px\")},cur:function(){var e=rr.propHooks[this.prop];return e&&e.get?e.get(this):rr.propHooks._default.get(this)},run:function(e){var t,n=rr.propHooks[this.prop];return this.pos=t=this.options.duration?b.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):rr.propHooks._default.set(this),this}},rr.prototype.init.prototype=rr.prototype,rr.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=b.css(e.elem,e.prop,\"\"),t&&\"auto\"!==t?t:0):e.elem[e.prop]},set:function(e){b.fx.step[e.prop]?b.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[b.cssProps[e.prop]]||b.cssHooks[e.prop])?b.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},rr.propHooks.scrollTop=rr.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},b.each([\"toggle\",\"show\",\"hide\"],function(e,t){var n=b.fn[t];b.fn[t]=function(e,r,i){return null==e||\"boolean\"==typeof e?n.apply(this,arguments):this.animate(ir(t,!0),e,r,i)}}),b.fn.extend({fadeTo:function(e,t,n,r){return this.filter(nn).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=b.isEmptyObject(e),o=b.speed(t,n,r),a=function(){var t=er(this,b.extend({},e),o);a.finish=function(){t.stop(!0)},(i||b._data(this,\"finish\"))&&t.stop(!0)};return a.finish=a,i||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(e,n,r){var i=function(e){var t=e.stop;delete e.stop,t(r)};return\"string\"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||\"fx\",[]),this.each(function(){var t=!0,n=null!=e&&e+\"queueHooks\",o=b.timers,a=b._data(this);if(n)a[n]&&a[n].stop&&i(a[n]);else for(n in a)a[n]&&a[n].stop&&Jn.test(n)&&i(a[n]);for(n=o.length;n--;)o[n].elem!==this||null!=e&&o[n].queue!==e||(o[n].anim.stop(r),t=!1,o.splice(n,1));(t||!r)&&b.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||\"fx\"),this.each(function(){var t,n=b._data(this),r=n[e+\"queue\"],i=n[e+\"queueHooks\"],o=b.timers,a=r?r.length:0;for(n.finish=!0,b.queue(this,e,[]),i&&i.cur&&i.cur.finish&&i.cur.finish.call(this),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;a>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}});function ir(e,t){var n,r={height:e},i=0;for(t=t?1:0;4>i;i+=2-t)n=Zt[i],r[\"margin\"+n]=r[\"padding\"+n]=e;return t&&(r.opacity=r.width=e),r}b.each({slideDown:ir(\"show\"),slideUp:ir(\"hide\"),slideToggle:ir(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,t){b.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),b.speed=function(e,t,n){var r=e&&\"object\"==typeof e?b.extend({},e):{complete:n||!n&&t||b.isFunction(e)&&e,duration:e,easing:n&&t||t&&!b.isFunction(t)&&t};return r.duration=b.fx.off?0:\"number\"==typeof r.duration?r.duration:r.duration in b.fx.speeds?b.fx.speeds[r.duration]:b.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){b.isFunction(r.old)&&r.old.call(this),r.queue&&b.dequeue(this,r.queue)},r},b.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},b.timers=[],b.fx=rr.prototype.init,b.fx.tick=function(){var e,n=b.timers,r=0;for(Xn=b.now();n.length>r;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||b.fx.stop(),Xn=t},b.fx.timer=function(e){e()&&b.timers.push(e)&&b.fx.start()},b.fx.interval=13,b.fx.start=function(){Un||(Un=setInterval(b.fx.tick,b.fx.interval))},b.fx.stop=function(){clearInterval(Un),Un=null},b.fx.speeds={slow:600,fast:200,_default:400},b.fx.step={},b.expr&&b.expr.filters&&(b.expr.filters.animated=function(e){return b.grep(b.timers,function(t){return e===t.elem}).length}),b.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){b.offset.setOffset(this,e,t)});var n,r,o={top:0,left:0},a=this[0],s=a&&a.ownerDocument;if(s)return n=s.documentElement,b.contains(n,a)?(typeof a.getBoundingClientRect!==i&&(o=a.getBoundingClientRect()),r=or(s),{top:o.top+(r.pageYOffset||n.scrollTop)-(n.clientTop||0),left:o.left+(r.pageXOffset||n.scrollLeft)-(n.clientLeft||0)}):o},b.offset={setOffset:function(e,t,n){var r=b.css(e,\"position\");\"static\"===r&&(e.style.position=\"relative\");var i=b(e),o=i.offset(),a=b.css(e,\"top\"),s=b.css(e,\"left\"),u=(\"absolute\"===r||\"fixed\"===r)&&b.inArray(\"auto\",[a,s])>-1,l={},c={},p,f;u?(c=i.position(),p=c.top,f=c.left):(p=parseFloat(a)||0,f=parseFloat(s)||0),b.isFunction(t)&&(t=t.call(e,n,o)),null!=t.top&&(l.top=t.top-o.top+p),null!=t.left&&(l.left=t.left-o.left+f),\"using\"in t?t.using.call(e,l):i.css(l)}},b.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return\"fixed\"===b.css(r,\"position\")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),b.nodeName(e[0],\"html\")||(n=e.offset()),n.top+=b.css(e[0],\"borderTopWidth\",!0),n.left+=b.css(e[0],\"borderLeftWidth\",!0)),{top:t.top-n.top-b.css(r,\"marginTop\",!0),left:t.left-n.left-b.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent||o.documentElement;while(e&&!b.nodeName(e,\"html\")&&\"static\"===b.css(e,\"position\"))e=e.offsetParent;return e||o.documentElement})}}),b.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(e,n){var r=/Y/.test(n);b.fn[e]=function(i){return b.access(this,function(e,i,o){var a=or(e);return o===t?a?n in a?a[n]:a.document.documentElement[i]:e[i]:(a?a.scrollTo(r?b(a).scrollLeft():o,r?o:b(a).scrollTop()):e[i]=o,t)},e,i,arguments.length,null)}});function or(e){return b.isWindow(e)?e:9===e.nodeType?e.defaultView||e.parentWindow:!1}b.each({Height:\"height\",Width:\"width\"},function(e,n){b.each({padding:\"inner\"+e,content:n,\"\":\"outer\"+e},function(r,i){b.fn[i]=function(i,o){var a=arguments.length&&(r||\"boolean\"!=typeof i),s=r||(i===!0||o===!0?\"margin\":\"border\");return b.access(this,function(n,r,i){var o;return b.isWindow(n)?n.document.documentElement[\"client\"+e]:9===n.nodeType?(o=n.documentElement,Math.max(n.body[\"scroll\"+e],o[\"scroll\"+e],n.body[\"offset\"+e],o[\"offset\"+e],o[\"client\"+e])):i===t?b.css(n,r,s):b.style(n,r,i,s)},n,a?i:t,a,null)}})}),e.jQuery=e.$=b,\"function\"==typeof define&&define.amd&&define.amd.jQuery&&define(\"jquery\",[],function(){return b})})(window);",
    "\n// Knockout JavaScript library v2.2.1\r\n// (c) Steven Sanderson - http://knockoutjs.com/\r\n// License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n\r\n(function() {function j(w){throw w;}var m=!0,p=null,r=!1;function u(w){return function(){return w}};var x=window,y=document,ga=navigator,F=window.jQuery,I=void 0;\r\nfunction L(w){function ha(a,d,c,e,f){var g=[];a=b.j(function(){var a=d(c,f)||[];0<g.length&&(b.a.Ya(M(g),a),e&&b.r.K(e,p,[c,a,f]));g.splice(0,g.length);b.a.P(g,a)},p,{W:a,Ka:function(){return 0==g.length||!b.a.X(g[0])}});return{M:g,j:a.pa()?a:I}}function M(a){for(;a.length&&!b.a.X(a[0]);)a.splice(0,1);if(1<a.length){for(var d=a[0],c=a[a.length-1],e=[d];d!==c;){d=d.nextSibling;if(!d)return;e.push(d)}Array.prototype.splice.apply(a,[0,a.length].concat(e))}return a}function S(a,b,c,e,f){var g=Math.min,\r\nh=Math.max,k=[],l,n=a.length,q,s=b.length,v=s-n||1,G=n+s+1,J,A,z;for(l=0;l<=n;l++){A=J;k.push(J=[]);z=g(s,l+v);for(q=h(0,l-1);q<=z;q++)J[q]=q?l?a[l-1]===b[q-1]?A[q-1]:g(A[q]||G,J[q-1]||G)+1:q+1:l+1}g=[];h=[];v=[];l=n;for(q=s;l||q;)s=k[l][q]-1,q&&s===k[l][q-1]?h.push(g[g.length]={status:c,value:b[--q],index:q}):l&&s===k[l-1][q]?v.push(g[g.length]={status:e,value:a[--l],index:l}):(g.push({status:\"retained\",value:b[--q]}),--l);if(h.length&&v.length){a=10*n;var t;for(b=c=0;(f||b<a)&&(t=h[c]);c++){for(e=\r\n0;k=v[e];e++)if(t.value===k.value){t.moved=k.index;k.moved=t.index;v.splice(e,1);b=e=0;break}b+=e}}return g.reverse()}function T(a,d,c,e,f){f=f||{};var g=a&&N(a),g=g&&g.ownerDocument,h=f.templateEngine||O;b.za.vb(c,h,g);c=h.renderTemplate(c,e,f,g);(\"number\"!=typeof c.length||0<c.length&&\"number\"!=typeof c[0].nodeType)&&j(Error(\"Template engine must return an array of DOM nodes\"));g=r;switch(d){case \"replaceChildren\":b.e.N(a,c);g=m;break;case \"replaceNode\":b.a.Ya(a,c);g=m;break;case \"ignoreTargetNode\":break;\r\ndefault:j(Error(\"Unknown renderMode: \"+d))}g&&(U(c,e),f.afterRender&&b.r.K(f.afterRender,p,[c,e.$data]));return c}function N(a){return a.nodeType?a:0<a.length?a[0]:p}function U(a,d){if(a.length){var c=a[0],e=a[a.length-1];V(c,e,function(a){b.Da(d,a)});V(c,e,function(a){b.s.ib(a,[d])})}}function V(a,d,c){var e;for(d=b.e.nextSibling(d);a&&(e=a)!==d;)a=b.e.nextSibling(e),(1===e.nodeType||8===e.nodeType)&&c(e)}function W(a,d,c){a=b.g.aa(a);for(var e=b.g.Q,f=0;f<a.length;f++){var g=a[f].key;if(e.hasOwnProperty(g)){var h=\r\ne[g];\"function\"===typeof h?(g=h(a[f].value))&&j(Error(g)):h||j(Error(\"This template engine does not support the '\"+g+\"' binding within its templates\"))}}a=\"ko.__tr_ambtns(function($context,$element){return(function(){return{ \"+b.g.ba(a)+\" } })()})\";return c.createJavaScriptEvaluatorBlock(a)+d}function X(a,d,c,e){function f(a){return function(){return k[a]}}function g(){return k}var h=0,k,l;b.j(function(){var n=c&&c instanceof b.z?c:new b.z(b.a.d(c)),q=n.$data;e&&b.eb(a,n);if(k=(\"function\"==typeof d?\r\nd(n,a):d)||b.J.instance.getBindings(a,n)){if(0===h){h=1;for(var s in k){var v=b.c[s];v&&8===a.nodeType&&!b.e.I[s]&&j(Error(\"The binding '\"+s+\"' cannot be used with virtual elements\"));if(v&&\"function\"==typeof v.init&&(v=(0,v.init)(a,f(s),g,q,n))&&v.controlsDescendantBindings)l!==I&&j(Error(\"Multiple bindings (\"+l+\" and \"+s+\") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\")),l=s}h=2}if(2===h)for(s in k)(v=b.c[s])&&\"function\"==\r\ntypeof v.update&&(0,v.update)(a,f(s),g,q,n)}},p,{W:a});return{Nb:l===I}}function Y(a,d,c){var e=m,f=1===d.nodeType;f&&b.e.Ta(d);if(f&&c||b.J.instance.nodeHasBindings(d))e=X(d,p,a,c).Nb;e&&Z(a,d,!f)}function Z(a,d,c){for(var e=b.e.firstChild(d);d=e;)e=b.e.nextSibling(d),Y(a,d,c)}function $(a,b){var c=aa(a,b);return c?0<c.length?c[c.length-1].nextSibling:a.nextSibling:p}function aa(a,b){for(var c=a,e=1,f=[];c=c.nextSibling;){if(H(c)&&(e--,0===e))return f;f.push(c);B(c)&&e++}b||j(Error(\"Cannot find closing comment tag to match: \"+\r\na.nodeValue));return p}function H(a){return 8==a.nodeType&&(K?a.text:a.nodeValue).match(ia)}function B(a){return 8==a.nodeType&&(K?a.text:a.nodeValue).match(ja)}function P(a,b){for(var c=p;a!=c;)c=a,a=a.replace(ka,function(a,c){return b[c]});return a}function la(){var a=[],d=[];this.save=function(c,e){var f=b.a.i(a,c);0<=f?d[f]=e:(a.push(c),d.push(e))};this.get=function(c){c=b.a.i(a,c);return 0<=c?d[c]:I}}function ba(a,b,c){function e(e){var g=b(a[e]);switch(typeof g){case \"boolean\":case \"number\":case \"string\":case \"function\":f[e]=\r\ng;break;case \"object\":case \"undefined\":var h=c.get(g);f[e]=h!==I?h:ba(g,b,c)}}c=c||new la;a=b(a);if(!(\"object\"==typeof a&&a!==p&&a!==I&&!(a instanceof Date)))return a;var f=a instanceof Array?[]:{};c.save(a,f);var g=a;if(g instanceof Array){for(var h=0;h<g.length;h++)e(h);\"function\"==typeof g.toJSON&&e(\"toJSON\")}else for(h in g)e(h);return f}function ca(a,d){if(a)if(8==a.nodeType){var c=b.s.Ua(a.nodeValue);c!=p&&d.push({sb:a,Fb:c})}else if(1==a.nodeType)for(var c=0,e=a.childNodes,f=e.length;c<f;c++)ca(e[c],\r\nd)}function Q(a,d,c,e){b.c[a]={init:function(a){b.a.f.set(a,da,{});return{controlsDescendantBindings:m}},update:function(a,g,h,k,l){h=b.a.f.get(a,da);g=b.a.d(g());k=!c!==!g;var n=!h.Za;if(n||d||k!==h.qb)n&&(h.Za=b.a.Ia(b.e.childNodes(a),m)),k?(n||b.e.N(a,b.a.Ia(h.Za)),b.Ea(e?e(l,g):l,a)):b.e.Y(a),h.qb=k}};b.g.Q[a]=r;b.e.I[a]=m}function ea(a,d,c){c&&d!==b.k.q(a)&&b.k.T(a,d);d!==b.k.q(a)&&b.r.K(b.a.Ba,p,[a,\"change\"])}var b=\"undefined\"!==typeof w?w:{};b.b=function(a,d){for(var c=a.split(\".\"),e=b,f=0;f<\r\nc.length-1;f++)e=e[c[f]];e[c[c.length-1]]=d};b.p=function(a,b,c){a[b]=c};b.version=\"2.2.1\";b.b(\"version\",b.version);b.a=new function(){function a(a,d){if(\"input\"!==b.a.u(a)||!a.type||\"click\"!=d.toLowerCase())return r;var c=a.type;return\"checkbox\"==c||\"radio\"==c}var d=/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g,c={},e={};c[/Firefox\\/2/i.test(ga.userAgent)?\"KeyboardEvent\":\"UIEvents\"]=[\"keyup\",\"keydown\",\"keypress\"];c.MouseEvents=\"click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave\".split(\" \");\r\nfor(var f in c){var g=c[f];if(g.length)for(var h=0,k=g.length;h<k;h++)e[g[h]]=f}var l={propertychange:m},n,c=3;f=y.createElement(\"div\");for(g=f.getElementsByTagName(\"i\");f.innerHTML=\"\\x3c!--[if gt IE \"+ ++c+\"]><i></i><![endif]--\\x3e\",g[0];);n=4<c?c:I;return{Na:[\"authenticity_token\",/^__RequestVerificationToken(_.*)?$/],o:function(a,b){for(var d=0,c=a.length;d<c;d++)b(a[d])},i:function(a,b){if(\"function\"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(a,b);for(var d=0,c=a.length;d<\r\nc;d++)if(a[d]===b)return d;return-1},lb:function(a,b,d){for(var c=0,e=a.length;c<e;c++)if(b.call(d,a[c]))return a[c];return p},ga:function(a,d){var c=b.a.i(a,d);0<=c&&a.splice(c,1)},Ga:function(a){a=a||[];for(var d=[],c=0,e=a.length;c<e;c++)0>b.a.i(d,a[c])&&d.push(a[c]);return d},V:function(a,b){a=a||[];for(var d=[],c=0,e=a.length;c<e;c++)d.push(b(a[c]));return d},fa:function(a,b){a=a||[];for(var d=[],c=0,e=a.length;c<e;c++)b(a[c])&&d.push(a[c]);return d},P:function(a,b){if(b instanceof Array)a.push.apply(a,\r\nb);else for(var d=0,c=b.length;d<c;d++)a.push(b[d]);return a},extend:function(a,b){if(b)for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);return a},ka:function(a){for(;a.firstChild;)b.removeNode(a.firstChild)},Hb:function(a){a=b.a.L(a);for(var d=y.createElement(\"div\"),c=0,e=a.length;c<e;c++)d.appendChild(b.A(a[c]));return d},Ia:function(a,d){for(var c=0,e=a.length,g=[];c<e;c++){var f=a[c].cloneNode(m);g.push(d?b.A(f):f)}return g},N:function(a,d){b.a.ka(a);if(d)for(var c=0,e=d.length;c<e;c++)a.appendChild(d[c])},\r\nYa:function(a,d){var c=a.nodeType?[a]:a;if(0<c.length){for(var e=c[0],g=e.parentNode,f=0,h=d.length;f<h;f++)g.insertBefore(d[f],e);f=0;for(h=c.length;f<h;f++)b.removeNode(c[f])}},bb:function(a,b){7>n?a.setAttribute(\"selected\",b):a.selected=b},D:function(a){return(a||\"\").replace(d,\"\")},Rb:function(a,d){for(var c=[],e=(a||\"\").split(d),f=0,g=e.length;f<g;f++){var h=b.a.D(e[f]);\"\"!==h&&c.push(h)}return c},Ob:function(a,b){a=a||\"\";return b.length>a.length?r:a.substring(0,b.length)===b},tb:function(a,b){if(b.compareDocumentPosition)return 16==\r\n(b.compareDocumentPosition(a)&16);for(;a!=p;){if(a==b)return m;a=a.parentNode}return r},X:function(a){return b.a.tb(a,a.ownerDocument)},u:function(a){return a&&a.tagName&&a.tagName.toLowerCase()},n:function(b,d,c){var e=n&&l[d];if(!e&&\"undefined\"!=typeof F){if(a(b,d)){var f=c;c=function(a,b){var d=this.checked;b&&(this.checked=b.nb!==m);f.call(this,a);this.checked=d}}F(b).bind(d,c)}else!e&&\"function\"==typeof b.addEventListener?b.addEventListener(d,c,r):\"undefined\"!=typeof b.attachEvent?b.attachEvent(\"on\"+\r\nd,function(a){c.call(b,a)}):j(Error(\"Browser doesn't support addEventListener or attachEvent\"))},Ba:function(b,d){(!b||!b.nodeType)&&j(Error(\"element must be a DOM node when calling triggerEvent\"));if(\"undefined\"!=typeof F){var c=[];a(b,d)&&c.push({nb:b.checked});F(b).trigger(d,c)}else\"function\"==typeof y.createEvent?\"function\"==typeof b.dispatchEvent?(c=y.createEvent(e[d]||\"HTMLEvents\"),c.initEvent(d,m,m,x,0,0,0,0,0,r,r,r,r,0,b),b.dispatchEvent(c)):j(Error(\"The supplied element doesn't support dispatchEvent\")):\r\n\"undefined\"!=typeof b.fireEvent?(a(b,d)&&(b.checked=b.checked!==m),b.fireEvent(\"on\"+d)):j(Error(\"Browser doesn't support triggering events\"))},d:function(a){return b.$(a)?a():a},ua:function(a){return b.$(a)?a.t():a},da:function(a,d,c){if(d){var e=/[\\w-]+/g,f=a.className.match(e)||[];b.a.o(d.match(e),function(a){var d=b.a.i(f,a);0<=d?c||f.splice(d,1):c&&f.push(a)});a.className=f.join(\" \")}},cb:function(a,d){var c=b.a.d(d);if(c===p||c===I)c=\"\";if(3===a.nodeType)a.data=c;else{var e=b.e.firstChild(a);\r\n!e||3!=e.nodeType||b.e.nextSibling(e)?b.e.N(a,[y.createTextNode(c)]):e.data=c;b.a.wb(a)}},ab:function(a,b){a.name=b;if(7>=n)try{a.mergeAttributes(y.createElement(\"<input name='\"+a.name+\"'/>\"),r)}catch(d){}},wb:function(a){9<=n&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},ub:function(a){if(9<=n){var b=a.style.width;a.style.width=0;a.style.width=b}},Lb:function(a,d){a=b.a.d(a);d=b.a.d(d);for(var c=[],e=a;e<=d;e++)c.push(e);return c},L:function(a){for(var b=[],d=0,c=a.length;d<\r\nc;d++)b.push(a[d]);return b},Pb:6===n,Qb:7===n,Z:n,Oa:function(a,d){for(var c=b.a.L(a.getElementsByTagName(\"input\")).concat(b.a.L(a.getElementsByTagName(\"textarea\"))),e=\"string\"==typeof d?function(a){return a.name===d}:function(a){return d.test(a.name)},f=[],g=c.length-1;0<=g;g--)e(c[g])&&f.push(c[g]);return f},Ib:function(a){return\"string\"==typeof a&&(a=b.a.D(a))?x.JSON&&x.JSON.parse?x.JSON.parse(a):(new Function(\"return \"+a))():p},xa:function(a,d,c){(\"undefined\"==typeof JSON||\"undefined\"==typeof JSON.stringify)&&\r\nj(Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\"));return JSON.stringify(b.a.d(a),d,c)},Jb:function(a,d,c){c=c||{};var e=c.params||{},f=c.includeFields||this.Na,g=a;if(\"object\"==typeof a&&\"form\"===b.a.u(a))for(var g=a.action,h=f.length-1;0<=h;h--)for(var k=b.a.Oa(a,f[h]),l=k.length-1;0<=l;l--)e[k[l].name]=k[l].value;d=b.a.d(d);var n=y.createElement(\"form\");\r\nn.style.display=\"none\";n.action=g;n.method=\"post\";for(var w in d)a=y.createElement(\"input\"),a.name=w,a.value=b.a.xa(b.a.d(d[w])),n.appendChild(a);for(w in e)a=y.createElement(\"input\"),a.name=w,a.value=e[w],n.appendChild(a);y.body.appendChild(n);c.submitter?c.submitter(n):n.submit();setTimeout(function(){n.parentNode.removeChild(n)},0)}}};b.b(\"utils\",b.a);b.b(\"utils.arrayForEach\",b.a.o);b.b(\"utils.arrayFirst\",b.a.lb);b.b(\"utils.arrayFilter\",b.a.fa);b.b(\"utils.arrayGetDistinctValues\",b.a.Ga);b.b(\"utils.arrayIndexOf\",\r\nb.a.i);b.b(\"utils.arrayMap\",b.a.V);b.b(\"utils.arrayPushAll\",b.a.P);b.b(\"utils.arrayRemoveItem\",b.a.ga);b.b(\"utils.extend\",b.a.extend);b.b(\"utils.fieldsIncludedWithJsonPost\",b.a.Na);b.b(\"utils.getFormFields\",b.a.Oa);b.b(\"utils.peekObservable\",b.a.ua);b.b(\"utils.postJson\",b.a.Jb);b.b(\"utils.parseJson\",b.a.Ib);b.b(\"utils.registerEventHandler\",b.a.n);b.b(\"utils.stringifyJson\",b.a.xa);b.b(\"utils.range\",b.a.Lb);b.b(\"utils.toggleDomNodeCssClass\",b.a.da);b.b(\"utils.triggerEvent\",b.a.Ba);b.b(\"utils.unwrapObservable\",\r\nb.a.d);Function.prototype.bind||(Function.prototype.bind=function(a){var b=this,c=Array.prototype.slice.call(arguments);a=c.shift();return function(){return b.apply(a,c.concat(Array.prototype.slice.call(arguments)))}});b.a.f=new function(){var a=0,d=\"__ko__\"+(new Date).getTime(),c={};return{get:function(a,d){var c=b.a.f.la(a,r);return c===I?I:c[d]},set:function(a,d,c){c===I&&b.a.f.la(a,r)===I||(b.a.f.la(a,m)[d]=c)},la:function(b,f){var g=b[d];if(!g||!(\"null\"!==g&&c[g])){if(!f)return I;g=b[d]=\"ko\"+\r\na++;c[g]={}}return c[g]},clear:function(a){var b=a[d];return b?(delete c[b],a[d]=p,m):r}}};b.b(\"utils.domData\",b.a.f);b.b(\"utils.domData.clear\",b.a.f.clear);b.a.F=new function(){function a(a,d){var e=b.a.f.get(a,c);e===I&&d&&(e=[],b.a.f.set(a,c,e));return e}function d(c){var e=a(c,r);if(e)for(var e=e.slice(0),k=0;k<e.length;k++)e[k](c);b.a.f.clear(c);\"function\"==typeof F&&\"function\"==typeof F.cleanData&&F.cleanData([c]);if(f[c.nodeType])for(e=c.firstChild;c=e;)e=c.nextSibling,8===c.nodeType&&d(c)}\r\nvar c=\"__ko_domNodeDisposal__\"+(new Date).getTime(),e={1:m,8:m,9:m},f={1:m,9:m};return{Ca:function(b,d){\"function\"!=typeof d&&j(Error(\"Callback must be a function\"));a(b,m).push(d)},Xa:function(d,e){var f=a(d,r);f&&(b.a.ga(f,e),0==f.length&&b.a.f.set(d,c,I))},A:function(a){if(e[a.nodeType]&&(d(a),f[a.nodeType])){var c=[];b.a.P(c,a.getElementsByTagName(\"*\"));for(var k=0,l=c.length;k<l;k++)d(c[k])}return a},removeNode:function(a){b.A(a);a.parentNode&&a.parentNode.removeChild(a)}}};b.A=b.a.F.A;b.removeNode=\r\nb.a.F.removeNode;b.b(\"cleanNode\",b.A);b.b(\"removeNode\",b.removeNode);b.b(\"utils.domNodeDisposal\",b.a.F);b.b(\"utils.domNodeDisposal.addDisposeCallback\",b.a.F.Ca);b.b(\"utils.domNodeDisposal.removeDisposeCallback\",b.a.F.Xa);b.a.ta=function(a){var d;if(\"undefined\"!=typeof F)if(F.parseHTML)d=F.parseHTML(a);else{if((d=F.clean([a]))&&d[0]){for(a=d[0];a.parentNode&&11!==a.parentNode.nodeType;)a=a.parentNode;a.parentNode&&a.parentNode.removeChild(a)}}else{var c=b.a.D(a).toLowerCase();d=y.createElement(\"div\");\r\nc=c.match(/^<(thead|tbody|tfoot)/)&&[1,\"<table>\",\"</table>\"]||!c.indexOf(\"<tr\")&&[2,\"<table><tbody>\",\"</tbody></table>\"]||(!c.indexOf(\"<td\")||!c.indexOf(\"<th\"))&&[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"]||[0,\"\",\"\"];a=\"ignored<div>\"+c[1]+a+c[2]+\"</div>\";for(\"function\"==typeof x.innerShiv?d.appendChild(x.innerShiv(a)):d.innerHTML=a;c[0]--;)d=d.lastChild;d=b.a.L(d.lastChild.childNodes)}return d};b.a.ca=function(a,d){b.a.ka(a);d=b.a.d(d);if(d!==p&&d!==I)if(\"string\"!=typeof d&&(d=d.toString()),\r\n\"undefined\"!=typeof F)F(a).html(d);else for(var c=b.a.ta(d),e=0;e<c.length;e++)a.appendChild(c[e])};b.b(\"utils.parseHtmlFragment\",b.a.ta);b.b(\"utils.setHtml\",b.a.ca);var R={};b.s={ra:function(a){\"function\"!=typeof a&&j(Error(\"You can only pass a function to ko.memoization.memoize()\"));var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);R[b]=a;return\"\\x3c!--[ko_memo:\"+b+\"]--\\x3e\"},hb:function(a,b){var c=R[a];c===I&&j(Error(\"Couldn't find any memo with ID \"+\r\na+\". Perhaps it's already been unmemoized.\"));try{return c.apply(p,b||[]),m}finally{delete R[a]}},ib:function(a,d){var c=[];ca(a,c);for(var e=0,f=c.length;e<f;e++){var g=c[e].sb,h=[g];d&&b.a.P(h,d);b.s.hb(c[e].Fb,h);g.nodeValue=\"\";g.parentNode&&g.parentNode.removeChild(g)}},Ua:function(a){return(a=a.match(/^\\[ko_memo\\:(.*?)\\]$/))?a[1]:p}};b.b(\"memoization\",b.s);b.b(\"memoization.memoize\",b.s.ra);b.b(\"memoization.unmemoize\",b.s.hb);b.b(\"memoization.parseMemoText\",b.s.Ua);b.b(\"memoization.unmemoizeDomNodeAndDescendants\",\r\nb.s.ib);b.Ma={throttle:function(a,d){a.throttleEvaluation=d;var c=p;return b.j({read:a,write:function(b){clearTimeout(c);c=setTimeout(function(){a(b)},d)}})},notify:function(a,d){a.equalityComparer=\"always\"==d?u(r):b.m.fn.equalityComparer;return a}};b.b(\"extenders\",b.Ma);b.fb=function(a,d,c){this.target=a;this.ha=d;this.rb=c;b.p(this,\"dispose\",this.B)};b.fb.prototype.B=function(){this.Cb=m;this.rb()};b.S=function(){this.w={};b.a.extend(this,b.S.fn);b.p(this,\"subscribe\",this.ya);b.p(this,\"extend\",\r\nthis.extend);b.p(this,\"getSubscriptionsCount\",this.yb)};b.S.fn={ya:function(a,d,c){c=c||\"change\";var e=new b.fb(this,d?a.bind(d):a,function(){b.a.ga(this.w[c],e)}.bind(this));this.w[c]||(this.w[c]=[]);this.w[c].push(e);return e},notifySubscribers:function(a,d){d=d||\"change\";this.w[d]&&b.r.K(function(){b.a.o(this.w[d].slice(0),function(b){b&&b.Cb!==m&&b.ha(a)})},this)},yb:function(){var a=0,b;for(b in this.w)this.w.hasOwnProperty(b)&&(a+=this.w[b].length);return a},extend:function(a){var d=this;if(a)for(var c in a){var e=\r\nb.Ma[c];\"function\"==typeof e&&(d=e(d,a[c]))}return d}};b.Qa=function(a){return\"function\"==typeof a.ya&&\"function\"==typeof a.notifySubscribers};b.b(\"subscribable\",b.S);b.b(\"isSubscribable\",b.Qa);var C=[];b.r={mb:function(a){C.push({ha:a,La:[]})},end:function(){C.pop()},Wa:function(a){b.Qa(a)||j(Error(\"Only subscribable things can act as dependencies\"));if(0<C.length){var d=C[C.length-1];d&&!(0<=b.a.i(d.La,a))&&(d.La.push(a),d.ha(a))}},K:function(a,b,c){try{return C.push(p),a.apply(b,c||[])}finally{C.pop()}}};\r\nvar ma={undefined:m,\"boolean\":m,number:m,string:m};b.m=function(a){function d(){if(0<arguments.length){if(!d.equalityComparer||!d.equalityComparer(c,arguments[0]))d.H(),c=arguments[0],d.G();return this}b.r.Wa(d);return c}var c=a;b.S.call(d);d.t=function(){return c};d.G=function(){d.notifySubscribers(c)};d.H=function(){d.notifySubscribers(c,\"beforeChange\")};b.a.extend(d,b.m.fn);b.p(d,\"peek\",d.t);b.p(d,\"valueHasMutated\",d.G);b.p(d,\"valueWillMutate\",d.H);return d};b.m.fn={equalityComparer:function(a,\r\nb){return a===p||typeof a in ma?a===b:r}};var E=b.m.Kb=\"__ko_proto__\";b.m.fn[E]=b.m;b.ma=function(a,d){return a===p||a===I||a[E]===I?r:a[E]===d?m:b.ma(a[E],d)};b.$=function(a){return b.ma(a,b.m)};b.Ra=function(a){return\"function\"==typeof a&&a[E]===b.m||\"function\"==typeof a&&a[E]===b.j&&a.zb?m:r};b.b(\"observable\",b.m);b.b(\"isObservable\",b.$);b.b(\"isWriteableObservable\",b.Ra);b.R=function(a){0==arguments.length&&(a=[]);a!==p&&(a!==I&&!(\"length\"in a))&&j(Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\"));\r\nvar d=b.m(a);b.a.extend(d,b.R.fn);return d};b.R.fn={remove:function(a){for(var b=this.t(),c=[],e=\"function\"==typeof a?a:function(b){return b===a},f=0;f<b.length;f++){var g=b[f];e(g)&&(0===c.length&&this.H(),c.push(g),b.splice(f,1),f--)}c.length&&this.G();return c},removeAll:function(a){if(a===I){var d=this.t(),c=d.slice(0);this.H();d.splice(0,d.length);this.G();return c}return!a?[]:this.remove(function(d){return 0<=b.a.i(a,d)})},destroy:function(a){var b=this.t(),c=\"function\"==typeof a?a:function(b){return b===\r\na};this.H();for(var e=b.length-1;0<=e;e--)c(b[e])&&(b[e]._destroy=m);this.G()},destroyAll:function(a){return a===I?this.destroy(u(m)):!a?[]:this.destroy(function(d){return 0<=b.a.i(a,d)})},indexOf:function(a){var d=this();return b.a.i(d,a)},replace:function(a,b){var c=this.indexOf(a);0<=c&&(this.H(),this.t()[c]=b,this.G())}};b.a.o(\"pop push reverse shift sort splice unshift\".split(\" \"),function(a){b.R.fn[a]=function(){var b=this.t();this.H();b=b[a].apply(b,arguments);this.G();return b}});b.a.o([\"slice\"],\r\nfunction(a){b.R.fn[a]=function(){var b=this();return b[a].apply(b,arguments)}});b.b(\"observableArray\",b.R);b.j=function(a,d,c){function e(){b.a.o(z,function(a){a.B()});z=[]}function f(){var a=h.throttleEvaluation;a&&0<=a?(clearTimeout(t),t=setTimeout(g,a)):g()}function g(){if(!q)if(n&&w())A();else{q=m;try{var a=b.a.V(z,function(a){return a.target});b.r.mb(function(c){var d;0<=(d=b.a.i(a,c))?a[d]=I:z.push(c.ya(f))});for(var c=s.call(d),e=a.length-1;0<=e;e--)a[e]&&z.splice(e,1)[0].B();n=m;h.notifySubscribers(l,\r\n\"beforeChange\");l=c}finally{b.r.end()}h.notifySubscribers(l);q=r;z.length||A()}}function h(){if(0<arguments.length)return\"function\"===typeof v?v.apply(d,arguments):j(Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\")),this;n||g();b.r.Wa(h);return l}function k(){return!n||0<z.length}var l,n=r,q=r,s=a;s&&\"object\"==typeof s?(c=s,s=c.read):(c=c||{},s||(s=c.read));\"function\"!=typeof s&&j(Error(\"Pass a function that returns the value of the ko.computed\"));\r\nvar v=c.write,G=c.disposeWhenNodeIsRemoved||c.W||p,w=c.disposeWhen||c.Ka||u(r),A=e,z=[],t=p;d||(d=c.owner);h.t=function(){n||g();return l};h.xb=function(){return z.length};h.zb=\"function\"===typeof c.write;h.B=function(){A()};h.pa=k;b.S.call(h);b.a.extend(h,b.j.fn);b.p(h,\"peek\",h.t);b.p(h,\"dispose\",h.B);b.p(h,\"isActive\",h.pa);b.p(h,\"getDependenciesCount\",h.xb);c.deferEvaluation!==m&&g();if(G&&k()){A=function(){b.a.F.Xa(G,arguments.callee);e()};b.a.F.Ca(G,A);var D=w,w=function(){return!b.a.X(G)||D()}}return h};\r\nb.Bb=function(a){return b.ma(a,b.j)};w=b.m.Kb;b.j[w]=b.m;b.j.fn={};b.j.fn[w]=b.j;b.b(\"dependentObservable\",b.j);b.b(\"computed\",b.j);b.b(\"isComputed\",b.Bb);b.gb=function(a){0==arguments.length&&j(Error(\"When calling ko.toJS, pass the object you want to convert.\"));return ba(a,function(a){for(var c=0;b.$(a)&&10>c;c++)a=a();return a})};b.toJSON=function(a,d,c){a=b.gb(a);return b.a.xa(a,d,c)};b.b(\"toJS\",b.gb);b.b(\"toJSON\",b.toJSON);b.k={q:function(a){switch(b.a.u(a)){case \"option\":return a.__ko__hasDomDataOptionValue__===\r\nm?b.a.f.get(a,b.c.options.sa):7>=b.a.Z?a.getAttributeNode(\"value\").specified?a.value:a.text:a.value;case \"select\":return 0<=a.selectedIndex?b.k.q(a.options[a.selectedIndex]):I;default:return a.value}},T:function(a,d){switch(b.a.u(a)){case \"option\":switch(typeof d){case \"string\":b.a.f.set(a,b.c.options.sa,I);\"__ko__hasDomDataOptionValue__\"in a&&delete a.__ko__hasDomDataOptionValue__;a.value=d;break;default:b.a.f.set(a,b.c.options.sa,d),a.__ko__hasDomDataOptionValue__=m,a.value=\"number\"===typeof d?\r\nd:\"\"}break;case \"select\":for(var c=a.options.length-1;0<=c;c--)if(b.k.q(a.options[c])==d){a.selectedIndex=c;break}break;default:if(d===p||d===I)d=\"\";a.value=d}}};b.b(\"selectExtensions\",b.k);b.b(\"selectExtensions.readValue\",b.k.q);b.b(\"selectExtensions.writeValue\",b.k.T);var ka=/\\@ko_token_(\\d+)\\@/g,na=[\"true\",\"false\"],oa=/^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;b.g={Q:[],aa:function(a){var d=b.a.D(a);if(3>d.length)return[];\"{\"===d.charAt(0)&&(d=d.substring(1,d.length-1));a=[];for(var c=\r\np,e,f=0;f<d.length;f++){var g=d.charAt(f);if(c===p)switch(g){case '\"':case \"'\":case \"/\":c=f,e=g}else if(g==e&&\"\\\\\"!==d.charAt(f-1)){g=d.substring(c,f+1);a.push(g);var h=\"@ko_token_\"+(a.length-1)+\"@\",d=d.substring(0,c)+h+d.substring(f+1),f=f-(g.length-h.length),c=p}}e=c=p;for(var k=0,l=p,f=0;f<d.length;f++){g=d.charAt(f);if(c===p)switch(g){case \"{\":c=f;l=g;e=\"}\";break;case \"(\":c=f;l=g;e=\")\";break;case \"[\":c=f,l=g,e=\"]\"}g===l?k++:g===e&&(k--,0===k&&(g=d.substring(c,f+1),a.push(g),h=\"@ko_token_\"+(a.length-\r\n1)+\"@\",d=d.substring(0,c)+h+d.substring(f+1),f-=g.length-h.length,c=p))}e=[];d=d.split(\",\");c=0;for(f=d.length;c<f;c++)k=d[c],l=k.indexOf(\":\"),0<l&&l<k.length-1?(g=k.substring(l+1),e.push({key:P(k.substring(0,l),a),value:P(g,a)})):e.push({unknown:P(k,a)});return e},ba:function(a){var d=\"string\"===typeof a?b.g.aa(a):a,c=[];a=[];for(var e,f=0;e=d[f];f++)if(0<c.length&&c.push(\",\"),e.key){var g;a:{g=e.key;var h=b.a.D(g);switch(h.length&&h.charAt(0)){case \"'\":case '\"':break a;default:g=\"'\"+h+\"'\"}}e=e.value;\r\nc.push(g);c.push(\":\");c.push(e);e=b.a.D(e);0<=b.a.i(na,b.a.D(e).toLowerCase())?e=r:(h=e.match(oa),e=h===p?r:h[1]?\"Object(\"+h[1]+\")\"+h[2]:e);e&&(0<a.length&&a.push(\", \"),a.push(g+\" : function(__ko_value) { \"+e+\" = __ko_value; }\"))}else e.unknown&&c.push(e.unknown);d=c.join(\"\");0<a.length&&(d=d+\", '_ko_property_writers' : { \"+a.join(\"\")+\" } \");return d},Eb:function(a,d){for(var c=0;c<a.length;c++)if(b.a.D(a[c].key)==d)return m;return r},ea:function(a,d,c,e,f){if(!a||!b.Ra(a)){if((a=d()._ko_property_writers)&&\r\na[c])a[c](e)}else(!f||a.t()!==e)&&a(e)}};b.b(\"expressionRewriting\",b.g);b.b(\"expressionRewriting.bindingRewriteValidators\",b.g.Q);b.b(\"expressionRewriting.parseObjectLiteral\",b.g.aa);b.b(\"expressionRewriting.preProcessBindings\",b.g.ba);b.b(\"jsonExpressionRewriting\",b.g);b.b(\"jsonExpressionRewriting.insertPropertyAccessorsIntoJson\",b.g.ba);var K=\"\\x3c!--test--\\x3e\"===y.createComment(\"test\").text,ja=K?/^\\x3c!--\\s*ko(?:\\s+(.+\\s*\\:[\\s\\S]*))?\\s*--\\x3e$/:/^\\s*ko(?:\\s+(.+\\s*\\:[\\s\\S]*))?\\s*$/,ia=K?/^\\x3c!--\\s*\\/ko\\s*--\\x3e$/:\r\n/^\\s*\\/ko\\s*$/,pa={ul:m,ol:m};b.e={I:{},childNodes:function(a){return B(a)?aa(a):a.childNodes},Y:function(a){if(B(a)){a=b.e.childNodes(a);for(var d=0,c=a.length;d<c;d++)b.removeNode(a[d])}else b.a.ka(a)},N:function(a,d){if(B(a)){b.e.Y(a);for(var c=a.nextSibling,e=0,f=d.length;e<f;e++)c.parentNode.insertBefore(d[e],c)}else b.a.N(a,d)},Va:function(a,b){B(a)?a.parentNode.insertBefore(b,a.nextSibling):a.firstChild?a.insertBefore(b,a.firstChild):a.appendChild(b)},Pa:function(a,d,c){c?B(a)?a.parentNode.insertBefore(d,\r\nc.nextSibling):c.nextSibling?a.insertBefore(d,c.nextSibling):a.appendChild(d):b.e.Va(a,d)},firstChild:function(a){return!B(a)?a.firstChild:!a.nextSibling||H(a.nextSibling)?p:a.nextSibling},nextSibling:function(a){B(a)&&(a=$(a));return a.nextSibling&&H(a.nextSibling)?p:a.nextSibling},jb:function(a){return(a=B(a))?a[1]:p},Ta:function(a){if(pa[b.a.u(a)]){var d=a.firstChild;if(d){do if(1===d.nodeType){var c;c=d.firstChild;var e=p;if(c){do if(e)e.push(c);else if(B(c)){var f=$(c,m);f?c=f:e=[c]}else H(c)&&\r\n(e=[c]);while(c=c.nextSibling)}if(c=e){e=d.nextSibling;for(f=0;f<c.length;f++)e?a.insertBefore(c[f],e):a.appendChild(c[f])}}while(d=d.nextSibling)}}}};b.b(\"virtualElements\",b.e);b.b(\"virtualElements.allowedBindings\",b.e.I);b.b(\"virtualElements.emptyNode\",b.e.Y);b.b(\"virtualElements.insertAfter\",b.e.Pa);b.b(\"virtualElements.prepend\",b.e.Va);b.b(\"virtualElements.setDomNodeChildren\",b.e.N);b.J=function(){this.Ha={}};b.a.extend(b.J.prototype,{nodeHasBindings:function(a){switch(a.nodeType){case 1:return a.getAttribute(\"data-bind\")!=\r\np;case 8:return b.e.jb(a)!=p;default:return r}},getBindings:function(a,b){var c=this.getBindingsString(a,b);return c?this.parseBindingsString(c,b,a):p},getBindingsString:function(a){switch(a.nodeType){case 1:return a.getAttribute(\"data-bind\");case 8:return b.e.jb(a);default:return p}},parseBindingsString:function(a,d,c){try{var e;if(!(e=this.Ha[a])){var f=this.Ha,g,h=\"with($context){with($data||{}){return{\"+b.g.ba(a)+\"}}}\";g=new Function(\"$context\",\"$element\",h);e=f[a]=g}return e(d,c)}catch(k){j(Error(\"Unable to parse bindings.\\nMessage: \"+\r\nk+\";\\nBindings value: \"+a))}}});b.J.instance=new b.J;b.b(\"bindingProvider\",b.J);b.c={};b.z=function(a,d,c){d?(b.a.extend(this,d),this.$parentContext=d,this.$parent=d.$data,this.$parents=(d.$parents||[]).slice(0),this.$parents.unshift(this.$parent)):(this.$parents=[],this.$root=a,this.ko=b);this.$data=a;c&&(this[c]=a)};b.z.prototype.createChildContext=function(a,d){return new b.z(a,this,d)};b.z.prototype.extend=function(a){var d=b.a.extend(new b.z,this);return b.a.extend(d,a)};b.eb=function(a,d){if(2==\r\narguments.length)b.a.f.set(a,\"__ko_bindingContext__\",d);else return b.a.f.get(a,\"__ko_bindingContext__\")};b.Fa=function(a,d,c){1===a.nodeType&&b.e.Ta(a);return X(a,d,c,m)};b.Ea=function(a,b){(1===b.nodeType||8===b.nodeType)&&Z(a,b,m)};b.Da=function(a,b){b&&(1!==b.nodeType&&8!==b.nodeType)&&j(Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\"));b=b||x.document.body;Y(a,b,m)};b.ja=function(a){switch(a.nodeType){case 1:case 8:var d=b.eb(a);if(d)return d;\r\nif(a.parentNode)return b.ja(a.parentNode)}return I};b.pb=function(a){return(a=b.ja(a))?a.$data:I};b.b(\"bindingHandlers\",b.c);b.b(\"applyBindings\",b.Da);b.b(\"applyBindingsToDescendants\",b.Ea);b.b(\"applyBindingsToNode\",b.Fa);b.b(\"contextFor\",b.ja);b.b(\"dataFor\",b.pb);var fa={\"class\":\"className\",\"for\":\"htmlFor\"};b.c.attr={update:function(a,d){var c=b.a.d(d())||{},e;for(e in c)if(\"string\"==typeof e){var f=b.a.d(c[e]),g=f===r||f===p||f===I;g&&a.removeAttribute(e);8>=b.a.Z&&e in fa?(e=fa[e],g?a.removeAttribute(e):\r\na[e]=f):g||a.setAttribute(e,f.toString());\"name\"===e&&b.a.ab(a,g?\"\":f.toString())}}};b.c.checked={init:function(a,d,c){b.a.n(a,\"click\",function(){var e;if(\"checkbox\"==a.type)e=a.checked;else if(\"radio\"==a.type&&a.checked)e=a.value;else return;var f=d(),g=b.a.d(f);\"checkbox\"==a.type&&g instanceof Array?(e=b.a.i(g,a.value),a.checked&&0>e?f.push(a.value):!a.checked&&0<=e&&f.splice(e,1)):b.g.ea(f,c,\"checked\",e,m)});\"radio\"==a.type&&!a.name&&b.c.uniqueName.init(a,u(m))},update:function(a,d){var c=b.a.d(d());\r\n\"checkbox\"==a.type?a.checked=c instanceof Array?0<=b.a.i(c,a.value):c:\"radio\"==a.type&&(a.checked=a.value==c)}};b.c.css={update:function(a,d){var c=b.a.d(d());if(\"object\"==typeof c)for(var e in c){var f=b.a.d(c[e]);b.a.da(a,e,f)}else c=String(c||\"\"),b.a.da(a,a.__ko__cssValue,r),a.__ko__cssValue=c,b.a.da(a,c,m)}};b.c.enable={update:function(a,d){var c=b.a.d(d());c&&a.disabled?a.removeAttribute(\"disabled\"):!c&&!a.disabled&&(a.disabled=m)}};b.c.disable={update:function(a,d){b.c.enable.update(a,function(){return!b.a.d(d())})}};\r\nb.c.event={init:function(a,d,c,e){var f=d()||{},g;for(g in f)(function(){var f=g;\"string\"==typeof f&&b.a.n(a,f,function(a){var g,n=d()[f];if(n){var q=c();try{var s=b.a.L(arguments);s.unshift(e);g=n.apply(e,s)}finally{g!==m&&(a.preventDefault?a.preventDefault():a.returnValue=r)}q[f+\"Bubble\"]===r&&(a.cancelBubble=m,a.stopPropagation&&a.stopPropagation())}})})()}};b.c.foreach={Sa:function(a){return function(){var d=a(),c=b.a.ua(d);if(!c||\"number\"==typeof c.length)return{foreach:d,templateEngine:b.C.oa};\r\nb.a.d(d);return{foreach:c.data,as:c.as,includeDestroyed:c.includeDestroyed,afterAdd:c.afterAdd,beforeRemove:c.beforeRemove,afterRender:c.afterRender,beforeMove:c.beforeMove,afterMove:c.afterMove,templateEngine:b.C.oa}}},init:function(a,d){return b.c.template.init(a,b.c.foreach.Sa(d))},update:function(a,d,c,e,f){return b.c.template.update(a,b.c.foreach.Sa(d),c,e,f)}};b.g.Q.foreach=r;b.e.I.foreach=m;b.c.hasfocus={init:function(a,d,c){function e(e){a.__ko_hasfocusUpdating=m;var f=a.ownerDocument;\"activeElement\"in\r\nf&&(e=f.activeElement===a);f=d();b.g.ea(f,c,\"hasfocus\",e,m);a.__ko_hasfocusUpdating=r}var f=e.bind(p,m),g=e.bind(p,r);b.a.n(a,\"focus\",f);b.a.n(a,\"focusin\",f);b.a.n(a,\"blur\",g);b.a.n(a,\"focusout\",g)},update:function(a,d){var c=b.a.d(d());a.__ko_hasfocusUpdating||(c?a.focus():a.blur(),b.r.K(b.a.Ba,p,[a,c?\"focusin\":\"focusout\"]))}};b.c.html={init:function(){return{controlsDescendantBindings:m}},update:function(a,d){b.a.ca(a,d())}};var da=\"__ko_withIfBindingData\";Q(\"if\");Q(\"ifnot\",r,m);Q(\"with\",m,r,function(a,\r\nb){return a.createChildContext(b)});b.c.options={update:function(a,d,c){\"select\"!==b.a.u(a)&&j(Error(\"options binding applies only to SELECT elements\"));for(var e=0==a.length,f=b.a.V(b.a.fa(a.childNodes,function(a){return a.tagName&&\"option\"===b.a.u(a)&&a.selected}),function(a){return b.k.q(a)||a.innerText||a.textContent}),g=a.scrollTop,h=b.a.d(d());0<a.length;)b.A(a.options[0]),a.remove(0);if(h){c=c();var k=c.optionsIncludeDestroyed;\"number\"!=typeof h.length&&(h=[h]);if(c.optionsCaption){var l=y.createElement(\"option\");\r\nb.a.ca(l,c.optionsCaption);b.k.T(l,I);a.appendChild(l)}d=0;for(var n=h.length;d<n;d++){var q=h[d];if(!q||!q._destroy||k){var l=y.createElement(\"option\"),s=function(a,b,c){var d=typeof b;return\"function\"==d?b(a):\"string\"==d?a[b]:c},v=s(q,c.optionsValue,q);b.k.T(l,b.a.d(v));q=s(q,c.optionsText,v);b.a.cb(l,q);a.appendChild(l)}}h=a.getElementsByTagName(\"option\");d=k=0;for(n=h.length;d<n;d++)0<=b.a.i(f,b.k.q(h[d]))&&(b.a.bb(h[d],m),k++);a.scrollTop=g;e&&\"value\"in c&&ea(a,b.a.ua(c.value),m);b.a.ub(a)}}};\r\nb.c.options.sa=\"__ko.optionValueDomData__\";b.c.selectedOptions={init:function(a,d,c){b.a.n(a,\"change\",function(){var e=d(),f=[];b.a.o(a.getElementsByTagName(\"option\"),function(a){a.selected&&f.push(b.k.q(a))});b.g.ea(e,c,\"value\",f)})},update:function(a,d){\"select\"!=b.a.u(a)&&j(Error(\"values binding applies only to SELECT elements\"));var c=b.a.d(d());c&&\"number\"==typeof c.length&&b.a.o(a.getElementsByTagName(\"option\"),function(a){var d=0<=b.a.i(c,b.k.q(a));b.a.bb(a,d)})}};b.c.style={update:function(a,\r\nd){var c=b.a.d(d()||{}),e;for(e in c)if(\"string\"==typeof e){var f=b.a.d(c[e]);a.style[e]=f||\"\"}}};b.c.submit={init:function(a,d,c,e){\"function\"!=typeof d()&&j(Error(\"The value for a submit binding must be a function\"));b.a.n(a,\"submit\",function(b){var c,h=d();try{c=h.call(e,a)}finally{c!==m&&(b.preventDefault?b.preventDefault():b.returnValue=r)}})}};b.c.text={update:function(a,d){b.a.cb(a,d())}};b.e.I.text=m;b.c.uniqueName={init:function(a,d){if(d()){var c=\"ko_unique_\"+ ++b.c.uniqueName.ob;b.a.ab(a,\r\nc)}}};b.c.uniqueName.ob=0;b.c.value={init:function(a,d,c){function e(){h=r;var e=d(),f=b.k.q(a);b.g.ea(e,c,\"value\",f)}var f=[\"change\"],g=c().valueUpdate,h=r;g&&(\"string\"==typeof g&&(g=[g]),b.a.P(f,g),f=b.a.Ga(f));if(b.a.Z&&(\"input\"==a.tagName.toLowerCase()&&\"text\"==a.type&&\"off\"!=a.autocomplete&&(!a.form||\"off\"!=a.form.autocomplete))&&-1==b.a.i(f,\"propertychange\"))b.a.n(a,\"propertychange\",function(){h=m}),b.a.n(a,\"blur\",function(){h&&e()});b.a.o(f,function(c){var d=e;b.a.Ob(c,\"after\")&&(d=function(){setTimeout(e,\r\n0)},c=c.substring(5));b.a.n(a,c,d)})},update:function(a,d){var c=\"select\"===b.a.u(a),e=b.a.d(d()),f=b.k.q(a),g=e!=f;0===e&&(0!==f&&\"0\"!==f)&&(g=m);g&&(f=function(){b.k.T(a,e)},f(),c&&setTimeout(f,0));c&&0<a.length&&ea(a,e,r)}};b.c.visible={update:function(a,d){var c=b.a.d(d()),e=\"none\"!=a.style.display;c&&!e?a.style.display=\"\":!c&&e&&(a.style.display=\"none\")}};b.c.click={init:function(a,d,c,e){return b.c.event.init.call(this,a,function(){var a={};a.click=d();return a},c,e)}};b.v=function(){};b.v.prototype.renderTemplateSource=\r\nfunction(){j(Error(\"Override renderTemplateSource\"))};b.v.prototype.createJavaScriptEvaluatorBlock=function(){j(Error(\"Override createJavaScriptEvaluatorBlock\"))};b.v.prototype.makeTemplateSource=function(a,d){if(\"string\"==typeof a){d=d||y;var c=d.getElementById(a);c||j(Error(\"Cannot find template with ID \"+a));return new b.l.h(c)}if(1==a.nodeType||8==a.nodeType)return new b.l.O(a);j(Error(\"Unknown template type: \"+a))};b.v.prototype.renderTemplate=function(a,b,c,e){a=this.makeTemplateSource(a,e);\r\nreturn this.renderTemplateSource(a,b,c)};b.v.prototype.isTemplateRewritten=function(a,b){return this.allowTemplateRewriting===r?m:this.makeTemplateSource(a,b).data(\"isRewritten\")};b.v.prototype.rewriteTemplate=function(a,b,c){a=this.makeTemplateSource(a,c);b=b(a.text());a.text(b);a.data(\"isRewritten\",m)};b.b(\"templateEngine\",b.v);var qa=/(<[a-z]+\\d*(\\s+(?!data-bind=)[a-z0-9\\-]+(=(\\\"[^\\\"]*\\\"|\\'[^\\']*\\'))?)*\\s+)data-bind=([\"'])([\\s\\S]*?)\\5/gi,ra=/\\x3c!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*--\\x3e/g;b.za={vb:function(a,\r\nd,c){d.isTemplateRewritten(a,c)||d.rewriteTemplate(a,function(a){return b.za.Gb(a,d)},c)},Gb:function(a,b){return a.replace(qa,function(a,e,f,g,h,k,l){return W(l,e,b)}).replace(ra,function(a,e){return W(e,\"\\x3c!-- ko --\\x3e\",b)})},kb:function(a){return b.s.ra(function(d,c){d.nextSibling&&b.Fa(d.nextSibling,a,c)})}};b.b(\"__tr_ambtns\",b.za.kb);b.l={};b.l.h=function(a){this.h=a};b.l.h.prototype.text=function(){var a=b.a.u(this.h),a=\"script\"===a?\"text\":\"textarea\"===a?\"value\":\"innerHTML\";if(0==arguments.length)return this.h[a];\r\nvar d=arguments[0];\"innerHTML\"===a?b.a.ca(this.h,d):this.h[a]=d};b.l.h.prototype.data=function(a){if(1===arguments.length)return b.a.f.get(this.h,\"templateSourceData_\"+a);b.a.f.set(this.h,\"templateSourceData_\"+a,arguments[1])};b.l.O=function(a){this.h=a};b.l.O.prototype=new b.l.h;b.l.O.prototype.text=function(){if(0==arguments.length){var a=b.a.f.get(this.h,\"__ko_anon_template__\")||{};a.Aa===I&&a.ia&&(a.Aa=a.ia.innerHTML);return a.Aa}b.a.f.set(this.h,\"__ko_anon_template__\",{Aa:arguments[0]})};b.l.h.prototype.nodes=\r\nfunction(){if(0==arguments.length)return(b.a.f.get(this.h,\"__ko_anon_template__\")||{}).ia;b.a.f.set(this.h,\"__ko_anon_template__\",{ia:arguments[0]})};b.b(\"templateSources\",b.l);b.b(\"templateSources.domElement\",b.l.h);b.b(\"templateSources.anonymousTemplate\",b.l.O);var O;b.wa=function(a){a!=I&&!(a instanceof b.v)&&j(Error(\"templateEngine must inherit from ko.templateEngine\"));O=a};b.va=function(a,d,c,e,f){c=c||{};(c.templateEngine||O)==I&&j(Error(\"Set a template engine before calling renderTemplate\"));\r\nf=f||\"replaceChildren\";if(e){var g=N(e);return b.j(function(){var h=d&&d instanceof b.z?d:new b.z(b.a.d(d)),k=\"function\"==typeof a?a(h.$data,h):a,h=T(e,f,k,h,c);\"replaceNode\"==f&&(e=h,g=N(e))},p,{Ka:function(){return!g||!b.a.X(g)},W:g&&\"replaceNode\"==f?g.parentNode:g})}return b.s.ra(function(e){b.va(a,d,c,e,\"replaceNode\")})};b.Mb=function(a,d,c,e,f){function g(a,b){U(b,k);c.afterRender&&c.afterRender(b,a)}function h(d,e){k=f.createChildContext(b.a.d(d),c.as);k.$index=e;var g=\"function\"==typeof a?\r\na(d,k):a;return T(p,\"ignoreTargetNode\",g,k,c)}var k;return b.j(function(){var a=b.a.d(d)||[];\"undefined\"==typeof a.length&&(a=[a]);a=b.a.fa(a,function(a){return c.includeDestroyed||a===I||a===p||!b.a.d(a._destroy)});b.r.K(b.a.$a,p,[e,a,h,c,g])},p,{W:e})};b.c.template={init:function(a,d){var c=b.a.d(d());if(\"string\"!=typeof c&&!c.name&&(1==a.nodeType||8==a.nodeType))c=1==a.nodeType?a.childNodes:b.e.childNodes(a),c=b.a.Hb(c),(new b.l.O(a)).nodes(c);return{controlsDescendantBindings:m}},update:function(a,\r\nd,c,e,f){d=b.a.d(d());c={};e=m;var g,h=p;\"string\"!=typeof d&&(c=d,d=c.name,\"if\"in c&&(e=b.a.d(c[\"if\"])),e&&\"ifnot\"in c&&(e=!b.a.d(c.ifnot)),g=b.a.d(c.data));\"foreach\"in c?h=b.Mb(d||a,e&&c.foreach||[],c,a,f):e?(f=\"data\"in c?f.createChildContext(g,c.as):f,h=b.va(d||a,f,c,a)):b.e.Y(a);f=h;(g=b.a.f.get(a,\"__ko__templateComputedDomDataKey__\"))&&\"function\"==typeof g.B&&g.B();b.a.f.set(a,\"__ko__templateComputedDomDataKey__\",f&&f.pa()?f:I)}};b.g.Q.template=function(a){a=b.g.aa(a);return 1==a.length&&a[0].unknown||\r\nb.g.Eb(a,\"name\")?p:\"This template engine does not support anonymous templates nested within its templates\"};b.e.I.template=m;b.b(\"setTemplateEngine\",b.wa);b.b(\"renderTemplate\",b.va);b.a.Ja=function(a,b,c){a=a||[];b=b||[];return a.length<=b.length?S(a,b,\"added\",\"deleted\",c):S(b,a,\"deleted\",\"added\",c)};b.b(\"utils.compareArrays\",b.a.Ja);b.a.$a=function(a,d,c,e,f){function g(a,b){t=l[b];w!==b&&(z[a]=t);t.na(w++);M(t.M);s.push(t);A.push(t)}function h(a,c){if(a)for(var d=0,e=c.length;d<e;d++)c[d]&&b.a.o(c[d].M,\r\nfunction(b){a(b,d,c[d].U)})}d=d||[];e=e||{};var k=b.a.f.get(a,\"setDomNodeChildrenFromArrayMapping_lastMappingResult\")===I,l=b.a.f.get(a,\"setDomNodeChildrenFromArrayMapping_lastMappingResult\")||[],n=b.a.V(l,function(a){return a.U}),q=b.a.Ja(n,d),s=[],v=0,w=0,B=[],A=[];d=[];for(var z=[],n=[],t,D=0,C,E;C=q[D];D++)switch(E=C.moved,C.status){case \"deleted\":E===I&&(t=l[v],t.j&&t.j.B(),B.push.apply(B,M(t.M)),e.beforeRemove&&(d[D]=t,A.push(t)));v++;break;case \"retained\":g(D,v++);break;case \"added\":E!==I?\r\ng(D,E):(t={U:C.value,na:b.m(w++)},s.push(t),A.push(t),k||(n[D]=t))}h(e.beforeMove,z);b.a.o(B,e.beforeRemove?b.A:b.removeNode);for(var D=0,k=b.e.firstChild(a),H;t=A[D];D++){t.M||b.a.extend(t,ha(a,c,t.U,f,t.na));for(v=0;q=t.M[v];k=q.nextSibling,H=q,v++)q!==k&&b.e.Pa(a,q,H);!t.Ab&&f&&(f(t.U,t.M,t.na),t.Ab=m)}h(e.beforeRemove,d);h(e.afterMove,z);h(e.afterAdd,n);b.a.f.set(a,\"setDomNodeChildrenFromArrayMapping_lastMappingResult\",s)};b.b(\"utils.setDomNodeChildrenFromArrayMapping\",b.a.$a);b.C=function(){this.allowTemplateRewriting=\r\nr};b.C.prototype=new b.v;b.C.prototype.renderTemplateSource=function(a){var d=!(9>b.a.Z)&&a.nodes?a.nodes():p;if(d)return b.a.L(d.cloneNode(m).childNodes);a=a.text();return b.a.ta(a)};b.C.oa=new b.C;b.wa(b.C.oa);b.b(\"nativeTemplateEngine\",b.C);b.qa=function(){var a=this.Db=function(){if(\"undefined\"==typeof F||!F.tmpl)return 0;try{if(0<=F.tmpl.tag.tmpl.open.toString().indexOf(\"__\"))return 2}catch(a){}return 1}();this.renderTemplateSource=function(b,c,e){e=e||{};2>a&&j(Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\"));\r\nvar f=b.data(\"precompiled\");f||(f=b.text()||\"\",f=F.template(p,\"{{ko_with $item.koBindingContext}}\"+f+\"{{/ko_with}}\"),b.data(\"precompiled\",f));b=[c.$data];c=F.extend({koBindingContext:c},e.templateOptions);c=F.tmpl(f,b,c);c.appendTo(y.createElement(\"div\"));F.fragments={};return c};this.createJavaScriptEvaluatorBlock=function(a){return\"{{ko_code ((function() { return \"+a+\" })()) }}\"};this.addTemplate=function(a,b){y.write(\"<script type='text/html' id='\"+a+\"'>\"+b+\"\\x3c/script>\")};0<a&&(F.tmpl.tag.ko_code=\r\n{open:\"__.push($1 || '');\"},F.tmpl.tag.ko_with={open:\"with($1) {\",close:\"} \"})};b.qa.prototype=new b.v;w=new b.qa;0<w.Db&&b.wa(w);b.b(\"jqueryTmplTemplateEngine\",b.qa)}\"function\"===typeof require&&\"object\"===typeof exports&&\"object\"===typeof module?L(module.exports||exports):\"function\"===typeof define&&define.amd?define('knockout',[\"exports\"],L):L(x.ko={});m;\r\n})();\r\n",
    "\n;\ndefine(\"fs\", function(){});\n",
    "\n;\ndefine(\"path\", function(){});\n",
    "\ndefine('angl/out/parser',['require','exports','module','fs','path'],function (require, exports, module) {/* parser generated by jison 0.4.4 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"top\":3,\"top_level_statements\":4,\"EOF\":5,\"top_level_statement\":6,\"script_definition\":7,\"object_definition\":8,\"const_definition\":9,\"statements\":10,\"statements_unwrapped\":11,\"statement\":12,\"assignment\":13,\";\":14,\"function_call\":15,\"var_statement\":16,\"if_statement\":17,\"repeat_statement\":18,\"while_statement\":19,\"do_until_statement\":20,\"for_statement\":21,\"switch_statement\":22,\"with_statement\":23,\"{\":24,\"}\":25,\"BREAK\":26,\"CONTINUE\":27,\"EXIT\":28,\"RETURN\":29,\"expression\":30,\"IF\":31,\"(\":32,\")\":33,\"ELSE\":34,\"REPEAT\":35,\"WHILE\":36,\"DO\":37,\"UNTIL\":38,\"FOR\":39,\"SWITCH\":40,\"cases\":41,\"case\":42,\"CASE\":43,\":\":44,\"DEFAULT\":45,\"WITH\":46,\"VAR\":47,\"var_list\":48,\"IDENTIFIER\":49,\",\":50,\"=\":51,\"script_literal\":52,\"SCRIPT\":53,\"definition_arguments\":54,\"CONST\":55,\"OBJECT\":56,\"class_statements\":57,\"PARENT\":58,\"class_statement\":59,\"CREATE\":60,\"DESTROY\":61,\"variable\":62,\"++\":63,\"--\":64,\"+=\":65,\"-=\":66,\"*=\":67,\"/=\":68,\"|=\":69,\"&=\":70,\"^=\":71,\"NUMBER\":72,\"HEX\":73,\"STRING\":74,\"&&\":75,\"||\":76,\"^^\":77,\"<\":78,\"<=\":79,\"==\":80,\"!=\":81,\">\":82,\">=\":83,\"|\":84,\"&\":85,\"^\":86,\"<<\":87,\">>\":88,\"+\":89,\"-\":90,\"*\":91,\"/\":92,\"DIV\":93,\"MOD\":94,\"!\":95,\"~\":96,\"function_call_arguments\":97,\"SUPER\":98,\"identifier\":99,\".\":100,\"->\":101,\"[\":102,\"indexes\":103,\"]\":104,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",14:\";\",24:\"{\",25:\"}\",26:\"BREAK\",27:\"CONTINUE\",28:\"EXIT\",29:\"RETURN\",31:\"IF\",32:\"(\",33:\")\",34:\"ELSE\",35:\"REPEAT\",36:\"WHILE\",37:\"DO\",38:\"UNTIL\",39:\"FOR\",40:\"SWITCH\",43:\"CASE\",44:\":\",45:\"DEFAULT\",46:\"WITH\",47:\"VAR\",49:\"IDENTIFIER\",50:\",\",51:\"=\",53:\"SCRIPT\",55:\"CONST\",56:\"OBJECT\",58:\"PARENT\",60:\"CREATE\",61:\"DESTROY\",63:\"++\",64:\"--\",65:\"+=\",66:\"-=\",67:\"*=\",68:\"/=\",69:\"|=\",70:\"&=\",71:\"^=\",72:\"NUMBER\",73:\"HEX\",74:\"STRING\",75:\"&&\",76:\"||\",77:\"^^\",78:\"<\",79:\"<=\",80:\"==\",81:\"!=\",82:\">\",83:\">=\",84:\"|\",85:\"&\",86:\"^\",87:\"<<\",88:\">>\",89:\"+\",90:\"-\",91:\"*\",92:\"/\",93:\"DIV\",94:\"MOD\",95:\"!\",96:\"~\",98:\"SUPER\",100:\".\",101:\"->\",102:\"[\",104:\"]\"},\nproductions_: [0,[3,2],[4,2],[4,0],[6,1],[6,1],[6,1],[10,1],[11,2],[11,0],[12,2],[12,2],[12,2],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,3],[12,2],[12,2],[12,2],[12,3],[12,1],[17,5],[17,7],[18,5],[19,5],[20,6],[21,9],[22,7],[41,2],[41,0],[42,4],[42,3],[23,5],[16,2],[48,3],[48,5],[48,1],[48,3],[52,6],[52,7],[7,7],[7,8],[54,3],[54,1],[9,5],[8,5],[8,7],[57,2],[57,0],[59,1],[59,6],[59,7],[59,4],[59,4],[13,3],[13,2],[13,2],[13,3],[13,3],[13,3],[13,3],[13,3],[13,3],[13,3],[30,1],[30,1],[30,1],[30,1],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,3],[30,2],[30,2],[30,2],[30,1],[30,1],[30,3],[15,3],[15,4],[15,3],[15,4],[97,3],[97,1],[62,1],[62,3],[62,3],[62,4],[103,3],[103,1],[99,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return yy.makeStmtList($$[$0-1]); \nbreak;\ncase 2: this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 3: this.$ = []; \nbreak;\ncase 4: this.$ = $$[$0]; \nbreak;\ncase 5: this.$ = $$[$0]; \nbreak;\ncase 6: this.$ = $$[$0]; \nbreak;\ncase 7: this.$ = yy.makeStmtList($$[$0]); \nbreak;\ncase 8: this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 9: this.$ = []; \nbreak;\ncase 10: this.$ = $$[$0-1]; \nbreak;\ncase 11: this.$ = $$[$0-1]; \nbreak;\ncase 12: this.$ = $$[$0-1]; \nbreak;\ncase 13: this.$ = $$[$0]; \nbreak;\ncase 14: this.$ = $$[$0]; \nbreak;\ncase 15: this.$ = $$[$0]; \nbreak;\ncase 16: this.$ = $$[$0]; \nbreak;\ncase 17: this.$ = $$[$0]; \nbreak;\ncase 18: this.$ = $$[$0]; \nbreak;\ncase 19: this.$ = $$[$0]; \nbreak;\ncase 20: this.$ = $$[$0-1]; \nbreak;\ncase 21: this.$ = yy.makeBreakStmt(); \nbreak;\ncase 22: this.$ = yy.makeContinueStmt(); \nbreak;\ncase 23: this.$ = yy.makeExitStmt(); \nbreak;\ncase 24: this.$ = yy.makeReturnStmt($$[$0-1]); \nbreak;\ncase 25: this.$ = yy.makeNopStmt(); \nbreak;\ncase 26: this.$ = yy.makeIfStmt($$[$0-2], $$[$0]); \nbreak;\ncase 27: this.$ = yy.makeIfElseStmt($$[$0-4], $$[$0-2], $$[$0]); \nbreak;\ncase 28: this.$ = yy.makeRepeatStmt($$[$0-2], $$[$0]); \nbreak;\ncase 29: this.$ = yy.makeWhileStmt($$[$0-2], $$[$0]); \nbreak;\ncase 30: this.$ = yy.makeDoUntilStmt($$[$0-4], $$[$0-1]); \nbreak;\ncase 31: this.$ = yy.makeForStmt($$[$0-6], $$[$0-4], $$[$0-2], $$[$0]); \nbreak;\ncase 32: this.$ = yy.makeSwitchStmt($$[$0-4], $$[$0-1]); \nbreak;\ncase 33: this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 34: this.$ = []; \nbreak;\ncase 35: this.$ = yy.makeCase($$[$0-2], $$[$0]); \nbreak;\ncase 36: this.$ = yy.makeDefaultCase($$[$0]); \nbreak;\ncase 37: this.$ = yy.makeWithStmt($$[$0-2], $$[$0]); \nbreak;\ncase 38: this.$ = yy.makeVarStmt($$[$0]); \nbreak;\ncase 39: this.$ = [yy.makeVarStmtItem($$[$0-2])].concat($$[$0]); \nbreak;\ncase 40: this.$ = [yy.makeVarStmtItem($$[$0-4], $$[$0-2])].concat($$[$0]); \nbreak;\ncase 41: this.$ = [yy.makeVarStmtItem($$[$0])]; \nbreak;\ncase 42: this.$ = [yy.makeVarStmtItem($$[$0-2], $$[$0])]; \nbreak;\ncase 43: this.$ = yy.makeScriptVal([], $$[$0-1]); \nbreak;\ncase 44: this.$ = yy.makeScriptVal($$[$0-4], $$[$0-1]); \nbreak;\ncase 45: this.$ = yy.makeScriptStmt($$[$0-5], [], $$[$0-1]); \nbreak;\ncase 46: this.$ = yy.makeScriptStmt($$[$0-6], $$[$0-4], $$[$0-1]); \nbreak;\ncase 47: this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 48: this.$ = [$$[$0]]; \nbreak;\ncase 49: this.$ = yy.makeConstStmt($$[$0-3], $$[$0-1]); \nbreak;\ncase 50: this.$ = yy.makeObjectStmt($$[$0-3], $$[$0-1]); \nbreak;\ncase 51: this.$ = yy.makeObjectStmt($$[$0-5], $$[$0-1], $$[$0-3]); \nbreak;\ncase 52: this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 53: this.$ = []; \nbreak;\ncase 54: this.$ = $$[$0]; \nbreak;\ncase 55: this.$ = yy.makeCreateStmt([], $$[$0-1]); \nbreak;\ncase 56: this.$ = yy.makeCreateStmt($$[$0-4], $$[$0-1]); \nbreak;\ncase 57: this.$ = yy.makeDestroyStmt($$[$0-1]); \nbreak;\ncase 58: this.$ = yy.makePropertyStmt($$[$0-3], $$[$0-1]); \nbreak;\ncase 59: this.$ = yy.makeAssignStmt($$[$0-2], $$[$0]); \nbreak;\ncase 60: this.$ = yy.makeCmpAssignStmt('+', $$[$0-1], yy.makeNumVal('1')); \nbreak;\ncase 61: this.$ = yy.makeCmpAssignStmt('-', $$[$0-1], yy.makeNumVal('1')); \nbreak;\ncase 62: this.$ = yy.makeCmpAssignStmt('+', $$[$0-2], $$[$0]); \nbreak;\ncase 63: this.$ = yy.makeCmpAssignStmt('-', $$[$0-2], $$[$0]); \nbreak;\ncase 64: this.$ = yy.makeCmpAssignStmt('*', $$[$0-2], $$[$0]); \nbreak;\ncase 65: this.$ = yy.makeCmpAssignStmt('/', $$[$0-2], $$[$0]); \nbreak;\ncase 66: this.$ = yy.makeCmpAssignStmt('|', $$[$0-2], $$[$0]); \nbreak;\ncase 67: this.$ = yy.makeCmpAssignStmt('&', $$[$0-2], $$[$0]); \nbreak;\ncase 68: this.$ = yy.makeCmpAssignStmt('^', $$[$0-2], $$[$0]); \nbreak;\ncase 69: this.$ = yy.makeNumVal(yytext); \nbreak;\ncase 70: this.$ = yy.makeHexVal(yytext); \nbreak;\ncase 71: this.$ = yy.makeStringVal(yytext); \nbreak;\ncase 72: this.$ = $$[$0]; \nbreak;\ncase 73: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 74: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 75: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 76: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 77: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 78: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 79: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 80: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 81: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 82: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 83: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 84: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 85: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 86: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 87: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 88: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 89: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 90: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 91: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 92: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 93: this.$ = yy.makeUnaryOp($$[$0-1], $$[$0]); \nbreak;\ncase 94: this.$ = yy.makeUnaryOp($$[$0-1], $$[$0]); \nbreak;\ncase 95: this.$ = yy.makeUnaryOp($$[$0-1], $$[$0]); \nbreak;\ncase 96: this.$ = $$[$0]; \nbreak;\ncase 97: this.$ = $$[$0]; \nbreak;\ncase 98: this.$ = $$[$0-1]; \nbreak;\ncase 99: this.$ = yy.makeFunctionCall($$[$0-2], []); \nbreak;\ncase 100: this.$ = yy.makeFunctionCall($$[$0-3], $$[$0-1]); \nbreak;\ncase 101: this.$ = yy.makeSuperCall([]); \nbreak;\ncase 102: this.$ = yy.makeSuperCall($$[$0-1]); \nbreak;\ncase 103: this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 104: this.$ = [$$[$0]]; \nbreak;\ncase 105: this.$ = $$[$0]; \nbreak;\ncase 106: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 107: this.$ = yy.makeBinaryOp($$[$0-1], $$[$0-2], $$[$0]); \nbreak;\ncase 108: this.$ = yy.makeIndex($$[$0-3], $$[$0-1]); \nbreak;\ncase 109: this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 110: this.$ = [$$[$0]]; \nbreak;\ncase 111: this.$ = yy.makeIdentifier(yytext); \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,3],6:3,7:4,8:5,9:6,53:[1,7],55:[1,9],56:[1,8]},{1:[3]},{5:[1,10]},{4:11,5:[2,3],6:3,7:4,8:5,9:6,53:[1,7],55:[1,9],56:[1,8]},{5:[2,4],53:[2,4],55:[2,4],56:[2,4]},{5:[2,5],53:[2,5],55:[2,5],56:[2,5]},{5:[2,6],53:[2,6],55:[2,6],56:[2,6]},{49:[1,12]},{49:[1,13]},{49:[1,14]},{1:[2,1]},{5:[2,2]},{32:[1,15]},{24:[1,16],58:[1,17]},{51:[1,18]},{33:[1,19],49:[1,21],54:20},{7:24,25:[2,53],49:[1,27],53:[1,7],57:22,59:23,60:[1,25],61:[1,26]},{49:[1,28]},{15:37,30:29,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{24:[1,44]},{33:[1,45]},{33:[2,48],50:[1,46]},{25:[1,47]},{7:24,25:[2,53],49:[1,27],53:[1,7],57:48,59:23,60:[1,25],61:[1,26]},{25:[2,54],49:[2,54],53:[2,54],60:[2,54],61:[2,54]},{32:[1,49]},{24:[1,50]},{51:[1,51]},{24:[1,52]},{14:[1,53],32:[1,74],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,69],32:[2,69],33:[2,69],44:[2,69],50:[2,69],75:[2,69],76:[2,69],77:[2,69],78:[2,69],79:[2,69],80:[2,69],81:[2,69],82:[2,69],83:[2,69],84:[2,69],85:[2,69],86:[2,69],87:[2,69],88:[2,69],89:[2,69],90:[2,69],91:[2,69],92:[2,69],93:[2,69],94:[2,69],100:[2,69],101:[2,69],102:[2,69],104:[2,69]},{14:[2,70],32:[2,70],33:[2,70],44:[2,70],50:[2,70],75:[2,70],76:[2,70],77:[2,70],78:[2,70],79:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70],86:[2,70],87:[2,70],88:[2,70],89:[2,70],90:[2,70],91:[2,70],92:[2,70],93:[2,70],94:[2,70],100:[2,70],101:[2,70],102:[2,70],104:[2,70]},{14:[2,71],32:[2,71],33:[2,71],44:[2,71],50:[2,71],75:[2,71],76:[2,71],77:[2,71],78:[2,71],79:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71],86:[2,71],87:[2,71],88:[2,71],89:[2,71],90:[2,71],91:[2,71],92:[2,71],93:[2,71],94:[2,71],100:[2,71],101:[2,71],102:[2,71],104:[2,71]},{14:[2,72],32:[2,72],33:[2,72],44:[2,72],50:[2,72],75:[2,72],76:[2,72],77:[2,72],78:[2,72],79:[2,72],80:[2,72],81:[2,72],82:[2,72],83:[2,72],84:[2,72],85:[2,72],86:[2,72],87:[2,72],88:[2,72],89:[2,72],90:[2,72],91:[2,72],92:[2,72],93:[2,72],94:[2,72],100:[2,72],101:[2,72],102:[2,72],104:[2,72]},{15:37,30:78,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:79,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:80,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[2,96],32:[2,96],33:[2,96],44:[2,96],50:[2,96],75:[2,96],76:[2,96],77:[2,96],78:[2,96],79:[2,96],80:[2,96],81:[2,96],82:[2,96],83:[2,96],84:[2,96],85:[2,96],86:[2,96],87:[2,96],88:[2,96],89:[2,96],90:[2,96],91:[2,96],92:[2,96],93:[2,96],94:[2,96],100:[2,96],101:[2,96],102:[2,96],104:[2,96]},{14:[2,97],32:[2,97],33:[2,97],44:[2,97],50:[2,97],75:[2,97],76:[2,97],77:[2,97],78:[2,97],79:[2,97],80:[2,97],81:[2,97],82:[2,97],83:[2,97],84:[2,97],85:[2,97],86:[2,97],87:[2,97],88:[2,97],89:[2,97],90:[2,97],91:[2,97],92:[2,97],93:[2,97],94:[2,97],100:[2,97],101:[2,97],102:[2,97],104:[2,97]},{15:37,30:81,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{32:[1,82]},{32:[1,83]},{14:[2,105],32:[2,105],33:[2,105],44:[2,105],50:[2,105],51:[2,105],63:[2,105],64:[2,105],65:[2,105],66:[2,105],67:[2,105],68:[2,105],69:[2,105],70:[2,105],71:[2,105],75:[2,105],76:[2,105],77:[2,105],78:[2,105],79:[2,105],80:[2,105],81:[2,105],82:[2,105],83:[2,105],84:[2,105],85:[2,105],86:[2,105],87:[2,105],88:[2,105],89:[2,105],90:[2,105],91:[2,105],92:[2,105],93:[2,105],94:[2,105],100:[2,105],101:[2,105],102:[2,105],104:[2,105]},{14:[2,111],32:[2,111],33:[2,111],44:[2,111],50:[2,111],51:[2,111],63:[2,111],64:[2,111],65:[2,111],66:[2,111],67:[2,111],68:[2,111],69:[2,111],70:[2,111],71:[2,111],75:[2,111],76:[2,111],77:[2,111],78:[2,111],79:[2,111],80:[2,111],81:[2,111],82:[2,111],83:[2,111],84:[2,111],85:[2,111],86:[2,111],87:[2,111],88:[2,111],89:[2,111],90:[2,111],91:[2,111],92:[2,111],93:[2,111],94:[2,111],100:[2,111],101:[2,111],102:[2,111],104:[2,111]},{10:84,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{24:[1,113]},{49:[1,21],54:114},{5:[2,50],53:[2,50],55:[2,50],56:[2,50]},{25:[2,52]},{33:[1,115],49:[1,21],54:116},{10:117,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:118,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{7:24,25:[2,53],49:[1,27],53:[1,7],57:119,59:23,60:[1,25],61:[1,26]},{5:[2,49],53:[2,49],55:[2,49],56:[2,49]},{15:37,30:120,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:121,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:122,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:123,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:124,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:125,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:126,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:127,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:128,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:129,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:130,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:131,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:132,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:133,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:134,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:135,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:136,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:137,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:138,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:139,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:142,32:[1,39],33:[1,140],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],97:141,98:[1,41],99:42},{49:[1,43],99:143},{49:[1,43],99:144},{15:37,30:146,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42,103:145},{14:[2,93],32:[1,74],33:[2,93],44:[2,93],50:[2,93],75:[2,93],76:[2,93],77:[2,93],78:[2,93],79:[2,93],80:[2,93],81:[2,93],82:[2,93],83:[2,93],84:[2,93],85:[2,93],86:[2,93],87:[2,93],88:[2,93],89:[2,93],90:[2,93],91:[2,93],92:[2,93],93:[2,93],94:[2,93],100:[1,75],101:[1,76],102:[1,77],104:[2,93]},{14:[2,94],32:[1,74],33:[2,94],44:[2,94],50:[2,94],75:[2,94],76:[2,94],77:[2,94],78:[2,94],79:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94],86:[2,94],87:[2,94],88:[2,94],89:[2,94],90:[2,94],91:[2,94],92:[2,94],93:[2,94],94:[2,94],100:[1,75],101:[1,76],102:[1,77],104:[2,94]},{14:[2,95],32:[1,74],33:[2,95],44:[2,95],50:[2,95],75:[2,95],76:[2,95],77:[2,95],78:[2,95],79:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95],86:[2,95],87:[2,95],88:[2,95],89:[2,95],90:[2,95],91:[2,95],92:[2,95],93:[2,95],94:[2,95],100:[1,75],101:[1,76],102:[1,77],104:[2,95]},{32:[1,74],33:[1,147],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{33:[1,148],49:[1,21],54:149},{15:37,30:142,32:[1,39],33:[1,150],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],97:151,98:[1,41],99:42},{25:[1,152]},{25:[2,7],43:[2,7],45:[2,7]},{11:153,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],43:[2,9],45:[2,9],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[1,154]},{14:[1,155],32:[2,96],75:[2,96],76:[2,96],77:[2,96],78:[2,96],79:[2,96],80:[2,96],81:[2,96],82:[2,96],83:[2,96],84:[2,96],85:[2,96],86:[2,96],87:[2,96],88:[2,96],89:[2,96],90:[2,96],91:[2,96],92:[2,96],93:[2,96],94:[2,96],100:[2,96],101:[2,96],102:[2,96]},{14:[1,156]},{14:[2,13],24:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],31:[2,13],32:[2,13],34:[2,13],35:[2,13],36:[2,13],37:[2,13],38:[2,13],39:[2,13],40:[2,13],43:[2,13],45:[2,13],46:[2,13],47:[2,13],49:[2,13],53:[2,13],72:[2,13],73:[2,13],74:[2,13],90:[2,13],95:[2,13],96:[2,13],98:[2,13]},{14:[2,14],24:[2,14],25:[2,14],26:[2,14],27:[2,14],28:[2,14],29:[2,14],31:[2,14],32:[2,14],34:[2,14],35:[2,14],36:[2,14],37:[2,14],38:[2,14],39:[2,14],40:[2,14],43:[2,14],45:[2,14],46:[2,14],47:[2,14],49:[2,14],53:[2,14],72:[2,14],73:[2,14],74:[2,14],90:[2,14],95:[2,14],96:[2,14],98:[2,14]},{14:[2,15],24:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],31:[2,15],32:[2,15],34:[2,15],35:[2,15],36:[2,15],37:[2,15],38:[2,15],39:[2,15],40:[2,15],43:[2,15],45:[2,15],46:[2,15],47:[2,15],49:[2,15],53:[2,15],72:[2,15],73:[2,15],74:[2,15],90:[2,15],95:[2,15],96:[2,15],98:[2,15]},{14:[2,16],24:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],31:[2,16],32:[2,16],34:[2,16],35:[2,16],36:[2,16],37:[2,16],38:[2,16],39:[2,16],40:[2,16],43:[2,16],45:[2,16],46:[2,16],47:[2,16],49:[2,16],53:[2,16],72:[2,16],73:[2,16],74:[2,16],90:[2,16],95:[2,16],96:[2,16],98:[2,16]},{14:[2,17],24:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],31:[2,17],32:[2,17],34:[2,17],35:[2,17],36:[2,17],37:[2,17],38:[2,17],39:[2,17],40:[2,17],43:[2,17],45:[2,17],46:[2,17],47:[2,17],49:[2,17],53:[2,17],72:[2,17],73:[2,17],74:[2,17],90:[2,17],95:[2,17],96:[2,17],98:[2,17]},{14:[2,18],24:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],31:[2,18],32:[2,18],34:[2,18],35:[2,18],36:[2,18],37:[2,18],38:[2,18],39:[2,18],40:[2,18],43:[2,18],45:[2,18],46:[2,18],47:[2,18],49:[2,18],53:[2,18],72:[2,18],73:[2,18],74:[2,18],90:[2,18],95:[2,18],96:[2,18],98:[2,18]},{14:[2,19],24:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],31:[2,19],32:[2,19],34:[2,19],35:[2,19],36:[2,19],37:[2,19],38:[2,19],39:[2,19],40:[2,19],43:[2,19],45:[2,19],46:[2,19],47:[2,19],49:[2,19],53:[2,19],72:[2,19],73:[2,19],74:[2,19],90:[2,19],95:[2,19],96:[2,19],98:[2,19]},{10:157,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[1,158]},{14:[1,159]},{14:[1,160]},{15:37,30:161,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],31:[2,25],32:[2,25],34:[2,25],35:[2,25],36:[2,25],37:[2,25],38:[2,25],39:[2,25],40:[2,25],43:[2,25],45:[2,25],46:[2,25],47:[2,25],49:[2,25],53:[2,25],72:[2,25],73:[2,25],74:[2,25],90:[2,25],95:[2,25],96:[2,25],98:[2,25]},{32:[2,97],51:[1,162],63:[1,163],64:[1,164],65:[1,165],66:[1,166],67:[1,167],68:[1,168],69:[1,169],70:[1,170],71:[1,171],75:[2,97],76:[2,97],77:[2,97],78:[2,97],79:[2,97],80:[2,97],81:[2,97],82:[2,97],83:[2,97],84:[2,97],85:[2,97],86:[2,97],87:[2,97],88:[2,97],89:[2,97],90:[2,97],91:[2,97],92:[2,97],93:[2,97],94:[2,97],100:[2,97],101:[2,97],102:[2,97]},{32:[1,74],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{48:172,49:[1,173]},{32:[1,174]},{32:[1,175]},{32:[1,176]},{12:177,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{32:[1,178]},{32:[1,179]},{32:[1,180]},{10:181,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{33:[2,47]},{24:[1,182]},{33:[1,183]},{25:[1,184]},{14:[1,185],32:[1,74],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{25:[1,186]},{14:[2,73],32:[1,74],33:[2,73],44:[2,73],50:[2,73],75:[2,73],76:[2,73],77:[2,73],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,73]},{14:[2,74],32:[1,74],33:[2,74],44:[2,74],50:[2,74],75:[2,74],76:[2,74],77:[2,74],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,74]},{14:[2,75],32:[1,74],33:[2,75],44:[2,75],50:[2,75],75:[2,75],76:[2,75],77:[2,75],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,75]},{14:[2,76],32:[1,74],33:[2,76],44:[2,76],50:[2,76],75:[2,76],76:[2,76],77:[2,76],78:[2,76],79:[2,76],80:[2,76],81:[2,76],82:[2,76],83:[2,76],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,76]},{14:[2,77],32:[1,74],33:[2,77],44:[2,77],50:[2,77],75:[2,77],76:[2,77],77:[2,77],78:[2,77],79:[2,77],80:[2,77],81:[2,77],82:[2,77],83:[2,77],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,77]},{14:[2,78],32:[1,74],33:[2,78],44:[2,78],50:[2,78],75:[2,78],76:[2,78],77:[2,78],78:[2,78],79:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,78]},{14:[2,79],32:[1,74],33:[2,79],44:[2,79],50:[2,79],75:[2,79],76:[2,79],77:[2,79],78:[2,79],79:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,79]},{14:[2,80],32:[1,74],33:[2,80],44:[2,80],50:[2,80],75:[2,80],76:[2,80],77:[2,80],78:[2,80],79:[2,80],80:[2,80],81:[2,80],82:[2,80],83:[2,80],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,80]},{14:[2,81],32:[1,74],33:[2,81],44:[2,81],50:[2,81],75:[2,81],76:[2,81],77:[2,81],78:[2,81],79:[2,81],80:[2,81],81:[2,81],82:[2,81],83:[2,81],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,81]},{14:[2,82],32:[1,74],33:[2,82],44:[2,82],50:[2,82],75:[2,82],76:[2,82],77:[2,82],78:[2,82],79:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82],86:[2,82],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,82]},{14:[2,83],32:[1,74],33:[2,83],44:[2,83],50:[2,83],75:[2,83],76:[2,83],77:[2,83],78:[2,83],79:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83],86:[2,83],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,83]},{14:[2,84],32:[1,74],33:[2,84],44:[2,84],50:[2,84],75:[2,84],76:[2,84],77:[2,84],78:[2,84],79:[2,84],80:[2,84],81:[2,84],82:[2,84],83:[2,84],84:[2,84],85:[2,84],86:[2,84],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,84]},{14:[2,85],32:[1,74],33:[2,85],44:[2,85],50:[2,85],75:[2,85],76:[2,85],77:[2,85],78:[2,85],79:[2,85],80:[2,85],81:[2,85],82:[2,85],83:[2,85],84:[2,85],85:[2,85],86:[2,85],87:[2,85],88:[2,85],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,85]},{14:[2,86],32:[1,74],33:[2,86],44:[2,86],50:[2,86],75:[2,86],76:[2,86],77:[2,86],78:[2,86],79:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86],86:[2,86],87:[2,86],88:[2,86],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,86]},{14:[2,87],32:[1,74],33:[2,87],44:[2,87],50:[2,87],75:[2,87],76:[2,87],77:[2,87],78:[2,87],79:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87],86:[2,87],87:[2,87],88:[2,87],89:[2,87],90:[2,87],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,87]},{14:[2,88],32:[1,74],33:[2,88],44:[2,88],50:[2,88],75:[2,88],76:[2,88],77:[2,88],78:[2,88],79:[2,88],80:[2,88],81:[2,88],82:[2,88],83:[2,88],84:[2,88],85:[2,88],86:[2,88],87:[2,88],88:[2,88],89:[2,88],90:[2,88],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,88]},{14:[2,89],32:[1,74],33:[2,89],44:[2,89],50:[2,89],75:[2,89],76:[2,89],77:[2,89],78:[2,89],79:[2,89],80:[2,89],81:[2,89],82:[2,89],83:[2,89],84:[2,89],85:[2,89],86:[2,89],87:[2,89],88:[2,89],89:[2,89],90:[2,89],91:[2,89],92:[2,89],93:[2,89],94:[2,89],100:[1,75],101:[1,76],102:[1,77],104:[2,89]},{14:[2,90],32:[1,74],33:[2,90],44:[2,90],50:[2,90],75:[2,90],76:[2,90],77:[2,90],78:[2,90],79:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90],86:[2,90],87:[2,90],88:[2,90],89:[2,90],90:[2,90],91:[2,90],92:[2,90],93:[2,90],94:[2,90],100:[1,75],101:[1,76],102:[1,77],104:[2,90]},{14:[2,91],32:[1,74],33:[2,91],44:[2,91],50:[2,91],75:[2,91],76:[2,91],77:[2,91],78:[2,91],79:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91],86:[2,91],87:[2,91],88:[2,91],89:[2,91],90:[2,91],91:[2,91],92:[2,91],93:[2,91],94:[2,91],100:[1,75],101:[1,76],102:[1,77],104:[2,91]},{14:[2,92],32:[1,74],33:[2,92],44:[2,92],50:[2,92],75:[2,92],76:[2,92],77:[2,92],78:[2,92],79:[2,92],80:[2,92],81:[2,92],82:[2,92],83:[2,92],84:[2,92],85:[2,92],86:[2,92],87:[2,92],88:[2,92],89:[2,92],90:[2,92],91:[2,92],92:[2,92],93:[2,92],94:[2,92],100:[1,75],101:[1,76],102:[1,77],104:[2,92]},{14:[2,99],32:[2,99],33:[2,99],44:[2,99],50:[2,99],75:[2,99],76:[2,99],77:[2,99],78:[2,99],79:[2,99],80:[2,99],81:[2,99],82:[2,99],83:[2,99],84:[2,99],85:[2,99],86:[2,99],87:[2,99],88:[2,99],89:[2,99],90:[2,99],91:[2,99],92:[2,99],93:[2,99],94:[2,99],100:[2,99],101:[2,99],102:[2,99],104:[2,99]},{33:[1,187]},{32:[1,74],33:[2,104],50:[1,188],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,106],32:[2,106],33:[2,106],44:[2,106],50:[2,106],51:[2,106],63:[2,106],64:[2,106],65:[2,106],66:[2,106],67:[2,106],68:[2,106],69:[2,106],70:[2,106],71:[2,106],75:[2,106],76:[2,106],77:[2,106],78:[2,106],79:[2,106],80:[2,106],81:[2,106],82:[2,106],83:[2,106],84:[2,106],85:[2,106],86:[2,106],87:[2,106],88:[2,106],89:[2,106],90:[2,106],91:[2,106],92:[2,106],93:[2,106],94:[2,106],100:[2,106],101:[2,106],102:[2,106],104:[2,106]},{14:[2,107],32:[2,107],33:[2,107],44:[2,107],50:[2,107],51:[2,107],63:[2,107],64:[2,107],65:[2,107],66:[2,107],67:[2,107],68:[2,107],69:[2,107],70:[2,107],71:[2,107],75:[2,107],76:[2,107],77:[2,107],78:[2,107],79:[2,107],80:[2,107],81:[2,107],82:[2,107],83:[2,107],84:[2,107],85:[2,107],86:[2,107],87:[2,107],88:[2,107],89:[2,107],90:[2,107],91:[2,107],92:[2,107],93:[2,107],94:[2,107],100:[2,107],101:[2,107],102:[2,107],104:[2,107]},{104:[1,189]},{32:[1,74],50:[1,190],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77],104:[2,110]},{14:[2,98],32:[2,98],33:[2,98],44:[2,98],50:[2,98],75:[2,98],76:[2,98],77:[2,98],78:[2,98],79:[2,98],80:[2,98],81:[2,98],82:[2,98],83:[2,98],84:[2,98],85:[2,98],86:[2,98],87:[2,98],88:[2,98],89:[2,98],90:[2,98],91:[2,98],92:[2,98],93:[2,98],94:[2,98],100:[2,98],101:[2,98],102:[2,98],104:[2,98]},{24:[1,191]},{33:[1,192]},{14:[2,101],32:[2,101],33:[2,101],44:[2,101],50:[2,101],75:[2,101],76:[2,101],77:[2,101],78:[2,101],79:[2,101],80:[2,101],81:[2,101],82:[2,101],83:[2,101],84:[2,101],85:[2,101],86:[2,101],87:[2,101],88:[2,101],89:[2,101],90:[2,101],91:[2,101],92:[2,101],93:[2,101],94:[2,101],100:[2,101],101:[2,101],102:[2,101],104:[2,101]},{33:[1,193]},{5:[2,45],25:[2,45],49:[2,45],53:[2,45],55:[2,45],56:[2,45],60:[2,45],61:[2,45]},{25:[2,8],43:[2,8],45:[2,8]},{14:[2,10],24:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],31:[2,10],32:[2,10],34:[2,10],35:[2,10],36:[2,10],37:[2,10],38:[2,10],39:[2,10],40:[2,10],43:[2,10],45:[2,10],46:[2,10],47:[2,10],49:[2,10],53:[2,10],72:[2,10],73:[2,10],74:[2,10],90:[2,10],95:[2,10],96:[2,10],98:[2,10]},{14:[2,11],24:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],31:[2,11],32:[2,11],34:[2,11],35:[2,11],36:[2,11],37:[2,11],38:[2,11],39:[2,11],40:[2,11],43:[2,11],45:[2,11],46:[2,11],47:[2,11],49:[2,11],53:[2,11],72:[2,11],73:[2,11],74:[2,11],90:[2,11],95:[2,11],96:[2,11],98:[2,11]},{14:[2,12],24:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],31:[2,12],32:[2,12],34:[2,12],35:[2,12],36:[2,12],37:[2,12],38:[2,12],39:[2,12],40:[2,12],43:[2,12],45:[2,12],46:[2,12],47:[2,12],49:[2,12],53:[2,12],72:[2,12],73:[2,12],74:[2,12],90:[2,12],95:[2,12],96:[2,12],98:[2,12]},{25:[1,194]},{14:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],31:[2,21],32:[2,21],34:[2,21],35:[2,21],36:[2,21],37:[2,21],38:[2,21],39:[2,21],40:[2,21],43:[2,21],45:[2,21],46:[2,21],47:[2,21],49:[2,21],53:[2,21],72:[2,21],73:[2,21],74:[2,21],90:[2,21],95:[2,21],96:[2,21],98:[2,21]},{14:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],31:[2,22],32:[2,22],34:[2,22],35:[2,22],36:[2,22],37:[2,22],38:[2,22],39:[2,22],40:[2,22],43:[2,22],45:[2,22],46:[2,22],47:[2,22],49:[2,22],53:[2,22],72:[2,22],73:[2,22],74:[2,22],90:[2,22],95:[2,22],96:[2,22],98:[2,22]},{14:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],31:[2,23],32:[2,23],34:[2,23],35:[2,23],36:[2,23],37:[2,23],38:[2,23],39:[2,23],40:[2,23],43:[2,23],45:[2,23],46:[2,23],47:[2,23],49:[2,23],53:[2,23],72:[2,23],73:[2,23],74:[2,23],90:[2,23],95:[2,23],96:[2,23],98:[2,23]},{14:[1,195],32:[1,74],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{15:37,30:196,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[2,60],33:[2,60]},{14:[2,61],33:[2,61]},{15:37,30:197,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:198,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:199,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:200,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:201,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:202,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:203,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[2,38]},{14:[2,41],50:[1,204],51:[1,205]},{15:37,30:206,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:207,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:208,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{38:[1,209]},{13:210,15:37,30:104,32:[1,39],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:211,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:212,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{25:[1,213]},{10:214,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{24:[1,215]},{25:[2,57],49:[2,57],53:[2,57],60:[2,57],61:[2,57]},{25:[2,58],49:[2,58],53:[2,58],60:[2,58],61:[2,58]},{5:[2,51],53:[2,51],55:[2,51],56:[2,51]},{14:[2,100],32:[2,100],33:[2,100],44:[2,100],50:[2,100],75:[2,100],76:[2,100],77:[2,100],78:[2,100],79:[2,100],80:[2,100],81:[2,100],82:[2,100],83:[2,100],84:[2,100],85:[2,100],86:[2,100],87:[2,100],88:[2,100],89:[2,100],90:[2,100],91:[2,100],92:[2,100],93:[2,100],94:[2,100],100:[2,100],101:[2,100],102:[2,100],104:[2,100]},{15:37,30:142,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],97:216,98:[1,41],99:42},{14:[2,108],32:[2,108],33:[2,108],44:[2,108],50:[2,108],51:[2,108],63:[2,108],64:[2,108],65:[2,108],66:[2,108],67:[2,108],68:[2,108],69:[2,108],70:[2,108],71:[2,108],75:[2,108],76:[2,108],77:[2,108],78:[2,108],79:[2,108],80:[2,108],81:[2,108],82:[2,108],83:[2,108],84:[2,108],85:[2,108],86:[2,108],87:[2,108],88:[2,108],89:[2,108],90:[2,108],91:[2,108],92:[2,108],93:[2,108],94:[2,108],100:[2,108],101:[2,108],102:[2,108],104:[2,108]},{15:37,30:146,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42,103:217},{10:218,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{24:[1,219]},{14:[2,102],32:[2,102],33:[2,102],44:[2,102],50:[2,102],75:[2,102],76:[2,102],77:[2,102],78:[2,102],79:[2,102],80:[2,102],81:[2,102],82:[2,102],83:[2,102],84:[2,102],85:[2,102],86:[2,102],87:[2,102],88:[2,102],89:[2,102],90:[2,102],91:[2,102],92:[2,102],93:[2,102],94:[2,102],100:[2,102],101:[2,102],102:[2,102],104:[2,102]},{14:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],31:[2,20],32:[2,20],34:[2,20],35:[2,20],36:[2,20],37:[2,20],38:[2,20],39:[2,20],40:[2,20],43:[2,20],45:[2,20],46:[2,20],47:[2,20],49:[2,20],53:[2,20],72:[2,20],73:[2,20],74:[2,20],90:[2,20],95:[2,20],96:[2,20],98:[2,20]},{14:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],31:[2,24],32:[2,24],34:[2,24],35:[2,24],36:[2,24],37:[2,24],38:[2,24],39:[2,24],40:[2,24],43:[2,24],45:[2,24],46:[2,24],47:[2,24],49:[2,24],53:[2,24],72:[2,24],73:[2,24],74:[2,24],90:[2,24],95:[2,24],96:[2,24],98:[2,24]},{14:[2,59],32:[1,74],33:[2,59],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,62],32:[1,74],33:[2,62],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,63],32:[1,74],33:[2,63],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,64],32:[1,74],33:[2,64],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,65],32:[1,74],33:[2,65],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,66],32:[1,74],33:[2,66],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,67],32:[1,74],33:[2,67],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[2,68],32:[1,74],33:[2,68],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{48:220,49:[1,173]},{15:37,30:221,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{32:[1,74],33:[1,222],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{32:[1,74],33:[1,223],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{32:[1,74],33:[1,224],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{32:[1,225]},{14:[1,226]},{32:[1,74],33:[1,227],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{32:[1,74],33:[1,228],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{5:[2,46],25:[2,46],49:[2,46],53:[2,46],55:[2,46],56:[2,46],60:[2,46],61:[2,46]},{25:[1,229]},{10:230,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{33:[2,103]},{104:[2,109]},{25:[1,231]},{10:232,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[2,39]},{14:[2,42],32:[1,74],50:[1,233],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{12:234,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{12:235,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{12:236,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:237,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{15:37,30:238,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{24:[1,239]},{12:240,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{25:[2,55],49:[2,55],53:[2,55],60:[2,55],61:[2,55]},{25:[1,241]},{14:[2,43],32:[2,43],33:[2,43],44:[2,43],50:[2,43],75:[2,43],76:[2,43],77:[2,43],78:[2,43],79:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],86:[2,43],87:[2,43],88:[2,43],89:[2,43],90:[2,43],91:[2,43],92:[2,43],93:[2,43],94:[2,43],100:[2,43],101:[2,43],102:[2,43],104:[2,43]},{25:[1,242]},{48:243,49:[1,173]},{14:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],31:[2,26],32:[2,26],34:[1,244],35:[2,26],36:[2,26],37:[2,26],38:[2,26],39:[2,26],40:[2,26],43:[2,26],45:[2,26],46:[2,26],47:[2,26],49:[2,26],53:[2,26],72:[2,26],73:[2,26],74:[2,26],90:[2,26],95:[2,26],96:[2,26],98:[2,26]},{14:[2,28],24:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],31:[2,28],32:[2,28],34:[2,28],35:[2,28],36:[2,28],37:[2,28],38:[2,28],39:[2,28],40:[2,28],43:[2,28],45:[2,28],46:[2,28],47:[2,28],49:[2,28],53:[2,28],72:[2,28],73:[2,28],74:[2,28],90:[2,28],95:[2,28],96:[2,28],98:[2,28]},{14:[2,29],24:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],31:[2,29],32:[2,29],34:[2,29],35:[2,29],36:[2,29],37:[2,29],38:[2,29],39:[2,29],40:[2,29],43:[2,29],45:[2,29],46:[2,29],47:[2,29],49:[2,29],53:[2,29],72:[2,29],73:[2,29],74:[2,29],90:[2,29],95:[2,29],96:[2,29],98:[2,29]},{32:[1,74],33:[1,245],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{14:[1,246],32:[1,74],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{25:[2,34],41:247,42:248,43:[1,249],45:[1,250]},{14:[2,37],24:[2,37],25:[2,37],26:[2,37],27:[2,37],28:[2,37],29:[2,37],31:[2,37],32:[2,37],34:[2,37],35:[2,37],36:[2,37],37:[2,37],38:[2,37],39:[2,37],40:[2,37],43:[2,37],45:[2,37],46:[2,37],47:[2,37],49:[2,37],53:[2,37],72:[2,37],73:[2,37],74:[2,37],90:[2,37],95:[2,37],96:[2,37],98:[2,37]},{25:[2,56],49:[2,56],53:[2,56],60:[2,56],61:[2,56]},{14:[2,44],32:[2,44],33:[2,44],44:[2,44],50:[2,44],75:[2,44],76:[2,44],77:[2,44],78:[2,44],79:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],86:[2,44],87:[2,44],88:[2,44],89:[2,44],90:[2,44],91:[2,44],92:[2,44],93:[2,44],94:[2,44],100:[2,44],101:[2,44],102:[2,44],104:[2,44]},{14:[2,40]},{12:251,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{14:[2,30],24:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],31:[2,30],32:[2,30],34:[2,30],35:[2,30],36:[2,30],37:[2,30],38:[2,30],39:[2,30],40:[2,30],43:[2,30],45:[2,30],46:[2,30],47:[2,30],49:[2,30],53:[2,30],72:[2,30],73:[2,30],74:[2,30],90:[2,30],95:[2,30],96:[2,30],98:[2,30]},{13:252,15:37,30:104,32:[1,39],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{25:[1,253]},{25:[2,34],41:254,42:248,43:[1,249],45:[1,250]},{15:37,30:255,32:[1,39],49:[1,43],52:33,53:[1,40],62:38,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{44:[1,256]},{14:[2,27],24:[2,27],25:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],31:[2,27],32:[2,27],34:[2,27],35:[2,27],36:[2,27],37:[2,27],38:[2,27],39:[2,27],40:[2,27],43:[2,27],45:[2,27],46:[2,27],47:[2,27],49:[2,27],53:[2,27],72:[2,27],73:[2,27],74:[2,27],90:[2,27],95:[2,27],96:[2,27],98:[2,27]},{33:[1,257]},{14:[2,32],24:[2,32],25:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],31:[2,32],32:[2,32],34:[2,32],35:[2,32],36:[2,32],37:[2,32],38:[2,32],39:[2,32],40:[2,32],43:[2,32],45:[2,32],46:[2,32],47:[2,32],49:[2,32],53:[2,32],72:[2,32],73:[2,32],74:[2,32],90:[2,32],95:[2,32],96:[2,32],98:[2,32]},{25:[2,33]},{32:[1,74],44:[1,258],75:[1,54],76:[1,55],77:[1,56],78:[1,57],79:[1,58],80:[1,59],81:[1,60],82:[1,61],83:[1,62],84:[1,63],85:[1,64],86:[1,65],87:[1,66],88:[1,67],89:[1,68],90:[1,69],91:[1,70],92:[1,71],93:[1,72],94:[1,73],100:[1,75],101:[1,76],102:[1,77]},{10:259,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],43:[2,9],45:[2,9],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{12:260,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{10:261,11:85,12:86,13:87,14:[1,102],15:88,16:89,17:90,18:91,19:92,20:93,21:94,22:95,23:96,24:[1,97],25:[2,9],26:[1,98],27:[1,99],28:[1,100],29:[1,101],30:104,31:[1,106],32:[1,39],35:[1,107],36:[1,108],37:[1,109],39:[1,110],40:[1,111],43:[2,9],45:[2,9],46:[1,112],47:[1,105],49:[1,43],52:33,53:[1,40],62:103,72:[1,30],73:[1,31],74:[1,32],90:[1,36],95:[1,34],96:[1,35],98:[1,41],99:42},{25:[2,36],43:[2,36],45:[2,36]},{14:[2,31],24:[2,31],25:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],31:[2,31],32:[2,31],34:[2,31],35:[2,31],36:[2,31],37:[2,31],38:[2,31],39:[2,31],40:[2,31],43:[2,31],45:[2,31],46:[2,31],47:[2,31],49:[2,31],53:[2,31],72:[2,31],73:[2,31],74:[2,31],90:[2,31],95:[2,31],96:[2,31],98:[2,31]},{25:[2,35],43:[2,35],45:[2,35]}],\ndefaultActions: {10:[2,1],11:[2,2],48:[2,52],114:[2,47],172:[2,38],216:[2,103],217:[2,109],220:[2,39],243:[2,40],254:[2,33]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == 'undefined') {\n        this.lexer.yylloc = {};\n    }\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === 'function') {\n        this.parseError = this.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + this.lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: this.lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: this.lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.2.0 */\nvar lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            if (this.options.backtrack_lexer) {\n                delete backup;\n            }\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        if (this.options.backtrack_lexer) {\n            delete backup;\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/* C-style comment */\nbreak;\ncase 2:/* C++-style comment */\nbreak;\ncase 3:return 47;\nbreak;\ncase 4:return 31;\nbreak;\ncase 5:return 34;\nbreak;\ncase 6:return 35;\nbreak;\ncase 7:return 36;\nbreak;\ncase 8:return 37;\nbreak;\ncase 9:return 38;\nbreak;\ncase 10:return 39;\nbreak;\ncase 11:return 40;\nbreak;\ncase 12:return 43;\nbreak;\ncase 13:return 46;\nbreak;\ncase 14:return 45;\nbreak;\ncase 15:return 26;\nbreak;\ncase 16:return 27;\nbreak;\ncase 17:return 28;\nbreak;\ncase 18:return 29;\nbreak;\ncase 19:return 56;\nbreak;\ncase 20:return 53;\nbreak;\ncase 21:return 55;\nbreak;\ncase 22:return 58;\nbreak;\ncase 23:return 60;\nbreak;\ncase 24:return 61;\nbreak;\ncase 25:return 98;\nbreak;\ncase 26:return 93;\nbreak;\ncase 27:return 94;\nbreak;\ncase 28:return 72;        /* 123.4 */\nbreak;\ncase 29:return 73;           /* $FF00AA */\nbreak;\ncase 30:return 74;        /* \"string\" */\nbreak;\ncase 31:return 74;        /* 'string' */\nbreak;\ncase 32:return 49;    /* var_name3 */\nbreak;\ncase 33:return 14;\nbreak;\ncase 34:return 50;\nbreak;\ncase 35:return 44;\nbreak;\ncase 36:return 24;\nbreak;\ncase 37:return 25;\nbreak;\ncase 38:return 63;\nbreak;\ncase 39:return 64;\nbreak;\ncase 40:return 65;\nbreak;\ncase 41:return 66;\nbreak;\ncase 42:return 67;\nbreak;\ncase 43:return 68;\nbreak;\ncase 44:return 69;\nbreak;\ncase 45:return 70;\nbreak;\ncase 46:return 71;\nbreak;\ncase 47:return 87;\nbreak;\ncase 48:return 88;\nbreak;\ncase 49:return 75;\nbreak;\ncase 50:return 76;\nbreak;\ncase 51:return 77;\nbreak;\ncase 52:return 79;\nbreak;\ncase 53:return 78;\nbreak;\ncase 54:return 80;\nbreak;\ncase 55:return 81\nbreak;\ncase 56:return 83;;\nbreak;\ncase 57:return 82;\nbreak;\ncase 58:return 51;\nbreak;\ncase 59:return 84;\nbreak;\ncase 60:return 85;\nbreak;\ncase 61:return 86;\nbreak;\ncase 62:return 89;\nbreak;\ncase 63:return 101;\nbreak;\ncase 64:return 90;\nbreak;\ncase 65:return 91;\nbreak;\ncase 66:return 92;\nbreak;\ncase 67:return 95;\nbreak;\ncase 68:return 96;\nbreak;\ncase 69:return 100;\nbreak;\ncase 70:return 102;\nbreak;\ncase 71:return 104;\nbreak;\ncase 72:return 32;\nbreak;\ncase 73:return 33;\nbreak;\ncase 74:return 5;\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\/\\*[\\s\\S]*?\\*\\/)/,/^(?:\\/\\/.*)/,/^(?:var\\b)/,/^(?:if\\b)/,/^(?:else\\b)/,/^(?:repeat\\b)/,/^(?:while\\b)/,/^(?:do\\b)/,/^(?:until\\b)/,/^(?:for\\b)/,/^(?:switch\\b)/,/^(?:case\\b)/,/^(?:with\\b)/,/^(?:default\\b)/,/^(?:break\\b)/,/^(?:continue\\b)/,/^(?:exit\\b)/,/^(?:return\\b)/,/^(?:object\\b)/,/^(?:script\\b)/,/^(?:const\\b)/,/^(?:parent\\b)/,/^(?:create\\b)/,/^(?:destroy\\b)/,/^(?:super\\b)/,/^(?:div\\b)/,/^(?:mod\\b)/,/^(?:[0-9]+(\\.[0-9]+)?\\b)/,/^(?:\\$[0-9a-fA-F]+\\b)/,/^(?:\"[\\s\\S]*?\")/,/^(?:'[\\s\\S]*?')/,/^(?:[a-zA-Z_][0-9a-zA-Z_]*)/,/^(?:;)/,/^(?:,)/,/^(?::)/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\+\\+)/,/^(?:--)/,/^(?:\\+=)/,/^(?:-=)/,/^(?:\\*=)/,/^(?:\\/=)/,/^(?:\\|=)/,/^(?:&=)/,/^(?:\\^=)/,/^(?:<<)/,/^(?:>>)/,/^(?:&&)/,/^(?:\\|\\|)/,/^(?:\\^\\^)/,/^(?:<=)/,/^(?:<)/,/^(?:==)/,/^(?:!=)/,/^(?:>=)/,/^(?:>)/,/^(?:=)/,/^(?:\\|)/,/^(?:&)/,/^(?:\\^)/,/^(?:\\+)/,/^(?:->)/,/^(?:-)/,/^(?:\\*)/,/^(?:\\/)/,/^(?:!)/,/^(?:~)/,/^(?:\\.)/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\()/,/^(?:\\))/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],\"inclusive\":true}}\n};\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n});\n",
    "\ndefine('angl/out/angl',['require','exports','module','./parser','fs'],function (require, exports, module) {var parser = require('./parser').parser,\r\n    fs = require('fs');\r\nparser.yy = {\r\n    // makes number literal structure from decimal token\r\n    makeNumVal: function (yytext) {\r\n        return {\r\n            type: 'number',\r\n            val: Number(yytext)\r\n        };\r\n    },\r\n    // makes number literal structure from hex token\r\n    makeHexVal: function (yytext) {\r\n        // strip leading $\r\n        yytext = yytext.substr(1);\r\n        return {\r\n            type: 'number',\r\n            val: parseInt(yytext, 16) // hexadecimal\r\n        };\r\n    },\r\n    // makes string literal structure from string token\r\n    makeStringVal: function (yytext) {\r\n        // strip leading and trailing quote marks\r\n        yytext = yytext.substr(1, yytext.length - 2);\r\n        return {\r\n            type: 'string',\r\n            val: yytext\r\n        };\r\n    },\r\n    // makes identifier structure\r\n    makeIdentifier: function (yytext) {\r\n        return {\r\n            type: 'identifier',\r\n            name: yytext\r\n        };\r\n    },\r\n    // makes script literal structure\r\n    makeScriptVal: function (args, stmts) {\r\n        return {\r\n            type: 'script',\r\n            args: args,\r\n            stmts: stmts\r\n        };\r\n    },\r\n    // makes script definition structure\r\n    makeScriptStmt: function (name, args, stmts) {\r\n        return {\r\n            type: 'scriptdef',\r\n            name: name,\r\n            args: args,\r\n            stmts: stmts\r\n        };\r\n    },\r\n    // makes const definition structure\r\n    makeConstStmt: function (name, expr) {\r\n        return {\r\n            type: 'const',\r\n            name: name,\r\n            expr: expr\r\n        };\r\n    },\r\n    // makes object statement structure\r\n    makeObjectStmt: function (name, stmts, parent) {\r\n        if (parent) {\r\n            return {\r\n                type: 'object',\r\n                name: name,\r\n                parent: parent,\r\n                stmts: stmts\r\n            };\r\n        } else {\r\n            return {\r\n                type: 'object',\r\n                name: name,\r\n                stmts: stmts\r\n            };\r\n        }\r\n    },\r\n    // makes create script definition structure\r\n    makeCreateStmt: function (args, stmts) {\r\n        return {\r\n            type: 'createdef',\r\n            args: args,\r\n            stmts: stmts\r\n        };\r\n    },\r\n    // makes destroy script definition structure\r\n    makeDestroyStmt: function (stmts) {\r\n        return {\r\n            type: 'destroydef',\r\n            stmts: stmts\r\n        };\r\n    },\r\n    // makes property definition structure\r\n    makePropertyStmt: function (name, expr) {\r\n        return {\r\n            type: 'property',\r\n            name: name,\r\n            expr: expr\r\n        };\r\n    },\r\n    // make binary operator structure\r\n    makeBinaryOp: function (op, expr1, expr2) {\r\n        return {\r\n            type: 'binop',\r\n            op: op,\r\n            expr1: expr1,\r\n            expr2: expr2\r\n        };\r\n    },\r\n    // make unary operator structure\r\n    makeUnaryOp: function (op, expr) {\r\n        return {\r\n            type: 'unop',\r\n            op: op,\r\n            expr: expr\r\n        };\r\n    },\r\n    // make index (a[1,2,3...]) structure\r\n    makeIndex: function (expr, indexes) {\r\n        return {\r\n            type: 'index',\r\n            expr: expr,\r\n            indexes: indexes\r\n        };\r\n    },\r\n    // make function call structure\r\n    makeFunctionCall: function (expr, args) {\r\n        return {\r\n            type: 'funccall',\r\n            expr: expr,\r\n            args: args\r\n        };  \r\n    },\r\n    // make super call structure\r\n    makeSuperCall: function (args) {\r\n        return {\r\n            type: 'super',\r\n            args: args\r\n        };  \r\n    },\r\n    // make statement list structure\r\n    makeStmtList: function (list) {\r\n        return {\r\n            type: 'statements',\r\n            list: list\r\n        };\r\n    },\r\n    // make assignment statment structure\r\n    makeAssignStmt: function (lval, rval) {\r\n        return {\r\n            type: 'assign',\r\n            lval: lval,\r\n            rval: rval\r\n        };\r\n    },\r\n    // make compound assignment statment structure\r\n    makeCmpAssignStmt: function (op, lval, rval) {\r\n        return {\r\n            type: 'cmpassign',\r\n            lval: lval,\r\n            rval: rval,\r\n            op: op\r\n        };\r\n    },\r\n    // makes var statement structure\r\n    makeVarStmt: function (list) {\r\n        return {\r\n            type: 'var',\r\n            list: list\r\n        };\r\n    },\r\n    // makes var statement item structure\r\n    makeVarStmtItem: function (yytext, expr) {\r\n        if (expr) {\r\n            return {\r\n                type: 'var_item',\r\n                name: yytext,\r\n                expr: expr\r\n            };\r\n        } else {\r\n            return {\r\n                type: 'var_item',\r\n                name: yytext\r\n            };\r\n        }\r\n    },\r\n    // makes NOP statement structure (freestanding semicolon)\r\n    makeNopStmt: function () {\r\n        return {\r\n            type: 'nop'\r\n        };\r\n    },\r\n    // makes break statement structure\r\n    makeBreakStmt: function () {\r\n        return {\r\n            type: 'break'\r\n        };\r\n    },\r\n    // makes continue statement structure\r\n    makeContinueStmt: function () {\r\n        return {\r\n            type: 'continue'\r\n        };\r\n    },\r\n    // makes exit statement structure\r\n    makeExitStmt: function () {\r\n        return {\r\n            type: 'exit'\r\n        };\r\n    },\r\n    // makes return statement structure\r\n    makeReturnStmt: function (expr) {\r\n        return {\r\n            type: 'return',\r\n            expr: expr\r\n        };\r\n    },\r\n    // makes if statement structure\r\n    makeIfStmt: function (expr, stmt) {\r\n        return {\r\n            type: 'if',\r\n            expr: expr,\r\n            stmt: stmt\r\n        };\r\n    },\r\n    // makes if-else statement structure\r\n    makeIfElseStmt: function (expr, stmt1, stmt2) {\r\n        return {\r\n            type: 'ifelse',\r\n            expr: expr,\r\n            stmt1: stmt1,\r\n            stmt2: stmt2\r\n        };\r\n    },\r\n    // makes repeat statement structure\r\n    makeRepeatStmt: function (expr, stmt) {\r\n        return {\r\n            type: 'repeat',\r\n            expr: expr,\r\n            stmt: stmt\r\n        };\r\n    },\r\n    // makes while statement structure\r\n    makeWhileStmt: function (expr, stmt) {\r\n        return {\r\n            type: 'while',\r\n            expr: expr,\r\n            stmt: stmt\r\n        };\r\n    },\r\n    // makes do-until statement structure\r\n    makeDoUntilStmt: function (stmt, expr) {\r\n        return {\r\n            type: 'dountil',\r\n            expr: expr,\r\n            stmt: stmt\r\n        };\r\n    },\r\n    // makes for statement structure\r\n    makeForStmt: function (initstmt, contexpr, stepstmt, stmt) {\r\n        return {\r\n            type: 'for',\r\n            initstmt: initstmt,\r\n            contexpr: contexpr,\r\n            stepstmt: stepstmt,\r\n            stmt: stmt\r\n        };\r\n    },\r\n    // makes switch statement structure\r\n    makeSwitchStmt: function (expr, cases) {\r\n        return {\r\n            type: 'switch',\r\n            expr: expr,\r\n            cases: cases\r\n        };\r\n    },\r\n    // makes switch case structure\r\n    makeCase: function (expr, stmts) {\r\n        return {\r\n            type: 'case',\r\n            expr: expr,\r\n            stmts: stmts\r\n        };\r\n    },\r\n    // makes switch default case structure\r\n    makeDefaultCase: function (stmts) {\r\n        return {\r\n            type: 'defaultcase',\r\n            stmts: stmts\r\n        };\r\n    },\r\n    // makes with statement structure\r\n    makeWithStmt: function (expr, stmt) {\r\n        return {\r\n            type: 'with',\r\n            expr: expr,\r\n            stmt: stmt\r\n        };\r\n    }\r\n};\r\n\r\nexports.parse = function (input) {\r\n    return parser.parse(input);\r\n};\r\n\r\nexports.printAST = function (input) {\r\n    console.log(JSON.stringify(parser.parse(input), null, '  '));\r\n};\r\n\r\n// command line\r\nif (require.main === module) {\r\n    if (process.argv.hasOwnProperty('2') && process.argv[2] !== '--help') {\r\n        exports.printAST(fs.readFileSync(process.argv[2]).toString());\r\n    } else {\r\n        console.log('Usage:');\r\n        console.log('   node angl.js FILENAME');\r\n    }\r\n}\r\n\n});\n",
    "\n/**\n * @license\n * Lo-Dash 1.0.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modern -o ./dist/lodash.js`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.4.4 <http://underscorejs.org/>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * Available under MIT license <http://lodash.com/license>\n */\n;(function(window, undefined) {\n\n  /** Detect free variable `exports` */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `module` */\n  var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n  /** Detect free variable `global` and use it as `window` */\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    window = freeGlobal;\n  }\n\n  /** Used for array and object method references */\n  var arrayRef = [],\n      objectRef = {};\n\n  /** Used to generate unique IDs */\n  var idCounter = 0;\n\n  /** Used internally to indicate various things */\n  var indicatorObject = objectRef;\n\n  /** Used by `cachedContains` as the default size when optimizations are enabled for large arrays */\n  var largeArraySize = 30;\n\n  /** Used to restore the original `_` reference in `noConflict` */\n  var oldDash = window._;\n\n  /** Used to match HTML entities */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g;\n\n  /** Used to match empty string literals in compiled template source */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match regexp flags from their coerced string values */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    (objectRef.valueOf + '')\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/valueOf|for [^\\]]+/g, '.+?') + '$'\n  );\n\n  /**\n   * Used to match ES6 template delimiters\n   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match \"interpolate\" template delimiters */\n  var reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to ensure capturing order of template delimiters */\n  var reNoMatch = /($^)/;\n\n  /** Used to match HTML characters */\n  var reUnescapedHtml = /[&<>\"']/g;\n\n  /** Used to match unescaped characters in compiled string literals */\n  var reUnescapedString = /['\\n\\r\\t\\u2028\\u2029\\\\]/g;\n\n  /** Used to make template sourceURLs easier to identify */\n  var templateCounter = 0;\n\n  /** Native method shortcuts */\n  var ceil = Math.ceil,\n      concat = arrayRef.concat,\n      floor = Math.floor,\n      getPrototypeOf = reNative.test(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n      hasOwnProperty = objectRef.hasOwnProperty,\n      push = arrayRef.push,\n      toString = objectRef.toString;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeBind = reNative.test(nativeBind = slice.bind) && nativeBind,\n      nativeIsArray = reNative.test(nativeIsArray = Array.isArray) && nativeIsArray,\n      nativeIsFinite = window.isFinite,\n      nativeIsNaN = window.isNaN,\n      nativeKeys = reNative.test(nativeKeys = Object.keys) && nativeKeys,\n      nativeMax = Math.max,\n      nativeMin = Math.min,\n      nativeRandom = Math.random;\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      funcClass = '[object Function]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Detect various environments */\n  var isIeOpera = !!window.attachEvent,\n      isV8 = nativeBind && !/\\n|true/.test(nativeBind + isIeOpera);\n\n  /* Detect if `Function#bind` exists and is inferred to be fast (all but V8) */\n  var isBindFast = nativeBind && !isV8;\n\n  /* Detect if `Object.keys` exists and is inferred to be fast (IE, Opera, V8) */\n  var isKeysFast = nativeKeys && (isIeOpera || isV8);\n\n  /** Used to identify object classifications that `_.clone` supports */\n  var cloneableClasses = {};\n  cloneableClasses[funcClass] = false;\n  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =\n  cloneableClasses[boolClass] = cloneableClasses[dateClass] =\n  cloneableClasses[numberClass] = cloneableClasses[objectClass] =\n  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;\n\n  /** Used to lookup a built-in constructor by [[Class]] */\n  var ctorByClass = {};\n  ctorByClass[arrayClass] = Array;\n  ctorByClass[boolClass] = Boolean;\n  ctorByClass[dateClass] = Date;\n  ctorByClass[objectClass] = Object;\n  ctorByClass[numberClass] = Number;\n  ctorByClass[regexpClass] = RegExp;\n  ctorByClass[stringClass] = String;\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object, that wraps the given `value`, to enable method\n   * chaining.\n   *\n   * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n   * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n   * and `unshift`\n   *\n   * The chainable wrapper functions are:\n   * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`, `compose`,\n   * `concat`, `countBy`, `debounce`, `defaults`, `defer`, `delay`, `difference`,\n   * `filter`, `flatten`, `forEach`, `forIn`, `forOwn`, `functions`, `groupBy`,\n   * `initial`, `intersection`, `invert`, `invoke`, `keys`, `map`, `max`, `memoize`,\n   * `merge`, `min`, `object`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n   * `pick`, `pluck`, `push`, `range`, `reject`, `rest`, `reverse`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`,\n   * `union`, `uniq`, `unshift`, `values`, `where`, `without`, `wrap`, and `zip`\n   *\n   * The non-chainable wrapper functions are:\n   * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `has`, `identity`,\n   * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`,\n   * `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`, `isObject`,\n   * `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`, `lastIndexOf`,\n   * `mixin`, `noConflict`, `pop`, `random`, `reduce`, `reduceRight`, `result`,\n   * `shift`, `size`, `some`, `sortedIndex`, `template`, `unescape`, and `uniqueId`\n   *\n   * The wrapper functions `first` and `last` return wrapped values when `n` is\n   * passed, otherwise they return unwrapped values.\n   *\n   * @name _\n   * @constructor\n   * @category Chaining\n   * @param {Mixed} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns a `lodash` instance.\n   */\n  function lodash(value) {\n    // exit early if already wrapped, even if wrapped by a different `lodash` constructor\n    if (value && typeof value == 'object' && value.__wrapped__) {\n      return value;\n    }\n    // allow invoking `lodash` without the `new` operator\n    if (!(this instanceof lodash)) {\n      return new lodash(value);\n    }\n    this.__wrapped__ = value;\n  }\n\n  /**\n   * By default, the template delimiters used by Lo-Dash are similar to those in\n   * embedded Ruby (ERB). Change the following template settings to use alternative\n   * delimiters.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  lodash.templateSettings = {\n\n    /**\n     * Used to detect `data` property values to be HTML-escaped.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'escape': /<%-([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect code to be evaluated.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'evaluate': /<%([\\s\\S]+?)%>/g,\n\n    /**\n     * Used to detect `data` property values to inject.\n     *\n     * @memberOf _.templateSettings\n     * @type RegExp\n     */\n    'interpolate': reInterpolate,\n\n    /**\n     * Used to reference the data object in the template text.\n     *\n     * @memberOf _.templateSettings\n     * @type String\n     */\n    'variable': '',\n\n    /**\n     * Used to import variables into the compiled template.\n     *\n     * @memberOf _.templateSettings\n     * @type Object\n     */\n    'imports': {\n\n      /**\n       * A reference to the `lodash` function.\n       *\n       * @memberOf _.templateSettings.imports\n       * @type Function\n       */\n      '_': lodash\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The template used to create iterator functions.\n   *\n   * @private\n   * @param {Obect} data The data object used to populate the text.\n   * @returns {String} Returns the interpolated text.\n   */\n  var iteratorTemplate = function(obj) {\n    \n    var __p = 'var index, iterable = ' +\n    (obj.firstArg ) +\n    ', result = iterable;\\nif (!iterable) return result;\\n' +\n    (obj.top ) +\n    ';\\n';\n     if (obj.arrays) {\n    __p += 'var length = iterable.length; index = -1;\\nif (' +\n    (obj.arrays ) +\n    ') {\\n  while (++index < length) {\\n    ' +\n    (obj.loop ) +\n    '\\n  }\\n}\\nelse {  ';\n     } ;\n    \n     if (obj.isKeysFast && obj.useHas) {\n    __p += '\\n  var ownIndex = -1,\\n      ownProps = objectTypes[typeof iterable] ? nativeKeys(iterable) : [],\\n      length = ownProps.length;\\n\\n  while (++ownIndex < length) {\\n    index = ownProps[ownIndex];\\n    ' +\n    (obj.loop ) +\n    '\\n  }  ';\n     } else {\n    __p += '\\n  for (index in iterable) {';\n        if (obj.useHas) {\n    __p += '\\n    if (';\n          if (obj.useHas) {\n    __p += 'hasOwnProperty.call(iterable, index)';\n     }    ;\n    __p += ') {    ';\n     } ;\n    __p += \n    (obj.loop ) +\n    ';    ';\n     if (obj.useHas) {\n    __p += '\\n    }';\n     } ;\n    __p += '\\n  }  ';\n     } ;\n    \n     if (obj.arrays) {\n    __p += '\\n}';\n     } ;\n    __p += \n    (obj.bottom ) +\n    ';\\nreturn result';\n    \n    \n    return __p\n  };\n\n  /** Reusable iterator options for `assign` and `defaults` */\n  var defaultsIteratorOptions = {\n    'args': 'object, source, guard',\n    'top':\n      'var args = arguments,\\n' +\n      '    argsIndex = 0,\\n' +\n      \"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\" +\n      'while (++argsIndex < argsLength) {\\n' +\n      '  iterable = args[argsIndex];\\n' +\n      '  if (iterable && objectTypes[typeof iterable]) {',\n    'loop': \"if (typeof result[index] == 'undefined') result[index] = iterable[index]\",\n    'bottom': '  }\\n}'\n  };\n\n  /** Reusable iterator options shared by `each`, `forIn`, and `forOwn` */\n  var eachIteratorOptions = {\n    'args': 'collection, callback, thisArg',\n    'top': \"callback = callback && typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg)\",\n    'arrays': \"typeof length == 'number'\",\n    'loop': 'if (callback(iterable[index], index, collection) === false) return result'\n  };\n\n  /** Reusable iterator options for `forIn` and `forOwn` */\n  var forOwnIteratorOptions = {\n    'top': 'if (!objectTypes[typeof iterable]) return result;\\n' + eachIteratorOptions.top,\n    'arrays': false\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function optimized to search large arrays for a given `value`,\n   * starting at `fromIndex`, using strict equality for comparisons, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @param {Number} [largeSize=30] The length at which an array is considered large.\n   * @returns {Boolean} Returns `true`, if `value` is found, else `false`.\n   */\n  function cachedContains(array, fromIndex, largeSize) {\n    fromIndex || (fromIndex = 0);\n\n    var length = array.length,\n        isLarge = (length - fromIndex) >= (largeSize || largeArraySize);\n\n    if (isLarge) {\n      var cache = {},\n          index = fromIndex - 1;\n\n      while (++index < length) {\n        // manually coerce `value` to a string because `hasOwnProperty`, in some\n        // older versions of Firefox, coerces objects incorrectly\n        var key = array[index] + '';\n        (hasOwnProperty.call(cache, key) ? cache[key] : (cache[key] = [])).push(array[index]);\n      }\n    }\n    return function(value) {\n      if (isLarge) {\n        var key = value + '';\n        return hasOwnProperty.call(cache, key) && indexOf(cache[key], value) > -1;\n      }\n      return indexOf(array, value, fromIndex) > -1;\n    }\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default `callback` when a given\n   * `collection` is a string value.\n   *\n   * @private\n   * @param {String} value The character to inspect.\n   * @returns {Number} Returns the code unit of given character.\n   */\n  function charAtCallback(value) {\n    return value.charCodeAt(0);\n  }\n\n  /**\n   * Used by `sortBy` to compare transformed `collection` values, stable sorting\n   * them in ascending order.\n   *\n   * @private\n   * @param {Object} a The object to compare to `b`.\n   * @param {Object} b The object to compare to `a`.\n   * @returns {Number} Returns the sort order indicator of `1` or `-1`.\n   */\n  function compareAscending(a, b) {\n    var ai = a.index,\n        bi = b.index;\n\n    a = a.criteria;\n    b = b.criteria;\n\n    // ensure a stable sort in V8 and other engines\n    // http://code.google.com/p/v8/issues/detail?id=90\n    if (a !== b) {\n      if (a > b || typeof a == 'undefined') {\n        return 1;\n      }\n      if (a < b || typeof b == 'undefined') {\n        return -1;\n      }\n    }\n    return ai < bi ? -1 : 1;\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this` binding\n   * of `thisArg` and prepends any `partialArgs` to the arguments passed to the\n   * bound function.\n   *\n   * @private\n   * @param {Function|String} func The function to bind or the method name.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Array} partialArgs An array of arguments to be partially applied.\n   * @param {Object} [rightIndicator] Used to indicate partially applying arguments from the right.\n   * @returns {Function} Returns the new bound function.\n   */\n  function createBound(func, thisArg, partialArgs, rightIndicator) {\n    var isFunc = isFunction(func),\n        isPartial = !partialArgs,\n        key = thisArg;\n\n    // juggle arguments\n    if (isPartial) {\n      partialArgs = thisArg;\n    }\n    if (!isFunc) {\n      thisArg = func;\n    }\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.com/#x15.3.4.5\n      var args = arguments,\n          thisBinding = isPartial ? this : thisArg;\n\n      if (!isFunc) {\n        func = thisArg[key];\n      }\n      if (partialArgs.length) {\n        args = args.length\n          ? (args = slice(args), rightIndicator ? args.concat(partialArgs) : partialArgs.concat(args))\n          : partialArgs;\n      }\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `bound` and `func`\n        noop.prototype = func.prototype;\n        thisBinding = new noop;\n        noop.prototype = null;\n\n        // mimic the constructor's `return` behavior\n        // http://es5.github.com/#x13.2.2\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    return bound;\n  }\n\n  /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name, the created callback will return the property value for a given element.\n   * If `func` is an object, the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @private\n   * @param {Mixed} [func=identity] The value to convert to a callback.\n   * @param {Mixed} [thisArg] The `this` binding of the created callback.\n   * @param {Number} [argCount=3] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function createCallback(func, thisArg, argCount) {\n    if (func == null) {\n      return identity;\n    }\n    var type = typeof func;\n    if (type != 'function') {\n      if (type != 'object') {\n        return function(object) {\n          return object[func];\n        };\n      }\n      var props = keys(func);\n      return function(object) {\n        var length = props.length,\n            result = false;\n        while (length--) {\n          if (!(result = isEqual(object[props[length]], func[props[length]], indicatorObject))) {\n            break;\n          }\n        }\n        return result;\n      };\n    }\n    if (typeof thisArg != 'undefined') {\n      if (argCount === 1) {\n        return function(value) {\n          return func.call(thisArg, value);\n        };\n      }\n      if (argCount === 2) {\n        return function(a, b) {\n          return func.call(thisArg, a, b);\n        };\n      }\n      if (argCount === 4) {\n        return function(accumulator, value, index, object) {\n          return func.call(thisArg, accumulator, value, index, object);\n        };\n      }\n      return function(value, index, object) {\n        return func.call(thisArg, value, index, object);\n      };\n    }\n    return func;\n  }\n\n  /**\n   * Creates compiled iteration functions.\n   *\n   * @private\n   * @param {Object} [options1, options2, ...] The compile options object(s).\n   *  arrays - A string of code to determine if the iterable is an array or array-like.\n   *  useHas - A boolean to specify using `hasOwnProperty` checks in the object loop.\n   *  args - A string of comma separated arguments the iteration function will accept.\n   *  top - A string of code to execute before the iteration branches.\n   *  loop - A string of code to execute in the object loop.\n   *  bottom - A string of code to execute after the iteration branches.\n   *\n   * @returns {Function} Returns the compiled function.\n   */\n  function createIterator() {\n    var data = {\n      // support properties\n      'isKeysFast': isKeysFast,\n\n      // iterator options\n      'arrays': 'isArray(iterable)',\n      'bottom': '',\n      'loop': '',\n      'top': '',\n      'useHas': true\n    };\n\n    // merge options into a template data object\n    for (var object, index = 0; object = arguments[index]; index++) {\n      for (var key in object) {\n        data[key] = object[key];\n      }\n    }\n    var args = data.args;\n    data.firstArg = /^[^,]+/.exec(args)[0];\n\n    // create the function factory\n    var factory = Function(\n        'createCallback, hasOwnProperty, isArguments, isArray, isString, ' +\n        'objectTypes, nativeKeys',\n      'return function(' + args + ') {\\n' + iteratorTemplate(data) + '\\n}'\n    );\n    // return the compiled function\n    return factory(\n      createCallback, hasOwnProperty, isArguments, isArray, isString,\n      objectTypes, nativeKeys\n    );\n  }\n\n  /**\n   * A function compiled to iterate `arguments` objects, arrays, objects, and\n   * strings consistenly across environments, executing the `callback` for each\n   * element in the `collection`. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, index|key, collection). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @type Function\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   */\n  var each = createIterator(eachIteratorOptions);\n\n  /**\n   * Used by `template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeStringChar(match) {\n    return '\\\\' + stringEscapes[match];\n  }\n\n  /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {String} match The matched character to escape.\n   * @returns {String} Returns the escaped character.\n   */\n  function escapeHtmlChar(match) {\n    return htmlEscapes[match];\n  }\n\n  /**\n   * Checks if `value` is a DOM node in IE < 9.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true` if the `value` is a DOM node, else `false`.\n   */\n  function isNode(value) {\n    // IE < 9 presents DOM nodes as `Object` objects except they have `toString`\n    // methods that are `typeof` \"string\" and still can coerce nodes to strings\n    return typeof value.toString != 'function' && typeof (value + '') == 'string';\n  }\n\n  /**\n   * A no-operation function.\n   *\n   * @private\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used, instead of `Array#slice`, to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|String} collection The collection to slice.\n   * @param {Number} start The start index.\n   * @param {Number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  /**\n   * Used by `unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {String} match The matched character to unescape.\n   * @returns {String} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(match) {\n    return htmlUnescapes[match];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return toString.call(value) == argsClass;\n  }\n\n  /**\n   * Iterates over `object`'s own and inherited enumerable properties, executing\n   * the `callback` for each property. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, key, object). Callbacks may exit iteration\n   * early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Dog(name) {\n   *   this.name = name;\n   * }\n   *\n   * Dog.prototype.bark = function() {\n   *   alert('Woof, woof!');\n   * };\n   *\n   * _.forIn(new Dog('Dagny'), function(value, key) {\n   *   alert(key);\n   * });\n   * // => alerts 'name' and 'bark' (order is not guaranteed)\n   */\n  var forIn = createIterator(eachIteratorOptions, forOwnIteratorOptions, {\n    'useHas': false\n  });\n\n  /**\n   * Iterates over an object's own enumerable properties, executing the `callback`\n   * for each property. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by explicitly\n   * returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   alert(key);\n   * });\n   * // => alerts '0', '1', and 'length' (order is not guaranteed)\n   */\n  var forOwn = createIterator(eachIteratorOptions, forOwnIteratorOptions);\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    // `instanceof` may cause a memory leak in IE 7 if `value` is a host object\n    // http://ajaxian.com/archives/working-aroung-the-instanceof-memory-leak\n    return value instanceof Array || toString.call(value) == arrayClass;\n  };\n\n  /**\n   * Creates an array composed of the own enumerable property names of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (order is not guaranteed)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    return nativeKeys(object);\n  };\n\n  /**\n   * A fallback implementation of `isPlainObject` that checks if a given `value`\n   * is an object created by the `Object` constructor, assuming objects created\n   * by the `Object` constructor have no inherited enumerable properties and that\n   * there are no `Object.prototype` extensions.\n   *\n   * @private\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   */\n  function shimIsPlainObject(value) {\n    // avoid non-objects and false positives for `arguments` objects\n    var result = false;\n    if (!(value && typeof value == 'object') || isArguments(value)) {\n      return result;\n    }\n    // check that the constructor is `Object` (i.e. `Object instanceof Object`)\n    var ctor = value.constructor;\n    if ((!isFunction(ctor)) || ctor instanceof ctor) {\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      forIn(value, function(value, key) {\n        result = key;\n      });\n      return result === false || hasOwnProperty.call(value, result);\n    }\n    return result;\n  }\n\n  /**\n   * A fallback implementation of `Object.keys` that produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names.\n   */\n  function shimKeys(object) {\n    var result = [];\n    forOwn(object, function(value, key) {\n      result.push(key);\n    });\n    return result;\n  }\n\n  /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to convert HTML entities to characters */\n  var htmlUnescapes = invert(htmlEscapes);\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite propery assignments of previous\n   * sources. If a `callback` function is passed, it will be executed to produce\n   * the assigned values. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'moe' }, { 'age': 40 });\n   * // => { 'name': 'moe', 'age': 40 }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var food = { 'name': 'apple' };\n   * defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  var assign = createIterator(defaultsIteratorOptions, {\n    'top':\n      defaultsIteratorOptions.top.replace(';',\n        ';\\n' +\n        \"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\" +\n        '  var callback = createCallback(args[--argsLength - 1], args[argsLength--], 2);\\n' +\n        \"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\" +\n        '  callback = args[--argsLength];\\n' +\n        '}'\n      ),\n    'loop': 'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'\n  });\n\n  /**\n   * Creates a clone of `value`. If `deep` is `true`, nested objects will also\n   * be cloned, otherwise they will be assigned by reference. If a `callback`\n   * function is passed, it will be executed to produce the cloned values. If\n   * `callback` returns `undefined`, cloning will be handled by the method instead.\n   * The `callback` is bound to `thisArg` and invoked with one argument; (value).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to clone.\n   * @param {Boolean} [deep=false] A flag to indicate a deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate clones with source counterparts.\n   * @returns {Mixed} Returns the cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var shallow = _.clone(stooges);\n   * shallow[0] === stooges[0];\n   * // => true\n   *\n   * var deep = _.clone(stooges, true);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * _.mixin({\n   *   'clone': _.partialRight(_.clone, function(value) {\n   *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n   *   })\n   * });\n   *\n   * var clone = _.clone(document.body);\n   * clone.childNodes.length;\n   * // => 0\n   */\n  function clone(value, deep, callback, thisArg, stackA, stackB) {\n    var result = value;\n\n    // allows working with \"Collections\" methods without using their `callback`\n    // argument, `index|key`, for this method's `callback`\n    if (typeof deep == 'function') {\n      thisArg = callback;\n      callback = deep;\n      deep = false;\n    }\n    if (typeof callback == 'function') {\n      callback = typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg, 1);\n      result = callback(result);\n\n      var done = typeof result != 'undefined';\n      if (!done) {\n        result = value;\n      }\n    }\n    // inspect [[Class]]\n    var isObj = isObject(result);\n    if (isObj) {\n      var className = toString.call(result);\n      if (!cloneableClasses[className]) {\n        return result;\n      }\n      var isArr = isArray(result);\n    }\n    // shallow clone\n    if (!isObj || !deep) {\n      return isObj && !done\n        ? (isArr ? slice(result) : assign({}, result))\n        : result;\n    }\n    var ctor = ctorByClass[className];\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        return done ? result : new ctor(+result);\n\n      case numberClass:\n      case stringClass:\n        return done ? result : new ctor(result);\n\n      case regexpClass:\n        return done ? result : ctor(result.source, reFlags.exec(result));\n    }\n    // check for circular references and return corresponding clone\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == value) {\n        return stackB[length];\n      }\n    }\n    // init cloned object\n    if (!done) {\n      result = isArr ? ctor(result.length) : {};\n\n      // add array properties assigned by `RegExp#exec`\n      if (isArr) {\n        if (hasOwnProperty.call(value, 'index')) {\n          result.index = value.index;\n        }\n        if (hasOwnProperty.call(value, 'input')) {\n          result.input = value.input;\n        }\n      }\n    }\n    // add the source value to the stack of traversed objects\n    // and associate it with its clone\n    stackA.push(value);\n    stackB.push(result);\n\n    // recursively populate clone (susceptible to call stack limits)\n    (isArr ? forEach : forOwn)(done ? result : value, function(objValue, key) {\n      result[key] = clone(objValue, deep, callback, undefined, stackA, stackB);\n    });\n\n    return result;\n  }\n\n  /**\n   * Creates a deep clone of `value`. If a `callback` function is passed, it will\n   * be executed to produce the cloned values. If `callback` returns the value it\n   * was passed, cloning will be handled by the method instead. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * Note: This function is loosely based on the structured clone algorithm. Functions\n   * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n   * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n   * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to deep clone.\n   * @param {Function} [callback] The function to customize cloning values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the deep cloned `value`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * var deep = _.cloneDeep(stooges);\n   * deep[0] === stooges[0];\n   * // => false\n   *\n   * var view = {\n   *   'label': 'docs',\n   *   'node': element\n   * };\n   *\n   * var clone = _.cloneDeep(view, function(value) {\n   *   return _.isElement(value) ? value.cloneNode(true) : value;\n   * });\n   *\n   * clone.node == view.node;\n   * // => false\n   */\n  function cloneDeep(value, callback, thisArg) {\n    return clone(value, true, callback, thisArg);\n  }\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object for all destination properties that resolve to `undefined`. Once a\n   * property is set, additional defaults of the same property will be ignored.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param- {Object} [guard] Internally used to allow working with `_.reduce`\n   *  without using its callback's `key` and `object` arguments as sources.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var food = { 'name': 'apple' };\n   * _.defaults(food, { 'name': 'banana', 'type': 'fruit' });\n   * // => { 'name': 'apple', 'type': 'fruit' }\n   */\n  var defaults = createIterator(defaultsIteratorOptions);\n\n  /**\n   * Creates a sorted array of all enumerable properties, own and inherited,\n   * of `object` that have function values.\n   *\n   * @static\n   * @memberOf _\n   * @alias methods\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property names that have function values.\n   * @example\n   *\n   * _.functions(_);\n   * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]\n   */\n  function functions(object) {\n    var result = [];\n    forIn(object, function(value, key) {\n      if (isFunction(value)) {\n        result.push(key);\n      }\n    });\n    return result.sort();\n  }\n\n  /**\n   * Checks if the specified object `property` exists and is a direct property,\n   * instead of an inherited property.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to check.\n   * @param {String} property The property to check for.\n   * @returns {Boolean} Returns `true` if key is a direct property, else `false`.\n   * @example\n   *\n   * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n   * // => true\n   */\n  function has(object, property) {\n    return object ? hasOwnProperty.call(object, property) : false;\n  }\n\n  /**\n   * Creates an object composed of the inverted keys and values of the given `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to invert.\n   * @returns {Object} Returns the created inverted object.\n   * @example\n   *\n   *  _.invert({ 'first': 'moe', 'second': 'larry' });\n   * // => { 'moe': 'first', 'larry': 'second' } (order is not guaranteed)\n   */\n  function invert(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = {};\n\n    while (++index < length) {\n      var key = props[index];\n      result[object[key]] = key;\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a boolean value.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a boolean value, else `false`.\n   * @example\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false || toString.call(value) == boolClass;\n  }\n\n  /**\n   * Checks if `value` is a date.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a date, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   */\n  function isDate(value) {\n    return value instanceof Date || toString.call(value) == dateClass;\n  }\n\n  /**\n   * Checks if `value` is a DOM element.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a DOM element, else `false`.\n   * @example\n   *\n   * _.isElement(document.body);\n   * // => true\n   */\n  function isElement(value) {\n    return value ? value.nodeType === 1 : false;\n  }\n\n  /**\n   * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n   * length of `0` and objects with no own enumerable properties are considered\n   * \"empty\".\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Array|Object|String} value The value to inspect.\n   * @returns {Boolean} Returns `true`, if the `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({});\n   * // => true\n   *\n   * _.isEmpty('');\n   * // => true\n   */\n  function isEmpty(value) {\n    var result = true;\n    if (!value) {\n      return result;\n    }\n    var className = toString.call(value),\n        length = value.length;\n\n    if ((className == arrayClass || className == stringClass ||\n        className == argsClass) ||\n        (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {\n      return !length;\n    }\n    forOwn(value, function() {\n      return (result = false);\n    });\n    return result;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent to each other. If `callback` is passed, it will be executed to\n   * compare values. If `callback` returns `undefined`, comparisons will be handled\n   * by the method instead. The `callback` is bound to `thisArg` and invoked with\n   * two arguments; (a, b).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} a The value to compare.\n   * @param {Mixed} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [stackA=[]] Internally used track traversed `a` objects.\n   * @param- {Object} [stackB=[]] Internally used track traversed `b` objects.\n   * @returns {Boolean} Returns `true`, if the values are equvalent, else `false`.\n   * @example\n   *\n   * var moe = { 'name': 'moe', 'age': 40 };\n   * var copy = { 'name': 'moe', 'age': 40 };\n   *\n   * moe == copy;\n   * // => false\n   *\n   * _.isEqual(moe, copy);\n   * // => true\n   *\n   * var words = ['hello', 'goodbye'];\n   * var otherWords = ['hi', 'goodbye'];\n   *\n   * _.isEqual(words, otherWords, function(a, b) {\n   *   var reGreet = /^(?:hello|hi)$/i,\n   *       aGreet = _.isString(a) && reGreet.test(a),\n   *       bGreet = _.isString(b) && reGreet.test(b);\n   *\n   *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n   * });\n   * // => true\n   */\n  function isEqual(a, b, callback, thisArg, stackA, stackB) {\n    // used to indicate that when comparing objects, `a` has at least the properties of `b`\n    var whereIndicator = callback === indicatorObject;\n    if (callback && !whereIndicator) {\n      callback = typeof thisArg == 'undefined' ? callback : createCallback(callback, thisArg, 2);\n      var result = callback(a, b);\n      if (typeof result != 'undefined') {\n        return !!result;\n      }\n    }\n    // exit early for identical values\n    if (a === b) {\n      // treat `+0` vs. `-0` as not equal\n      return a !== 0 || (1 / a == 1 / b);\n    }\n    var type = typeof a,\n        otherType = typeof b;\n\n    // exit early for unlike primitive values\n    if (a === a &&\n        (!a || (type != 'function' && type != 'object')) &&\n        (!b || (otherType != 'function' && otherType != 'object'))) {\n      return false;\n    }\n    // exit early for `null` and `undefined`, avoiding ES3's Function#call behavior\n    // http://es5.github.com/#x15.3.4.4\n    if (a == null || b == null) {\n      return a === b;\n    }\n    // compare [[Class]] names\n    var className = toString.call(a),\n        otherClass = toString.call(b);\n\n    if (className == argsClass) {\n      className = objectClass;\n    }\n    if (otherClass == argsClass) {\n      otherClass = objectClass;\n    }\n    if (className != otherClass) {\n      return false;\n    }\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        // coerce dates and booleans to numbers, dates to milliseconds and booleans\n        // to `1` or `0`, treating invalid dates coerced to `NaN` as not equal\n        return +a == +b;\n\n      case numberClass:\n        // treat `NaN` vs. `NaN` as equal\n        return a != +a\n          ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n      case regexpClass:\n      case stringClass:\n        // coerce regexes to strings (http://es5.github.com/#x15.10.6.4)\n        // treat string primitives and their corresponding object instances as equal\n        return a == b + '';\n    }\n    var isArr = className == arrayClass;\n    if (!isArr) {\n      // unwrap any `lodash` wrapped values\n      if (a.__wrapped__ || b.__wrapped__) {\n        return isEqual(a.__wrapped__ || a, b.__wrapped__ || b, callback, thisArg, stackA, stackB);\n      }\n      // exit for functions and DOM nodes\n      if (className != objectClass) {\n        return false;\n      }\n      // in older versions of Opera, `arguments` objects have `Array` constructors\n      var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n      // non `Object` object instances with different constructors are not equal\n      if (ctorA != ctorB && !(\n            isFunction(ctorA) && ctorA instanceof ctorA &&\n            isFunction(ctorB) && ctorB instanceof ctorB\n          )) {\n        return false;\n      }\n    }\n    // assume cyclic structures are equal\n    // the algorithm for detecting cyclic structures is adapted from ES 5.1\n    // section 15.12.3, abstract operation `JO` (http://es5.github.com/#x15.12.3)\n    stackA || (stackA = []);\n    stackB || (stackB = []);\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == a) {\n        return stackB[length] == b;\n      }\n    }\n    var size = 0;\n    result = true;\n\n    // add `a` and `b` to the stack of traversed objects\n    stackA.push(a);\n    stackB.push(b);\n\n    // recursively compare objects and arrays (susceptible to call stack limits)\n    if (isArr) {\n      length = a.length;\n      size = b.length;\n\n      // compare lengths to determine if a deep comparison is necessary\n      result = size == a.length;\n      if (!result && !whereIndicator) {\n        return result;\n      }\n      // deep compare the contents, ignoring non-numeric properties\n      while (size--) {\n        var index = length,\n            value = b[size];\n\n        if (whereIndicator) {\n          while (index--) {\n            if ((result = isEqual(a[index], value, callback, thisArg, stackA, stackB))) {\n              break;\n            }\n          }\n        } else if (!(result = isEqual(a[size], value, callback, thisArg, stackA, stackB))) {\n          break;\n        }\n      }\n      return result;\n    }\n    // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n    // which, in this case, is more costly\n    forIn(b, function(value, key, b) {\n      if (hasOwnProperty.call(b, key)) {\n        // count the number of properties.\n        size++;\n        // deep compare each property value.\n        return (result = hasOwnProperty.call(a, key) && isEqual(a[key], value, callback, thisArg, stackA, stackB));\n      }\n    });\n\n    if (result && !whereIndicator) {\n      // ensure both objects have the same number of properties\n      forIn(a, function(value, key, a) {\n        if (hasOwnProperty.call(a, key)) {\n          // `size` will be `-1` if `a` has more properties than `b`\n          return (result = --size > -1);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is, or can be coerced to, a finite number.\n   *\n   * Note: This is not the same as native `isFinite`, which will return true for\n   * booleans and empty strings. See http://es5.github.com/#x15.1.2.5.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is finite, else `false`.\n   * @example\n   *\n   * _.isFinite(-101);\n   * // => true\n   *\n   * _.isFinite('10');\n   * // => true\n   *\n   * _.isFinite(true);\n   * // => false\n   *\n   * _.isFinite('');\n   * // => false\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   */\n  function isFinite(value) {\n    return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));\n  }\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n  // fallback for older versions of Chrome and Safari\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return value instanceof Function || toString.call(value) == funcClass;\n    };\n  }\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.com/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return value ? objectTypes[typeof value] : false;\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * Note: This is not the same as native `isNaN`, which will return `true` for\n   * `undefined` and other values. See http://es5.github.com/#x15.1.2.4.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // `NaN` as a primitive is the only value that is not equal to itself\n    // (perform the [[Class]] check first to avoid errors with some host objects in IE)\n    return isNumber(value) && value != +value\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(undefined);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is a number.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(8.4 * 5);\n   * // => true\n   */\n  function isNumber(value) {\n    return typeof value == 'number' || toString.call(value) == numberClass;\n  }\n\n  /**\n   * Checks if a given `value` is an object created by the `Object` constructor.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Stooge(name, age) {\n   *   this.name = name;\n   *   this.age = age;\n   * }\n   *\n   * _.isPlainObject(new Stooge('moe', 40));\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'name': 'moe', 'age': 40 });\n   * // => true\n   */\n  var isPlainObject = function(value) {\n    if (!(value && typeof value == 'object')) {\n      return false;\n    }\n    var valueOf = value.valueOf,\n        objProto = typeof valueOf == 'function' && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n    return objProto\n      ? value == objProto || (getPrototypeOf(value) == objProto && !isArguments(value))\n      : shimIsPlainObject(value);\n  };\n\n  /**\n   * Checks if `value` is a regular expression.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a regular expression, else `false`.\n   * @example\n   *\n   * _.isRegExp(/moe/);\n   * // => true\n   */\n  function isRegExp(value) {\n    return value instanceof RegExp || toString.call(value) == regexpClass;\n  }\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('moe');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' || toString.call(value) == stringClass;\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Mixed} value The value to check.\n   * @returns {Boolean} Returns `true`, if the `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   */\n  function isUndefined(value) {\n    return typeof value == 'undefined';\n  }\n\n  /**\n   * Recursively merges own enumerable properties of the source object(s), that\n   * don't resolve to `undefined`, into the destination object. Subsequent sources\n   * will overwrite propery assignments of previous sources. If a `callback` function\n   * is passed, it will be executed to produce the merged values of the destination\n   * and source properties. If `callback` returns `undefined`, merging will be\n   * handled by the method instead. The `callback` is bound to `thisArg` and\n   * invoked with two arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {Object} [source1, source2, ...] The source objects.\n   * @param {Function} [callback] The function to customize merging properties.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @param- {Object} [deepIndicator] Internally used to indicate that `stackA`\n   *  and `stackB` are arrays of traversed objects instead of source objects.\n   * @param- {Array} [stackA=[]] Internally used to track traversed source objects.\n   * @param- {Array} [stackB=[]] Internally used to associate values with their\n   *  source counterparts.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var names = {\n   *   'stooges': [\n   *     { 'name': 'moe' },\n   *     { 'name': 'larry' }\n   *   ]\n   * };\n   *\n   * var ages = {\n   *   'stooges': [\n   *     { 'age': 40 },\n   *     { 'age': 50 }\n   *   ]\n   * };\n   *\n   * _.merge(names, ages);\n   * // => { 'stooges': [{ 'name': 'moe', 'age': 40 }, { 'name': 'larry', 'age': 50 }] }\n   *\n   * var food = {\n   *   'fruits': ['apple'],\n   *   'vegetables': ['beet']\n   * };\n   *\n   * var otherFood = {\n   *   'fruits': ['banana'],\n   *   'vegetables': ['carrot']\n   * };\n   *\n   * _.merge(food, otherFood, function(a, b) {\n   *   return _.isArray(a) ? a.concat(b) : undefined;\n   * });\n   * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }\n   */\n  function merge(object, source, deepIndicator) {\n    var args = arguments,\n        index = 0,\n        length = 2;\n\n    if (!isObject(object)) {\n      return object;\n    }\n    if (deepIndicator === indicatorObject) {\n      var callback = args[3],\n          stackA = args[4],\n          stackB = args[5];\n    } else {\n      stackA = [];\n      stackB = [];\n\n      // allows working with `_.reduce` and `_.reduceRight` without\n      // using their `callback` arguments, `index|key` and `collection`\n      if (typeof deepIndicator != 'number') {\n        length = args.length;\n      }\n      if (length > 3 && typeof args[length - 2] == 'function') {\n        callback = createCallback(args[--length - 1], args[length--], 2);\n      } else if (length > 2 && typeof args[length - 1] == 'function') {\n        callback = args[--length];\n      }\n    }\n    while (++index < length) {\n      (isArray(args[index]) ? forEach : forOwn)(args[index], function(source, key) {\n        var found,\n            isArr,\n            result = source,\n            value = object[key];\n\n        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {\n          // avoid merging previously merged cyclic sources\n          var stackLength = stackA.length;\n          while (stackLength--) {\n            if ((found = stackA[stackLength] == source)) {\n              value = stackB[stackLength];\n              break;\n            }\n          }\n          if (!found) {\n            value = isArr\n              ? (isArray(value) ? value : [])\n              : (isPlainObject(value) ? value : {});\n\n            if (callback) {\n              result = callback(value, source);\n              if (typeof result != 'undefined') {\n                value = result;\n              }\n            }\n            // add `source` and associated `value` to the stack of traversed objects\n            stackA.push(source);\n            stackB.push(value);\n\n            // recursively merge objects and arrays (susceptible to call stack limits)\n            if (!callback) {\n              value = merge(value, source, indicatorObject, callback, stackA, stackB);\n            }\n          }\n        }\n        else {\n          if (callback) {\n            result = callback(value, source);\n            if (typeof result == 'undefined') {\n              result = source;\n            }\n          }\n          if (typeof result != 'undefined') {\n            value = result;\n          }\n        }\n        object[key] = value;\n      });\n    }\n    return object;\n  }\n\n  /**\n   * Creates a shallow clone of `object` excluding the specified properties.\n   * Property names may be specified as individual arguments or as arrays of\n   * property names. If a `callback` function is passed, it will be executed\n   * for each property in the `object`, omitting the properties `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked\n   * with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Function|String} callback|[prop1, prop2, ...] The properties to omit\n   *  or the function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object without the omitted properties.\n   * @example\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, 'age');\n   * // => { 'name': 'moe' }\n   *\n   * _.omit({ 'name': 'moe', 'age': 40 }, function(value) {\n   *   return typeof value == 'number';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function omit(object, callback, thisArg) {\n    var isFunc = typeof callback == 'function',\n        result = {};\n\n    if (isFunc) {\n      callback = createCallback(callback, thisArg);\n    } else {\n      var props = concat.apply(arrayRef, arguments);\n    }\n    forIn(object, function(value, key, object) {\n      if (isFunc\n            ? !callback(value, key, object)\n            : indexOf(props, key, 1) < 0\n          ) {\n        result[key] = value;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Creates a two dimensional array of the given object's key-value pairs,\n   * i.e. `[[key1, value1], [key2, value2]]`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns new array of key-value pairs.\n   * @example\n   *\n   * _.pairs({ 'moe': 30, 'larry': 40 });\n   * // => [['moe', 30], ['larry', 40]] (order is not guaranteed)\n   */\n  function pairs(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      var key = props[index];\n      result[index] = [key, object[key]];\n    }\n    return result;\n  }\n\n  /**\n   * Creates a shallow clone of `object` composed of the specified properties.\n   * Property names may be specified as individual arguments or as arrays of property\n   * names. If `callback` is passed, it will be executed for each property in the\n   * `object`, picking the properties `callback` returns truthy for. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, key, object).\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The source object.\n   * @param {Array|Function|String} callback|[prop1, prop2, ...] The function called\n   *  per iteration or properties to pick, either as individual arguments or arrays.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns an object composed of the picked properties.\n   * @example\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, 'name');\n   * // => { 'name': 'moe' }\n   *\n   * _.pick({ 'name': 'moe', '_userid': 'moe1' }, function(value, key) {\n   *   return key.charAt(0) != '_';\n   * });\n   * // => { 'name': 'moe' }\n   */\n  function pick(object, callback, thisArg) {\n    var result = {};\n    if (typeof callback != 'function') {\n      var index = 0,\n          props = concat.apply(arrayRef, arguments),\n          length = isObject(object) ? props.length : 0;\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n    } else {\n      callback = createCallback(callback, thisArg);\n      forIn(object, function(value, key, object) {\n        if (callback(value, key, object)) {\n          result[key] = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3]\n   */\n  function values(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = object[props[index]];\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array of elements from the specified indexes, or keys, of the\n   * `collection`. Indexes may be specified as individual arguments or as arrays\n   * of indexes.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Array|Number|String} [index1, index2, ...] The indexes of\n   *  `collection` to retrieve, either as individual arguments or arrays.\n   * @returns {Array} Returns a new array of elements corresponding to the\n   *  provided indexes.\n   * @example\n   *\n   * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n   * // => ['a', 'c', 'e']\n   *\n   * _.at(['moe', 'larry', 'curly'], 0, 2);\n   * // => ['moe', 'curly']\n   */\n  function at(collection) {\n    var index = -1,\n        props = concat.apply(arrayRef, slice(arguments, 1)),\n        length = props.length,\n        result = Array(length);\n\n    while(++index < length) {\n      result[index] = collection[props[index]];\n    }\n    return result;\n  }\n\n  /**\n   * Checks if a given `target` element is present in a `collection` using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Mixed} target The value to check for.\n   * @param {Number} [fromIndex=0] The index to search from.\n   * @returns {Boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');\n   * // => true\n   *\n   * _.contains('curly', 'ur');\n   * // => true\n   */\n  function contains(collection, target, fromIndex) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = false;\n\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n    if (typeof length == 'number') {\n      result = (isString(collection)\n        ? collection.indexOf(target, fromIndex)\n        : indexOf(collection, target, fromIndex)\n      ) > -1;\n    } else {\n      each(collection, function(value) {\n        if (++index >= fromIndex) {\n          return !(result = value === target);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the given `callback`. The corresponding value of each key\n   * is the number of times the key was returned by the `callback`. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': 1, '6': 2 }\n   *\n   * _.countBy(['one', 'two', 'three'], 'length');\n   * // => { '3': 2, '5': 1 }\n   */\n  function countBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection) + '';\n      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);\n    });\n    return result;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **all** elements of a\n   * `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias all\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if all elements pass the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.every(stooges, 'age');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.every(stooges, { 'age': 50 });\n   * // => false\n   */\n  function every(collection, callback, thisArg) {\n    var result = true;\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (!(result = !!callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        return (result = !!callback(value, index, collection));\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * the `callback` returns truthy for. The `callback` is bound to `thisArg` and\n   * invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias select\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that passed the callback check.\n   * @example\n   *\n   * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [2, 4, 6]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.filter(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.filter(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   */\n  function filter(collection, callback, thisArg) {\n    var result = [];\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        if (callback(value, index, collection)) {\n          result.push(value);\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Examines each element in a `collection`, returning the first that the `callback`\n   * returns truthy for. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias detect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the element that passed the callback check,\n   *  else `undefined`.\n   * @example\n   *\n   * var even = _.find([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => 2\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'banana', 'organic': true,  'type': 'fruit' },\n   *   { 'name': 'beet',   'organic': false, 'type': 'vegetable' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * var veggie = _.find(food, { 'type': 'vegetable' });\n   * // => { 'name': 'beet', 'organic': false, 'type': 'vegetable' }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * var healthy = _.find(food, 'organic');\n   * // => { 'name': 'banana', 'organic': true, 'type': 'fruit' }\n   */\n  function find(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, index, collection) {\n      if (callback(value, index, collection)) {\n        result = value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Iterates over a `collection`, executing the `callback` for each element in\n   * the `collection`. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection). Callbacks may exit iteration early\n   * by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias each\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array|Object|String} Returns `collection`.\n   * @example\n   *\n   * _([1, 2, 3]).forEach(alert).join(',');\n   * // => alerts each number and returns '1,2,3'\n   *\n   * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, alert);\n   * // => alerts each number value (order is not guaranteed)\n   */\n  function forEach(collection, callback, thisArg) {\n    if (callback && typeof thisArg == 'undefined' && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if (callback(collection[index], index, collection) === false) {\n          break;\n        }\n      }\n    } else {\n      each(collection, callback, thisArg);\n    }\n    return collection;\n  }\n\n  /**\n   * Creates an object composed of keys returned from running each element of the\n   * `collection` through the `callback`. The corresponding value of each key is\n   * an array of elements passed to `callback` that returned the key. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the composed aggregate object.\n   * @example\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n   * // => { '4': [4.2], '6': [6.1, 6.4] }\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.groupBy(['one', 'two', 'three'], 'length');\n   * // => { '3': ['one', 'two'], '5': ['three'] }\n   */\n  function groupBy(collection, callback, thisArg) {\n    var result = {};\n    callback = createCallback(callback, thisArg);\n\n    forEach(collection, function(value, key, collection) {\n      key = callback(value, key, collection) + '';\n      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);\n    });\n    return result;\n  }\n\n  /**\n   * Invokes the method named by `methodName` on each element in the `collection`,\n   * returning an array of the results of each invoked method. Additional arguments\n   * will be passed to each invoked method. If `methodName` is a function, it will\n   * be invoked for, and `this` bound to, each element in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|String} methodName The name of the method to invoke or\n   *  the function invoked per iteration.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n   * @returns {Array} Returns a new array of the results of each invoked method.\n   * @example\n   *\n   * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n   * // => [[1, 5, 7], [1, 2, 3]]\n   *\n   * _.invoke([123, 456], String.prototype.split, '');\n   * // => [['1', '2', '3'], ['4', '5', '6']]\n   */\n  function invoke(collection, methodName) {\n    var args = slice(arguments, 2),\n        index = -1,\n        isFunc = typeof methodName == 'function',\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);\n    });\n    return result;\n  }\n\n  /**\n   * Creates an array of values by running each element in the `collection`\n   * through the `callback`. The `callback` is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (order is not guaranteed)\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg);\n    if (isArray(collection)) {\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      each(collection, function(value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the maximum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.max(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'larry', 'age': 50 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.max(stooges, 'age');\n   * // => { 'name': 'larry', 'age': 50 };\n   */\n  function max(collection, callback, thisArg) {\n    var computed = -Infinity,\n        result = computed;\n\n    if (!callback && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = !callback && isString(collection)\n        ? charAtCallback\n        : createCallback(callback, thisArg);\n\n      each(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current > computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the minimum value of an `array`. If `callback` is passed,\n   * it will be executed for each value in the `array` to generate the\n   * criterion by which the value is ranked. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.min(stooges, function(stooge) { return stooge.age; });\n   * // => { 'name': 'moe', 'age': 40 };\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.min(stooges, 'age');\n   * // => { 'name': 'moe', 'age': 40 };\n   */\n  function min(collection, callback, thisArg) {\n    var computed = Infinity,\n        result = computed;\n\n    if (!callback && isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      callback = !callback && isString(collection)\n        ? charAtCallback\n        : createCallback(callback, thisArg);\n\n      each(collection, function(value, index, collection) {\n        var current = callback(value, index, collection);\n        if (current < computed) {\n          computed = current;\n          result = value;\n        }\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Retrieves the value of a specified property from all elements in the `collection`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {String} property The property to pluck.\n   * @returns {Array} Returns a new array of property values.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.pluck(stooges, 'name');\n   * // => ['moe', 'larry']\n   */\n  var pluck = map;\n\n  /**\n   * Reduces a `collection` to a value that is the accumulated result of running\n   * each element in the `collection` through the `callback`, where each successive\n   * `callback` execution consumes the return value of the previous execution.\n   * If `accumulator` is not passed, the first element of the `collection` will be\n   * used as the initial `accumulator` value. The `callback` is bound to `thisArg`\n   * and invoked with four arguments; (accumulator, value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @alias foldl, inject\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var sum = _.reduce([1, 2, 3], function(sum, num) {\n   *   return sum + num;\n   * });\n   * // => 6\n   *\n   * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n   *   result[key] = num * 3;\n   *   return result;\n   * }, {});\n   * // => { 'a': 3, 'b': 6, 'c': 9 }\n   */\n  function reduce(collection, callback, accumulator, thisArg) {\n    var noaccum = arguments.length < 3;\n    callback = createCallback(callback, thisArg, 4);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      if (noaccum) {\n        accumulator = collection[++index];\n      }\n      while (++index < length) {\n        accumulator = callback(accumulator, collection[index], index, collection);\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        accumulator = noaccum\n          ? (noaccum = false, value)\n          : callback(accumulator, value, index, collection)\n      });\n    }\n    return accumulator;\n  }\n\n  /**\n   * This method is similar to `_.reduce`, except that it iterates over a\n   * `collection` from right to left.\n   *\n   * @static\n   * @memberOf _\n   * @alias foldr\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {Mixed} [accumulator] Initial value of the accumulator.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the accumulated value.\n   * @example\n   *\n   * var list = [[0, 1], [2, 3], [4, 5]];\n   * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n   * // => [4, 5, 2, 3, 0, 1]\n   */\n  function reduceRight(collection, callback, accumulator, thisArg) {\n    var iterable = collection,\n        length = collection ? collection.length : 0,\n        noaccum = arguments.length < 3;\n\n    if (typeof length != 'number') {\n      var props = keys(collection);\n      length = props.length;\n    }\n    callback = createCallback(callback, thisArg, 4);\n    forEach(collection, function(value, index, collection) {\n      index = props ? props[--length] : --length;\n      accumulator = noaccum\n        ? (noaccum = false, iterable[index])\n        : callback(accumulator, iterable[index], index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The opposite of `_.filter`, this method returns the elements of a\n   * `collection` that `callback` does **not** return truthy for.\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of elements that did **not** pass the\n   *  callback check.\n   * @example\n   *\n   * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n   * // => [1, 3, 5]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.reject(food, 'organic');\n   * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n   *\n   * // using \"_.where\" callback shorthand\n   * _.reject(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n   */\n  function reject(collection, callback, thisArg) {\n    callback = createCallback(callback, thisArg);\n    return filter(collection, function(value, index, collection) {\n      return !callback(value, index, collection);\n    });\n  }\n\n  /**\n   * Creates an array of shuffled `array` values, using a version of the\n   * Fisher-Yates shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to shuffle.\n   * @returns {Array} Returns a new shuffled collection.\n   * @example\n   *\n   * _.shuffle([1, 2, 3, 4, 5, 6]);\n   * // => [4, 1, 6, 3, 5, 2]\n   */\n  function shuffle(collection) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    forEach(collection, function(value) {\n      var rand = floor(nativeRandom() * (++index + 1));\n      result[index] = result[rand];\n      result[rand] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the size of the `collection` by returning `collection.length` for arrays\n   * and array-like objects or the number of own enumerable properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to inspect.\n   * @returns {Number} Returns `collection.length` or number of own enumerable properties.\n   * @example\n   *\n   * _.size([1, 2]);\n   * // => 2\n   *\n   * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => 3\n   *\n   * _.size('curly');\n   * // => 5\n   */\n  function size(collection) {\n    var length = collection ? collection.length : 0;\n    return typeof length == 'number' ? length : keys(collection).length;\n  }\n\n  /**\n   * Checks if the `callback` returns a truthy value for **any** element of a\n   * `collection`. The function returns as soon as it finds passing value, and\n   * does not iterate over the entire `collection`. The `callback` is bound to\n   * `thisArg` and invoked with three arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias any\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Boolean} Returns `true` if any element passes the callback check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var food = [\n   *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n   *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.some(food, 'organic');\n   * // => true\n   *\n   * // using \"_.where\" callback shorthand\n   * _.some(food, { 'type': 'meat' });\n   * // => false\n   */\n  function some(collection, callback, thisArg) {\n    var result;\n    callback = createCallback(callback, thisArg);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        if ((result = callback(collection[index], index, collection))) {\n          break;\n        }\n      }\n    } else {\n      each(collection, function(value, index, collection) {\n        return !(result = callback(value, index, collection));\n      });\n    }\n    return !!result;\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in the `collection` through the `callback`. This method\n   * performs a stable sort, that is, it will preserve the original sort order of\n   * equal elements. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index|key, collection).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of sorted elements.\n   * @example\n   *\n   * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n   * // => [3, 1, 2]\n   *\n   * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n   * // => [3, 1, 2]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortBy(['banana', 'strawberry', 'apple'], 'length');\n   * // => ['apple', 'banana', 'strawberry']\n   */\n  function sortBy(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0,\n        result = Array(typeof length == 'number' ? length : 0);\n\n    callback = createCallback(callback, thisArg);\n    forEach(collection, function(value, key, collection) {\n      result[++index] = {\n        'criteria': callback(value, key, collection),\n        'index': index,\n        'value': value\n      };\n    });\n\n    length = result.length;\n    result.sort(compareAscending);\n    while (length--) {\n      result[length] = result[length].value;\n    }\n    return result;\n  }\n\n  /**\n   * Converts the `collection` to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */\n  function toArray(collection) {\n    if (collection && typeof collection.length == 'number') {\n      return  slice(collection);\n    }\n    return values(collection);\n  }\n\n  /**\n   * Examines each element in a `collection`, returning an array of all elements\n   * that have the given `properties`. When checking `properties`, this method\n   * performs a deep comparison between values to determine if they are equivalent\n   * to each other.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Collections\n   * @param {Array|Object|String} collection The collection to iterate over.\n   * @param {Object} properties The object of property values to filter by.\n   * @returns {Array} Returns a new array of elements that have the given `properties`.\n   * @example\n   *\n   * var stooges = [\n   *   { 'name': 'moe', 'age': 40 },\n   *   { 'name': 'larry', 'age': 50 }\n   * ];\n   *\n   * _.where(stooges, { 'age': 40 });\n   * // => [{ 'name': 'moe', 'age': 40 }]\n   */\n  var where = filter;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values of `array` removed. The values\n   * `false`, `null`, `0`, `\"\"`, `undefined` and `NaN` are all falsey.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of `array` elements not present in the other arrays\n   * using strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Array} [array1, array2, ...] Arrays to check.\n   * @returns {Array} Returns a new array of `array` elements not present in the\n   *  other arrays.\n   * @example\n   *\n   * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n   * // => [1, 3, 4]\n   */\n  function difference(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        flattened = concat.apply(arrayRef, arguments),\n        contains = cachedContains(flattened, length),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the first element of the `array`. If a number `n` is passed, the first\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the first elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias head, take\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the first element(s) of `array`.\n   * @example\n   *\n   * _.first([1, 2, 3]);\n   * // => 1\n   *\n   * _.first([1, 2, 3], 2);\n   * // => [1, 2]\n   *\n   * _.first([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [1, 2]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.first(food, 'organic');\n   * // => [{ 'name': 'banana', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.first(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'apple', 'type': 'fruit' }, { 'name': 'banana', 'type': 'fruit' }]\n   */\n  function first(array, callback, thisArg) {\n    if (array) {\n      var n = 0,\n          length = array.length;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = -1;\n        callback = createCallback(callback, thisArg);\n        while (++index < length && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array[0];\n        }\n      }\n      return slice(array, 0, nativeMin(nativeMax(0, n), length));\n    }\n  }\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `shallow` is\n   * truthy, `array` will only be flattened a single level.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to compact.\n   * @param {Boolean} shallow A flag to indicate only flattening a single level.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   */\n  function flatten(array, shallow) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      // recursively flatten arrays (susceptible to call stack limits)\n      if (isArray(value)) {\n        push.apply(result, shallow ? value : flatten(value));\n      } else {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found using\n   * strict equality for comparisons, i.e. `===`. If the `array` is already\n   * sorted, passing `true` for `fromIndex` will run a faster binary search.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Boolean|Number} [fromIndex=0] The index to search from or `true` to\n   *  perform a binary search on a sorted `array`.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 1\n   *\n   * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 4\n   *\n   * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n   * // => 2\n   */\n  function indexOf(array, value, fromIndex) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0) - 1;\n    } else if (fromIndex) {\n      index = sortedIndex(array, value);\n      return array[index] === value ? index : -1;\n    }\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets all but the last element of `array`. If a number `n` is passed, the\n   * last `n` elements are excluded from the result. If a `callback` function\n   * is passed, the last elements the `callback` returns truthy for are excluded\n   * from the result. The `callback` is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.initial([1, 2, 3]);\n   * // => [1, 2]\n   *\n   * _.initial([1, 2, 3], 2);\n   * // => [1]\n   *\n   * _.initial([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [1]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.initial(food, 'organic');\n   * // => [{ 'name': 'beet',   'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.initial(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'banana', 'type': 'fruit' }]\n   */\n  function initial(array, callback, thisArg) {\n    if (!array) {\n      return [];\n    }\n    var n = 0,\n        length = array.length;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = createCallback(callback, thisArg);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : callback || n;\n    }\n    return slice(array, 0, nativeMin(nativeMax(0, length - n), length));\n  }\n\n  /**\n   * Computes the intersection of all the passed-in arrays using strict equality\n   * for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique elements that are present\n   *  in **all** of the arrays.\n   * @example\n   *\n   * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2]\n   */\n  function intersection(array) {\n    var args = arguments,\n        argsLength = args.length,\n        cache = { '0': {} },\n        index = -1,\n        length = array ? array.length : 0,\n        isLarge = length >= 100,\n        result = [],\n        seen = result;\n\n    outer:\n    while (++index < length) {\n      var value = array[index];\n      if (isLarge) {\n        var key = value + '';\n        var inited = hasOwnProperty.call(cache[0], key)\n          ? !(seen = cache[0][key])\n          : (seen = cache[0][key] = []);\n      }\n      if (inited || indexOf(seen, value) < 0) {\n        if (isLarge) {\n          seen.push(value);\n        }\n        var argsIndex = argsLength;\n        while (--argsIndex) {\n          if (!(cache[argsIndex] || (cache[argsIndex] = cachedContains(args[argsIndex], 0, 100)))(value)) {\n            continue outer;\n          }\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the last element of the `array`. If a number `n` is passed, the last\n   * `n` elements of the `array` are returned. If a `callback` function is passed,\n   * the last elements the `callback` returns truthy for are returned. The `callback`\n   * is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Mixed} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var food = [\n   *   { 'name': 'beet',   'organic': false },\n   *   { 'name': 'carrot', 'organic': true }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.last(food, 'organic');\n   * // => [{ 'name': 'carrot', 'organic': true }]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' },\n   *   { 'name': 'carrot', 'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(food, { 'type': 'vegetable' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }, { 'name': 'carrot', 'type': 'vegetable' }]\n   */\n  function last(array, callback, thisArg) {\n    if (array) {\n      var n = 0,\n          length = array.length;\n\n      if (typeof callback != 'number' && callback != null) {\n        var index = length;\n        callback = createCallback(callback, thisArg);\n        while (index-- && callback(array[index], index, array)) {\n          n++;\n        }\n      } else {\n        n = callback;\n        if (n == null || thisArg) {\n          return array[length - 1];\n        }\n      }\n      return slice(array, nativeMax(0, length - n));\n    }\n  }\n\n  /**\n   * Gets the index at which the last occurrence of `value` is found using strict\n   * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n   * as the offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to search.\n   * @param {Mixed} value The value to search for.\n   * @param {Number} [fromIndex=array.length-1] The index to search from.\n   * @returns {Number} Returns the index of the matched value or `-1`.\n   * @example\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n   * // => 4\n   *\n   * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n   * // => 1\n   */\n  function lastIndexOf(array, value, fromIndex) {\n    var index = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;\n    }\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Creates an object composed from arrays of `keys` and `values`. Pass either\n   * a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`, or\n   * two arrays, one of `keys` and one of corresponding `values`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} keys The array of keys.\n   * @param {Array} [values=[]] The array of values.\n   * @returns {Object} Returns an object composed of the given keys and\n   *  corresponding values.\n   * @example\n   *\n   * _.object(['moe', 'larry'], [30, 40]);\n   * // => { 'moe': 30, 'larry': 40 }\n   */\n  function object(keys, values) {\n    var index = -1,\n        length = keys ? keys.length : 0,\n        result = {};\n\n    while (++index < length) {\n      var key = keys[index];\n      if (values) {\n        result[key] = values[index];\n      } else {\n        result[key[0]] = key[1];\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array of numbers (positive and/or negative) progressing from\n   * `start` up to but not including `end`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Number} [start=0] The start of the range.\n   * @param {Number} end The end of the range.\n   * @param {Number} [step=1] The value to increment or descrement by.\n   * @returns {Array} Returns a new range array.\n   * @example\n   *\n   * _.range(10);\n   * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n   *\n   * _.range(1, 11);\n   * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n   *\n   * _.range(0, 30, 5);\n   * // => [0, 5, 10, 15, 20, 25]\n   *\n   * _.range(0, -10, -1);\n   * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n   *\n   * _.range(0);\n   * // => []\n   */\n  function range(start, end, step) {\n    start = +start || 0;\n    step = +step || 1;\n\n    if (end == null) {\n      end = start;\n      start = 0;\n    }\n    // use `Array(length)` so V8 will avoid the slower \"dictionary\" mode\n    // http://youtu.be/XAqIpGU8ZZk#t=17m25s\n    var index = -1,\n        length = nativeMax(0, ceil((end - start) / step)),\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = start;\n      start += step;\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.initial`, this method gets all but the first value of `array`.\n   * If a number `n` is passed, the first `n` values are excluded from the result.\n   * If a `callback` function is passed, the first elements the `callback` returns\n   * truthy for are excluded from the result. The `callback` is bound to `thisArg`\n   * and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias drop, tail\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|Number|String} [callback|n=1] The function called\n   *  per element or the number of elements to exclude. If a property name or\n   *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a slice of `array`.\n   * @example\n   *\n   * _.rest([1, 2, 3]);\n   * // => [2, 3]\n   *\n   * _.rest([1, 2, 3], 2);\n   * // => [3]\n   *\n   * _.rest([1, 2, 3], function(num) {\n   *   return num < 3;\n   * });\n   * // => [3]\n   *\n   * var food = [\n   *   { 'name': 'banana', 'organic': true },\n   *   { 'name': 'beet',   'organic': false },\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.rest(food, 'organic');\n   * // => [{ 'name': 'beet', 'organic': false }]\n   *\n   * var food = [\n   *   { 'name': 'apple',  'type': 'fruit' },\n   *   { 'name': 'banana', 'type': 'fruit' },\n   *   { 'name': 'beet',   'type': 'vegetable' }\n   * ];\n   *\n   * // using \"_.where\" callback shorthand\n   * _.rest(food, { 'type': 'fruit' });\n   * // => [{ 'name': 'beet', 'type': 'vegetable' }]\n   */\n  function rest(array, callback, thisArg) {\n    if (typeof callback != 'number' && callback != null) {\n      var n = 0,\n          index = -1,\n          length = array ? array.length : 0;\n\n      callback = createCallback(callback, thisArg);\n      while (++index < length && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);\n    }\n    return slice(array, n);\n  }\n\n  /**\n   * Uses a binary search to determine the smallest index at which the `value`\n   * should be inserted into `array` in order to maintain the sort order of the\n   * sorted `array`. If `callback` is passed, it will be executed for `value` and\n   * each element in `array` to compute their sort ranking. The `callback` is\n   * bound to `thisArg` and invoked with one argument; (value).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to iterate over.\n   * @param {Mixed} value The value to evaluate.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Number} Returns the index at which the value should be inserted\n   *  into `array`.\n   * @example\n   *\n   * _.sortedIndex([20, 30, 50], 40);\n   * // => 2\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n   * // => 2\n   *\n   * var dict = {\n   *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n   * };\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return dict.wordToNumber[word];\n   * });\n   * // => 2\n   *\n   * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n   *   return this.wordToNumber[word];\n   * }, dict);\n   * // => 2\n   */\n  function sortedIndex(array, value, callback, thisArg) {\n    var low = 0,\n        high = array ? array.length : low;\n\n    // explicitly reference `identity` for better inlining in Firefox\n    callback = callback ? createCallback(callback, thisArg, 1) : identity;\n    value = callback(value);\n\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      callback(array[mid]) < value\n        ? low = mid + 1\n        : high = mid;\n    }\n    return low;\n  }\n\n  /**\n   * Computes the union of the passed-in arrays using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of unique values, in order, that are\n   *  present in one or more of the arrays.\n   * @example\n   *\n   * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n   * // => [1, 2, 3, 101, 10]\n   */\n  function union() {\n    return uniq(concat.apply(arrayRef, arguments));\n  }\n\n  /**\n   * Creates a duplicate-value-free version of the `array` using strict equality\n   * for comparisons, i.e. `===`. If the `array` is already sorted, passing `true`\n   * for `isSorted` will run a faster algorithm. If `callback` is passed, each\n   * element of `array` is passed through a callback` before uniqueness is computed.\n   * The `callback` is bound to `thisArg` and invoked with three arguments; (value, index, array).\n   *\n   * If a property name is passed for `callback`, the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is passed for `callback`, the created \"_.where\" style callback\n   * will return `true` for elements that have the propeties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias unique\n   * @category Arrays\n   * @param {Array} array The array to process.\n   * @param {Boolean} [isSorted=false] A flag to indicate that the `array` is already sorted.\n   * @param {Function|Object|String} [callback=identity] The function called per\n   *  iteration. If a property name or object is passed, it will be used to create\n   *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a duplicate-value-free array.\n   * @example\n   *\n   * _.uniq([1, 2, 1, 3, 1]);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 1, 2, 2, 3], true);\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return Math.floor(num); });\n   * // => [1, 2, 3]\n   *\n   * _.uniq([1, 2, 1.5, 3, 2.5], function(num) { return this.floor(num); }, Math);\n   * // => [1, 2, 3]\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n   * // => [{ 'x': 1 }, { 'x': 2 }]\n   */\n  function uniq(array, isSorted, callback, thisArg) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = [],\n        seen = result;\n\n    // juggle arguments\n    if (typeof isSorted == 'function') {\n      thisArg = callback;\n      callback = isSorted;\n      isSorted = false;\n    }\n    // init value cache for large arrays\n    var isLarge = !isSorted && length >= 75;\n    if (isLarge) {\n      var cache = {};\n    }\n    if (callback) {\n      seen = [];\n      callback = createCallback(callback, thisArg);\n    }\n    while (++index < length) {\n      var value = array[index],\n          computed = callback ? callback(value, index, array) : value;\n\n      if (isLarge) {\n        var key = computed + '';\n        var inited = hasOwnProperty.call(cache, key)\n          ? !(seen = cache[key])\n          : (seen = cache[key] = []);\n      }\n      if (isSorted\n            ? !index || seen[seen.length - 1] !== computed\n            : inited || indexOf(seen, computed) < 0\n          ) {\n        if (callback || isLarge) {\n          seen.push(computed);\n        }\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Creates an array with all occurrences of the passed values removed using\n   * strict equality for comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to filter.\n   * @param {Mixed} [value1, value2, ...] Values to remove.\n   * @returns {Array} Returns a new filtered array.\n   * @example\n   *\n   * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n   * // => [2, 3, 4]\n   */\n  function without(array) {\n    var index = -1,\n        length = array ? array.length : 0,\n        contains = cachedContains(arguments, 1),\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (!contains(value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Groups the elements of each array at their corresponding indexes. Useful for\n   * separate data sources that are coordinated through matching array indexes.\n   * For a matrix of nested arrays, `_.zip.apply(...)` can transpose the matrix\n   * in a similar fashion.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} [array1, array2, ...] Arrays to process.\n   * @returns {Array} Returns a new array of grouped elements.\n   * @example\n   *\n   * _.zip(['moe', 'larry'], [30, 40], [true, false]);\n   * // => [['moe', 30, true], ['larry', 40, false]]\n   */\n  function zip(array) {\n    var index = -1,\n        length = array ? max(pluck(arguments, 'length')) : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = pluck(arguments, index);\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that is restricted to executing `func` only after it is\n   * called `n` times. The `func` is executed with the `this` binding of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Number} n The number of times the function must be called before\n   * it is executed.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var renderNotes = _.after(notes.length, render);\n   * _.forEach(notes, function(note) {\n   *   note.asyncSave({ 'success': renderNotes });\n   * });\n   * // `renderNotes` is run once, after all notes have saved\n   */\n  function after(n, func) {\n    if (n < 1) {\n      return func();\n    }\n    return function() {\n      if (--n < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * passed to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {Mixed} [thisArg] The `this` binding of `func`.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'moe' }, 'hi');\n   * func();\n   * // => 'hi moe'\n   */\n  function bind(func, thisArg) {\n    // use `Function#bind` if it exists and is fast\n    // (in V8 `Function#bind` is slower except when partially applied)\n    return isBindFast || (nativeBind && arguments.length > 2)\n      ? nativeBind.call.apply(nativeBind, arguments)\n      : createBound(func, thisArg, slice(arguments, 2));\n  }\n\n  /**\n   * Binds methods on `object` to `object`, overwriting the existing method.\n   * Method names may be specified as individual arguments or as arrays of method\n   * names. If no method names are provided, all the function properties of `object`\n   * will be bound.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object to bind and assign the bound methods to.\n   * @param {String} [methodName1, methodName2, ...] Method names on the object to bind.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * var view = {\n   *  'label': 'docs',\n   *  'onClick': function() { alert('clicked ' + this.label); }\n   * };\n   *\n   * _.bindAll(view);\n   * jQuery('#docs').on('click', view.onClick);\n   * // => alerts 'clicked docs', when the button is clicked\n   */\n  function bindAll(object) {\n    var funcs = concat.apply(arrayRef, arguments),\n        index = funcs.length > 1 ? 0 : (funcs = functions(object), -1),\n        length = funcs.length;\n\n    while (++index < length) {\n      var key = funcs[index];\n      object[key] = bind(object[key], object);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function that, when called, invokes the method at `object[key]`\n   * and prepends any additional `bindKey` arguments to those passed to the bound\n   * function. This method differs from `_.bind` by allowing bound functions to\n   * reference methods that will be redefined or don't yet exist.\n   * See http://michaux.ca/articles/lazy-function-definition-pattern.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Object} object The object the method belongs to.\n   * @param {String} key The key of the method.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var object = {\n   *   'name': 'moe',\n   *   'greet': function(greeting) {\n   *     return greeting + ' ' + this.name;\n   *   }\n   * };\n   *\n   * var func = _.bindKey(object, 'greet', 'hi');\n   * func();\n   * // => 'hi moe'\n   *\n   * object.greet = function(greeting) {\n   *   return greeting + ', ' + this.name + '!';\n   * };\n   *\n   * func();\n   * // => 'hi, moe!'\n   */\n  function bindKey(object, key) {\n    return createBound(object, key, slice(arguments, 2));\n  }\n\n  /**\n   * Creates a function that is the composition of the passed functions,\n   * where each function consumes the return value of the function that follows.\n   * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n   * Each function is executed with the `this` binding of the composed function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} [func1, func2, ...] Functions to compose.\n   * @returns {Function} Returns the new composed function.\n   * @example\n   *\n   * var greet = function(name) { return 'hi ' + name; };\n   * var exclaim = function(statement) { return statement + '!'; };\n   * var welcome = _.compose(exclaim, greet);\n   * welcome('moe');\n   * // => 'hi moe!'\n   */\n  function compose() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments,\n          length = funcs.length;\n\n      while (length--) {\n        args = [funcs[length].apply(this, args)];\n      }\n      return args[0];\n    };\n  }\n\n  /**\n   * Creates a function that will delay the execution of `func` until after\n   * `wait` milliseconds have elapsed since the last time it was invoked. Pass\n   * `true` for `immediate` to cause debounce to invoke `func` on the leading,\n   * instead of the trailing, edge of the `wait` timeout. Subsequent calls to\n   * the debounced function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to debounce.\n   * @param {Number} wait The number of milliseconds to delay.\n   * @param {Boolean} immediate A flag to indicate execution is on the leading\n   *  edge of the timeout.\n   * @returns {Function} Returns the new debounced function.\n   * @example\n   *\n   * var lazyLayout = _.debounce(calculateLayout, 300);\n   * jQuery(window).on('resize', lazyLayout);\n   */\n  function debounce(func, wait, immediate) {\n    var args,\n        result,\n        thisArg,\n        timeoutId;\n\n    function delayed() {\n      timeoutId = null;\n      if (!immediate) {\n        result = func.apply(thisArg, args);\n      }\n    }\n    return function() {\n      var isImmediate = immediate && !timeoutId;\n      args = arguments;\n      thisArg = this;\n\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(delayed, wait);\n\n      if (isImmediate) {\n        result = func.apply(thisArg, args);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Executes the `func` function after `wait` milliseconds. Additional arguments\n   * will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to delay.\n   * @param {Number} wait The number of milliseconds to delay execution.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * var log = _.bind(console.log, console);\n   * _.delay(log, 1000, 'logged later');\n   * // => 'logged later' (Appears after one second.)\n   */\n  function delay(func, wait) {\n    var args = slice(arguments, 2);\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * Defers executing the `func` function until the current call stack has cleared.\n   * Additional arguments will be passed to `func` when it is invoked.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to defer.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n   * @returns {Number} Returns the `setTimeout` timeout id.\n   * @example\n   *\n   * _.defer(function() { alert('deferred'); });\n   * // returns from the function before `alert` is called\n   */\n  function defer(func) {\n    var args = slice(arguments, 1);\n    return setTimeout(function() { func.apply(undefined, args); }, 1);\n  }\n  // use `setImmediate` if it's available in Node.js\n  if (isV8 && freeModule && typeof setImmediate == 'function') {\n    defer = bind(setImmediate, window);\n  }\n\n  /**\n   * Creates a function that memoizes the result of `func`. If `resolver` is\n   * passed, it will be used to determine the cache key for storing the result\n   * based on the arguments passed to the memoized function. By default, the first\n   * argument passed to the memoized function is used as the cache key. The `func`\n   * is executed with the `this` binding of the memoized function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to have its output memoized.\n   * @param {Function} [resolver] A function used to resolve the cache key.\n   * @returns {Function} Returns the new memoizing function.\n   * @example\n   *\n   * var fibonacci = _.memoize(function(n) {\n   *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n   * });\n   */\n  function memoize(func, resolver) {\n    var cache = {};\n    return function() {\n      var key = (resolver ? resolver.apply(this, arguments) : arguments[0]) + '';\n      return hasOwnProperty.call(cache, key)\n        ? cache[key]\n        : (cache[key] = func.apply(this, arguments));\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to execute `func` once. Repeat calls to\n   * the function will return the value of the first call. The `func` is executed\n   * with the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // `initialize` executes `createApplication` once\n   */\n  function once(func) {\n    var ran,\n        result;\n\n    return function() {\n      if (ran) {\n        return result;\n      }\n      ran = true;\n      result = func.apply(this, arguments);\n\n      // clear the `func` variable so the function may be garbage collected\n      func = null;\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that, when called, invokes `func` with any additional\n   * `partial` arguments prepended to those passed to the new function. This\n   * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var greet = function(greeting, name) { return greeting + ' ' + name; };\n   * var hi = _.partial(greet, 'hi');\n   * hi('moe');\n   * // => 'hi moe'\n   */\n  function partial(func) {\n    return createBound(func, slice(arguments, 1));\n  }\n\n  /**\n   * This method is similar to `_.partial`, except that `partial` arguments are\n   * appended to those passed to the new function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to partially apply arguments to.\n   * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n   * @returns {Function} Returns the new partially applied function.\n   * @example\n   *\n   * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n   *\n   * var options = {\n   *   'variable': 'data',\n   *   'imports': { 'jq': $ }\n   * };\n   *\n   * defaultsDeep(options, _.templateSettings);\n   *\n   * options.variable\n   * // => 'data'\n   *\n   * options.imports\n   * // => { '_': _, 'jq': $ }\n   */\n  function partialRight(func) {\n    return createBound(func, slice(arguments, 1), null, indicatorObject);\n  }\n\n  /**\n   * Creates a function that, when executed, will only call the `func`\n   * function at most once per every `wait` milliseconds. If the throttled\n   * function is invoked more than once during the `wait` timeout, `func` will\n   * also be called on the trailing edge of the timeout. Subsequent calls to the\n   * throttled function will return the result of the last `func` call.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to throttle.\n   * @param {Number} wait The number of milliseconds to throttle executions to.\n   * @returns {Function} Returns the new throttled function.\n   * @example\n   *\n   * var throttled = _.throttle(updatePosition, 100);\n   * jQuery(window).on('scroll', throttled);\n   */\n  function throttle(func, wait) {\n    var args,\n        result,\n        thisArg,\n        timeoutId,\n        lastCalled = 0;\n\n    function trailingCall() {\n      lastCalled = new Date;\n      timeoutId = null;\n      result = func.apply(thisArg, args);\n    }\n    return function() {\n      var now = new Date,\n          remaining = wait - (now - lastCalled);\n\n      args = arguments;\n      thisArg = this;\n\n      if (remaining <= 0) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n        lastCalled = now;\n        result = func.apply(thisArg, args);\n      }\n      else if (!timeoutId) {\n        timeoutId = setTimeout(trailingCall, remaining);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that passes `value` to the `wrapper` function as its\n   * first argument. Additional arguments passed to the function are appended\n   * to those passed to the `wrapper` function. The `wrapper` is executed with\n   * the `this` binding of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Mixed} value The value to wrap.\n   * @param {Function} wrapper The wrapper function.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var hello = function(name) { return 'hello ' + name; };\n   * hello = _.wrap(hello, function(func) {\n   *   return 'before, ' + func('moe') + ', after';\n   * });\n   * hello();\n   * // => 'before, hello moe, after'\n   */\n  function wrap(value, wrapper) {\n    return function() {\n      var args = [value];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to escape.\n   * @returns {String} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Moe, Larry & Curly');\n   * // => 'Moe, Larry &amp; Curly'\n   */\n  function escape(string) {\n    return string == null ? '' : (string + '').replace(reUnescapedHtml, escapeHtmlChar);\n  }\n\n  /**\n   * This function returns the first argument passed to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Mixed} value Any value.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * var moe = { 'name': 'moe' };\n   * moe === _.identity(moe);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Adds functions properties of `object` to the `lodash` function and chainable\n   * wrapper.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object of function properties to add to `lodash`.\n   * @example\n   *\n   * _.mixin({\n   *   'capitalize': function(string) {\n   *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n   *   }\n   * });\n   *\n   * _.capitalize('moe');\n   * // => 'Moe'\n   *\n   * _('moe').capitalize();\n   * // => 'Moe'\n   */\n  function mixin(object) {\n    forEach(functions(object), function(methodName) {\n      var func = lodash[methodName] = object[methodName];\n\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n        return new lodash(func.apply(lodash, args));\n      };\n    });\n  }\n\n  /**\n   * Reverts the '_' variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    window._ = oldDash;\n    return this;\n  }\n\n  /**\n   * Produces a random number between `min` and `max` (inclusive). If only one\n   * argument is passed, a number between `0` and the given number will be returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} [min=0] The minimum possible value.\n   * @param {Number} [max=1] The maximum possible value.\n   * @returns {Number} Returns a random number.\n   * @example\n   *\n   * _.random(0, 5);\n   * // => a number between 0 and 5\n   *\n   * _.random(5);\n   * // => also a number between 0 and 5\n   */\n  function random(min, max) {\n    if (min == null && max == null) {\n      max = 1;\n    }\n    min = +min || 0;\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + floor(nativeRandom() * ((+max || 0) - min + 1));\n  }\n\n  /**\n   * Resolves the value of `property` on `object`. If `property` is a function,\n   * it will be invoked and its result returned, else the property value is\n   * returned. If `object` is falsey, then `null` is returned.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Object} object The object to inspect.\n   * @param {String} property The property to get the value of.\n   * @returns {Mixed} Returns the resolved value.\n   * @example\n   *\n   * var object = {\n   *   'cheese': 'crumpets',\n   *   'stuff': function() {\n   *     return 'nonsense';\n   *   }\n   * };\n   *\n   * _.result(object, 'cheese');\n   * // => 'crumpets'\n   *\n   * _.result(object, 'stuff');\n   * // => 'nonsense'\n   */\n  function result(object, property) {\n    var value = object ? object[property] : undefined;\n    return isFunction(value) ? object[property]() : value;\n  }\n\n  /**\n   * A micro-templating method that handles arbitrary delimiters, preserves\n   * whitespace, and correctly escapes quotes within interpolated code.\n   *\n   * Note: In the development build, `_.template` utilizes sourceURLs for easier\n   * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n   *\n   * Note: Lo-Dash may be used in Chrome extensions by either creating a `lodash csp`\n   * build and using precompiled templates, or loading Lo-Dash in a sandbox.\n   *\n   * For more information on precompiling templates see:\n   * http://lodash.com/#custom-builds\n   *\n   * For more information on Chrome extension sandboxes see:\n   * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} text The template text.\n   * @param {Obect} data The data object used to populate the text.\n   * @param {Object} options The options object.\n   *  escape - The \"escape\" delimiter regexp.\n   *  evaluate - The \"evaluate\" delimiter regexp.\n   *  interpolate - The \"interpolate\" delimiter regexp.\n   *  sourceURL - The sourceURL of the template's compiled source.\n   *  variable - The data object variable name.\n   *\n   * @returns {Function|String} Returns a compiled function when no `data` object\n   *  is given, else it returns the interpolated text.\n   * @example\n   *\n   * // using a compiled template\n   * var compiled = _.template('hello <%= name %>');\n   * compiled({ 'name': 'moe' });\n   * // => 'hello moe'\n   *\n   * var list = '<% _.forEach(people, function(name) { %><li><%= name %></li><% }); %>';\n   * _.template(list, { 'people': ['moe', 'larry'] });\n   * // => '<li>moe</li><li>larry</li>'\n   *\n   * // using the \"escape\" delimiter to escape HTML in data property values\n   * _.template('<b><%- value %></b>', { 'value': '<script>' });\n   * // => '<b>&lt;script&gt;</b>'\n   *\n   * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n   * _.template('hello ${ name }', { 'name': 'curly' });\n   * // => 'hello curly'\n   *\n   * // using the internal `print` function in \"evaluate\" delimiters\n   * _.template('<% print(\"hello \" + epithet); %>!', { 'epithet': 'stooge' });\n   * // => 'hello stooge!'\n   *\n   * // using custom template delimiters\n   * _.templateSettings = {\n   *   'interpolate': /{{([\\s\\S]+?)}}/g\n   * };\n   *\n   * _.template('hello {{ name }}!', { 'name': 'mustache' });\n   * // => 'hello mustache!'\n   *\n   * // using the `sourceURL` option to specify a custom sourceURL for the template\n   * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n   * compiled(data);\n   * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n   *\n   * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n   * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n   * compiled.source;\n   * // => function(data) {\n   *   var __t, __p = '', __e = _.escape;\n   *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n   *   return __p;\n   * }\n   *\n   * // using the `source` property to inline compiled templates for meaningful\n   * // line numbers in error messages and a stack trace\n   * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n   *   var JST = {\\\n   *     \"main\": ' + _.template(mainText).source + '\\\n   *   };\\\n   * ');\n   */\n  function template(text, data, options) {\n    // based on John Resig's `tmpl` implementation\n    // http://ejohn.org/blog/javascript-micro-templating/\n    // and Laura Doktorova's doT.js\n    // https://github.com/olado/doT\n    var settings = lodash.templateSettings;\n    text || (text = '');\n\n    // avoid missing dependencies when `iteratorTemplate` is not defined\n    options = defaults({}, options, settings);\n\n    var imports = defaults({}, options.imports, settings.imports),\n        importsKeys = keys(imports),\n        importsValues = values(imports);\n\n    var isEvaluating,\n        index = 0,\n        interpolate = options.interpolate || reNoMatch,\n        source = \"__p += '\";\n\n    // compile regexp to match each delimiter\n    var reDelimiters = RegExp(\n      (options.escape || reNoMatch).source + '|' +\n      interpolate.source + '|' +\n      (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n      (options.evaluate || reNoMatch).source + '|$'\n    , 'g');\n\n    text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n      interpolateValue || (interpolateValue = esTemplateValue);\n\n      // escape characters that cannot be included in string literals\n      source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n      // replace delimiters with snippets\n      if (escapeValue) {\n        source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n      }\n      if (evaluateValue) {\n        isEvaluating = true;\n        source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n      }\n      if (interpolateValue) {\n        source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n      }\n      index = offset + match.length;\n\n      // the JS engine embedded in Adobe products requires returning the `match`\n      // string in order to produce the correct `offset` value\n      return match;\n    });\n\n    source += \"';\\n\";\n\n    // if `variable` is not specified and the template contains \"evaluate\"\n    // delimiters, wrap a with-statement around the generated code to add the\n    // data object to the top of the scope chain\n    var variable = options.variable,\n        hasVariable = variable;\n\n    if (!hasVariable) {\n      variable = 'obj';\n      source = 'with (' + variable + ') {\\n' + source + '\\n}\\n';\n    }\n    // cleanup code by stripping empty strings\n    source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n      .replace(reEmptyStringMiddle, '$1')\n      .replace(reEmptyStringTrailing, '$1;');\n\n    // frame code as the function body\n    source = 'function(' + variable + ') {\\n' +\n      (hasVariable ? '' : variable + ' || (' + variable + ' = {});\\n') +\n      \"var __t, __p = '', __e = _.escape\" +\n      (isEvaluating\n        ? ', __j = Array.prototype.join;\\n' +\n          \"function print() { __p += __j.call(arguments, '') }\\n\"\n        : ';\\n'\n      ) +\n      source +\n      'return __p\\n}';\n\n    // Use a sourceURL for easier debugging and wrap in a multi-line comment to\n    // avoid issues with Narwhal, IE conditional compilation, and the JS engine\n    // embedded in Adobe products.\n    // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n    var sourceURL = '\\n/*\\n//@ sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\\n*/';\n\n    try {\n      var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);\n    } catch(e) {\n      e.source = source;\n      throw e;\n    }\n    if (data) {\n      return result(data);\n    }\n    // provide the compiled function's source via its `toString` method, in\n    // supported environments, or the `source` property as a convenience for\n    // inlining compiled templates during the build process\n    result.source = source;\n    return result;\n  }\n\n  /**\n   * Executes the `callback` function `n` times, returning an array of the results\n   * of each `callback` execution. The `callback` is bound to `thisArg` and invoked\n   * with one argument; (index).\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {Number} n The number of times to execute the callback.\n   * @param {Function} callback The function called per iteration.\n   * @param {Mixed} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n   * // => [3, 6, 4]\n   *\n   * _.times(3, function(n) { mage.castSpell(n); });\n   * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n   *\n   * _.times(3, function(n) { this.cast(n); }, mage);\n   * // => also calls `mage.castSpell(n)` three times\n   */\n  function times(n, callback, thisArg) {\n    n = +n || 0;\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = callback.call(thisArg, index);\n    }\n    return result;\n  }\n\n  /**\n   * The opposite of `_.escape`, this method converts the HTML entities\n   * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n   * corresponding characters.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} string The string to unescape.\n   * @returns {String} Returns the unescaped string.\n   * @example\n   *\n   * _.unescape('Moe, Larry &amp; Curly');\n   * // => 'Moe, Larry & Curly'\n   */\n  function unescape(string) {\n    return string == null ? '' : (string + '').replace(reEscapedHtml, unescapeHtmlChar);\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is passed, the ID will be appended to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {String} [prefix] The value to prefix the ID with.\n   * @returns {String} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return (prefix == null ? '' : prefix + '') + id;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Invokes `interceptor` with the `value` as the first argument, and then\n   * returns `value`. The purpose of this method is to \"tap into\" a method chain,\n   * in order to perform operations on intermediate results within the chain.\n   *\n   * @static\n   * @memberOf _\n   * @category Chaining\n   * @param {Mixed} value The value to pass to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {Mixed} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3, 4])\n   *  .filter(function(num) { return num % 2 == 0; })\n   *  .tap(alert)\n   *  .map(function(num) { return num * num; })\n   *  .value();\n   * // => // [2, 4] (alerted)\n   * // => [4, 16]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * Produces the `toString` result of the wrapped value.\n   *\n   * @name toString\n   * @memberOf _\n   * @category Chaining\n   * @returns {String} Returns the string result.\n   * @example\n   *\n   * _([1, 2, 3]).toString();\n   * // => '1,2,3'\n   */\n  function wrapperToString() {\n    return this.__wrapped__ + '';\n  }\n\n  /**\n   * Extracts the wrapped value.\n   *\n   * @name valueOf\n   * @memberOf _\n   * @alias value\n   * @category Chaining\n   * @returns {Mixed} Returns the wrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).valueOf();\n   * // => [1, 2, 3]\n   */\n  function wrapperValueOf() {\n    return this.__wrapped__;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return wrapped values when chaining\n  lodash.after = after;\n  lodash.assign = assign;\n  lodash.at = at;\n  lodash.bind = bind;\n  lodash.bindAll = bindAll;\n  lodash.bindKey = bindKey;\n  lodash.compact = compact;\n  lodash.compose = compose;\n  lodash.countBy = countBy;\n  lodash.debounce = debounce;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.difference = difference;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.forEach = forEach;\n  lodash.forIn = forIn;\n  lodash.forOwn = forOwn;\n  lodash.functions = functions;\n  lodash.groupBy = groupBy;\n  lodash.initial = initial;\n  lodash.intersection = intersection;\n  lodash.invert = invert;\n  lodash.invoke = invoke;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.max = max;\n  lodash.memoize = memoize;\n  lodash.merge = merge;\n  lodash.min = min;\n  lodash.object = object;\n  lodash.omit = omit;\n  lodash.once = once;\n  lodash.pairs = pairs;\n  lodash.partial = partial;\n  lodash.partialRight = partialRight;\n  lodash.pick = pick;\n  lodash.pluck = pluck;\n  lodash.range = range;\n  lodash.reject = reject;\n  lodash.rest = rest;\n  lodash.shuffle = shuffle;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.throttle = throttle;\n  lodash.times = times;\n  lodash.toArray = toArray;\n  lodash.union = union;\n  lodash.uniq = uniq;\n  lodash.values = values;\n  lodash.where = where;\n  lodash.without = without;\n  lodash.wrap = wrap;\n  lodash.zip = zip;\n\n  // add aliases\n  lodash.collect = map;\n  lodash.drop = rest;\n  lodash.each = forEach;\n  lodash.extend = assign;\n  lodash.methods = functions;\n  lodash.select = filter;\n  lodash.tail = rest;\n  lodash.unique = uniq;\n\n  // add functions to `lodash.prototype`\n  mixin(lodash);\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions that return unwrapped values when chaining\n  lodash.clone = clone;\n  lodash.cloneDeep = cloneDeep;\n  lodash.contains = contains;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.has = has;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isElement = isElement;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isPlainObject = isPlainObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.lastIndexOf = lastIndexOf;\n  lodash.mixin = mixin;\n  lodash.noConflict = noConflict;\n  lodash.random = random;\n  lodash.reduce = reduce;\n  lodash.reduceRight = reduceRight;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.sortedIndex = sortedIndex;\n  lodash.template = template;\n  lodash.unescape = unescape;\n  lodash.uniqueId = uniqueId;\n\n  // add aliases\n  lodash.all = every;\n  lodash.any = some;\n  lodash.detect = find;\n  lodash.foldl = reduce;\n  lodash.foldr = reduceRight;\n  lodash.include = contains;\n  lodash.inject = reduce;\n\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      lodash.prototype[methodName] = function() {\n        var args = [this.__wrapped__];\n        push.apply(args, arguments);\n        return func.apply(lodash, args);\n      };\n    }\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // add functions capable of returning wrapped and unwrapped values when chaining\n  lodash.first = first;\n  lodash.last = last;\n\n  // add aliases\n  lodash.take = first;\n  lodash.head = first;\n\n  forOwn(lodash, function(func, methodName) {\n    if (!lodash.prototype[methodName]) {\n      lodash.prototype[methodName]= function(callback, thisArg) {\n        var result = func(this.__wrapped__, callback, thisArg);\n        return callback == null || (thisArg && typeof callback != 'function')\n          ? result\n          : new lodash(result);\n      };\n    }\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type String\n   */\n  lodash.VERSION = '1.0.1';\n\n  // add \"Chaining\" functions to the wrapper\n  lodash.prototype.toString = wrapperToString;\n  lodash.prototype.value = wrapperValueOf;\n  lodash.prototype.valueOf = wrapperValueOf;\n\n  // add `Array` functions that return unwrapped values\n  each(['join', 'pop', 'shift'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      return func.apply(this.__wrapped__, arguments);\n    };\n  });\n\n  // add `Array` functions that return the wrapped value\n  each(['push', 'reverse', 'sort', 'unshift'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      func.apply(this.__wrapped__, arguments);\n      return this;\n    };\n  });\n\n  // add `Array` functions that return new wrapped values\n  each(['concat', 'slice', 'splice'], function(methodName) {\n    var func = arrayRef[methodName];\n    lodash.prototype[methodName] = function() {\n      return new lodash(func.apply(this.__wrapped__, arguments));\n    };\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose Lo-Dash\n  // some AMD build optimizers, like r.js, check for specific condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lo-Dash to the global object even when an AMD loader is present in\n    // case Lo-Dash was injected by a third-party script and not intended to be\n    // loaded as a module. The global assignment can be reverted in the Lo-Dash\n    // module via its `noConflict()` method.\n    window._ = lodash;\n\n    // define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module\n    define('lodash/dist/lodash',[],function() {\n      return lodash;\n    });\n  }\n  // check for `exports` after `define` in case a build optimizer adds an `exports` object\n  else if (freeExports) {\n    // in Node.js or RingoJS v0.8.0+\n    if (freeModule) {\n      (freeModule.exports = lodash)._ = lodash;\n    }\n    // in Narwhal or RingoJS v0.7.0-\n    else {\n      freeExports._ = lodash;\n    }\n  }\n  else {\n    // in a browser or Rhino\n    window._ = lodash;\n  }\n}(this));\n\ndefine('lodash', ['lodash/dist/lodash'], function (main) { return main; });\n",
    "\ndefine('vendor/buckets',['require','exports','module'],function (require, exports, module) {// Copyright 2012 Mauricio Santos. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n//\r\n// Some documentation is borrowed from the official Java API\r\n// as it serves the same porpose.\r\n\r\n/**\r\n * @namespace Top level namespace for Buckets, a JavaScript data structure library.\r\n */\r\nvar buckets = {};\r\n\r\n/**\r\n * Default function to compare element order.\r\n * @function\r\n * @private\r\n */\r\nbuckets.defaultCompare = function(a, b) {\r\n    if (a < b) {\r\n        return - 1;\r\n    } else if (a === b) {\r\n        return 0;\r\n    } else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * Default function to test equality.\r\n * @function\r\n * @private\r\n */\r\nbuckets.defaultEquals = function(a, b) {\r\n    return a === b;\r\n};\r\n\r\n/**\r\n * Default function to convert an object to a string.\r\n * @function\r\n * @private\r\n */\r\nbuckets.defaultToString = function(item) {\r\n    if (item === null) {\r\n        return 'BUCKETS_NULL';\r\n    } else if (buckets.isUndefined(item)) {\r\n        return 'BUCKETS_UNDEFINED';\r\n    } else if (buckets.isString(item)) {\r\n        return item;\r\n    } else {\r\n        return item.toString();\r\n    }\r\n};\r\n\r\n/**\r\n * Checks if the given argument is a function.\r\n * @function\r\n * @private\r\n */\r\nbuckets.isFunction = function(func) {\r\n    return (typeof func) === 'function';\r\n};\r\n\r\n/**\r\n * Checks if the given argument is undefined.\r\n * @function\r\n * @private\r\n */\r\nbuckets.isUndefined = function(obj) {\r\n    return (typeof obj) === 'undefined';\r\n};\r\n\r\n/**\r\n * Checks if the given argument is a string.\r\n * @function\r\n * @private\r\n */\r\nbuckets.isString = function(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object String]';\r\n};\r\n\r\n/**\r\n * Reverses a compare function.\r\n * @function\r\n * @private\r\n */\r\nbuckets.reverseCompareFunction = function(compareFunction) {\r\n    if (!buckets.isFunction(compareFunction)) {\r\n        return function(a, b) {\r\n            if (a < b) {\r\n                return 1;\r\n            } else if (a === b) {\r\n                return 0;\r\n            } else {\r\n                return - 1;\r\n            }\r\n        };\r\n    } else {\r\n        return function(d, v) {\r\n            return compareFunction(d, v) * -1;\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Returns an equal function given a compare function.\r\n * @function\r\n * @private\r\n */\r\nbuckets.compareToEquals = function(compareFunction) {\r\n    return function(a, b) {\r\n        return compareFunction(a, b) === 0;\r\n    };\r\n};\r\n\r\n/**\r\n * @namespace Contains various functions for manipulating arrays.\r\n */\r\nbuckets.arrays = {};\r\n\r\n/**\r\n * Returns the position of the first occurrence of the specified item\r\n * within the specified array.\r\n * @param {*} array the array in which to search the element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between 2 elements.\r\n * @return {number} the position of the first occurrence of the specified element\r\n * within the specified array, or -1 if not found.\r\n */\r\nbuckets.arrays.indexOf = function(array, item, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n    var length = array.length;\r\n    for (var i = 0; i < length; i++) {\r\n        if (equals(array[i], item)) {\r\n            return i;\r\n        }\r\n    }\r\n    return - 1;\r\n};\r\n\r\n/**\r\n * Returns the position of the last occurrence of the specified element\r\n * within the specified array.\r\n * @param {*} array the array in which to search the element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between 2 elements.\r\n * @return {number} the position of the last occurrence of the specified element\r\n * within the specified array or -1 if not found.\r\n */\r\nbuckets.arrays.lastIndexOf = function(array, item, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n    var length = array.length;\r\n    for (var i = length - 1; i >= 0; i--) {\r\n        if (equals(array[i], item)) {\r\n            return i;\r\n        }\r\n    }\r\n    return - 1;\r\n};\r\n\r\n/**\r\n * Returns true if the specified array contains the specified element.\r\n * @param {*} array the array in which to search the element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function to \r\n * check equality between 2 elements.\r\n * @return {boolean} true if the specified array contains the specified element.\r\n */\r\nbuckets.arrays.contains = function(array, item, equalsFunction) {\r\n    return buckets.arrays.indexOf(array, item, equalsFunction) >= 0;\r\n};\r\n\r\n\r\n/**\r\n * Removes the first ocurrence of the specified element from the specified array.\r\n * @param {*} array the array in which to search element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function to \r\n * check equality between 2 elements.\r\n * @return {boolean} true if the array changed after this call.\r\n */\r\nbuckets.arrays.remove = function(array, item, equalsFunction) {\r\n    var index = buckets.arrays.indexOf(array, item, equalsFunction);\r\n    if (index < 0) {\r\n        return false;\r\n    }\r\n    array.splice(index, 1);\r\n    return true;\r\n};\r\n\r\n/**\r\n * Returns the number of elements in the specified array equal\r\n * to the specified object.\r\n * @param {Array} array the array in which to determine the frequency of the element.\r\n * @param {Object} item the element whose frequency is to be determined.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between 2 elements.\r\n * @return {number} the number of elements in the specified array \r\n * equal to the specified object.\r\n */\r\nbuckets.arrays.frequency = function(array, item, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n    var length = array.length;\r\n    var freq = 0;\r\n    for (var i = 0; i < length; i++) {\r\n        if (equals(array[i], item)) {\r\n            freq++;\r\n        }\r\n    }\r\n    return freq;\r\n};\r\n\r\n/**\r\n * Returns true if the two specified arrays are equal to one another.\r\n * Two arrays are considered equal if both arrays contain the same number\r\n * of elements, and all corresponding pairs of elements in the two \r\n * arrays are equal and are in the same order. \r\n * @param {Array} array1 one array to be tested for equality.\r\n * @param {Array} array2 the other array to be tested for equality.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between elemements in the arrays.\r\n * @return {boolean} true if the two arrays are equal\r\n */\r\nbuckets.arrays.equals = function(array1, array2, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n    var length = array1.length;\r\n    for (var i = 0; i < length; i++) {\r\n        if (!equals(array1[i], array2[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Returns shallow a copy of the specified array.\r\n * @param {*} array the array to copy.\r\n * @return {Array} a copy of the specified array\r\n */\r\nbuckets.arrays.copy = function(array) {\r\n    return array.concat();\r\n};\r\n\r\n/**\r\n * Swaps the elements at the specified positions in the specified array.\r\n * @param {Array} array The array in which to swap elements.\r\n * @param {number} i the index of one element to be swapped.\r\n * @param {number} j the index of the other element to be swapped.\r\n * @return {boolean} true if the array is defined and the indexes are valid.\r\n */\r\nbuckets.arrays.swap = function(array, i, j) {\r\n    if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\r\n        return false;\r\n    }\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this array \r\n * starting from index 0 to length - 1.\r\n * @param {Array} array The array in which to iterate.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.arrays.forEach = function(array, callback) {\r\n   var lenght = array.length;\r\n   for (var i=0; i < lenght; i++) {\r\n   \t\tif(callback(array[i])===false){\r\n\t\t\treturn;\r\n\t\t}\r\n   }\t \r\n};\r\n\r\n/**\r\n * Creates an empty Linked List.\r\n * @class A linked list is a data structure consisting of a group of nodes\r\n * which together represent a sequence.\r\n * @constructor\r\n */\r\nbuckets.LinkedList = function() {\r\n\r\n    /**\r\n     * First node in the list\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    this.firstNode = null;\r\n\r\n    /**\r\n     * Last node in the list\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    this.lastNode = null;\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.nElements = 0;\r\n};\r\n\r\n\r\n/**\r\n * Adds an element to this list.\r\n * @param {Object} item element to be added.\r\n * @param {number=} index optional index to add the element. If no index is specified\r\n * the element is added to the end of this list.\r\n * @return {boolean} true if the element was added or false if the index is invalid\r\n * or if the element is undefined.\r\n */\r\nbuckets.LinkedList.prototype.add = function(item, index) {\r\n\r\n    if (buckets.isUndefined(index)) {\r\n        index = this.nElements;\r\n    }\r\n    if (index < 0 || index > this.nElements || buckets.isUndefined(item)) {\r\n        return false;\r\n    }\r\n    var newNode = this.createNode(item);\r\n    if (this.nElements === 0) {\r\n        // First node in the list.\r\n        this.firstNode = newNode;\r\n        this.lastNode = newNode;\r\n    } else if (index === this.nElements) {\r\n        // Insert at the end.\r\n        this.lastNode.next = newNode;\r\n        this.lastNode = newNode;\r\n    } else if (index === 0) {\r\n        // Change first node.\r\n        newNode.next = this.firstNode;\r\n        this.firstNode = newNode;\r\n    } else {\r\n        var prev = this.nodeAtIndex(index - 1);\r\n        newNode.next = prev.next;\r\n        prev.next = newNode;\r\n    }\r\n    this.nElements++;\r\n    return true;\r\n};\r\n\r\n\r\n/**\r\n * Returns the first element in this list.\r\n * @return {*} the first element of the list or undefined if the list is\r\n * empty.\r\n */\r\nbuckets.LinkedList.prototype.first = function() {\r\n\r\n    if (this.firstNode !== null) {\r\n        return this.firstNode.element;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Returns the last element in this list.\r\n * @return {*} the last element in the list or undefined if the list is\r\n * empty.\r\n */\r\nbuckets.LinkedList.prototype.last = function() {\r\n\r\n    if (this.lastNode !== null) {\r\n        return this.lastNode.element;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n\r\n/**\r\n * Returns the element at the specified position in this list.\r\n * @param {number} index desired index.\r\n * @return {*} the element at the given index or undefined if the index is\r\n * out of bounds.\r\n */\r\nbuckets.LinkedList.prototype.elementAtIndex = function(index) {\r\n\r\n    var node = this.nodeAtIndex(index);\r\n    if (node === null) {\r\n        return undefined;\r\n    }\r\n    return node.element;\r\n};\r\n\r\n/**\r\n * Returns the index in this list of the first occurrence of the\r\n * specified element, or -1 if the List does not contain this element.\r\n * <p>If the elements inside this list are\r\n * not comparable with the === operator a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} item element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n * function used to check if two elements are equal.\r\n * @return {number} the index in this list of the first occurrence\r\n * of the specified element, or -1 if this list does not contain the\r\n * element.\r\n */\r\nbuckets.LinkedList.prototype.indexOf = function(item, equalsFunction) {\r\n\r\n    var equalsF = equalsFunction || buckets.defaultEquals;\r\n    if (buckets.isUndefined(item)) {\r\n        return - 1;\r\n    }\r\n    var currentNode = this.firstNode;\r\n    var index = 0;\r\n    while (currentNode !== null) {\r\n        if (equalsF(currentNode.element, item)) {\r\n            return index;\r\n        }\r\n        index++;\r\n        currentNode = currentNode.next;\r\n    }\r\n    return - 1;\r\n};\r\n\r\n/**\r\n * Returns true if this list contains the specified element.\r\n * <p>If the elements inside the list are\r\n * not comparable with the === operator a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} item element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n * function used to check if two elements are equal.\r\n * @return {boolean} true if this list contains the specified element, false\r\n * otherwise.\r\n */\r\nbuckets.LinkedList.prototype.contains = function(item, equalsFunction) {\r\n    return (this.indexOf(item, equalsFunction) >= 0);\r\n};\r\n\r\n/**\r\n * Removes the first occurrence of the specified element in this list.\r\n * <p>If the elements inside the list are\r\n * not comparable with the === operator a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} item element to be removed from this list, if present.\r\n * @return {boolean} true if the list contained the specified element.\r\n */\r\nbuckets.LinkedList.prototype.remove = function(item, equalsFunction) {\r\n    var equalsF = equalsFunction || buckets.defaultEquals;\r\n    if (this.nElements < 1 || buckets.isUndefined(item)) {\r\n        return false;\r\n    }\r\n    var previous = null;\r\n    var currentNode = this.firstNode;\r\n    while (currentNode !== null) {\r\n\r\n        if (equalsF(currentNode.element, item)) {\r\n\r\n            if (currentNode === this.firstNode) {\r\n                this.firstNode = this.firstNode.next;\r\n                if (currentNode === this.lastNode) {\r\n                    this.lastNode = null;\r\n                }\r\n            } else if (currentNode === this.lastNode) {\r\n                this.lastNode = previous;\r\n                previous.next = currentNode.next;\r\n                currentNode.next = null;\r\n            } else {\r\n                previous.next = currentNode.next;\r\n                currentNode.next = null;\r\n            }\r\n            this.nElements--;\r\n            return true;\r\n        }\r\n        previous = currentNode;\r\n        currentNode = currentNode.next;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this list.\r\n */\r\nbuckets.LinkedList.prototype.clear = function() {\r\n    this.firstNode = null;\r\n    this.lastNode = null;\r\n    this.nElements = 0;\r\n};\r\n\r\n/**\r\n * Returns true if this list is equal to the given list.\r\n * Two lists are equal if they have the same elements in the same order.\r\n * @param {buckets.LinkedList} other the other list.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional\r\n * function used to check if two elements are equal. If the elements in the lists\r\n * are custom objects you should provide a function, otherwise \r\n * the === operator is used to check equality between elements.\r\n * @return {boolean} true if this list is equal to the given list.\r\n */\r\nbuckets.LinkedList.prototype.equals = function(other, equalsFunction) {\r\n    var eqF = equalsFunction || buckets.defaultEquals;\r\n    if (! (other instanceof buckets.LinkedList)) {\r\n        return false;\r\n    }\r\n    if (this.size() !== other.size()) {\r\n        return false;\r\n    }\r\n    return this.equalsAux(this.firstNode, other.firstNode, eqF);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nbuckets.LinkedList.prototype.equalsAux = function(n1, n2, eqF) {\r\n    while (n1 !== null) {\r\n        if (!eqF(n1.element, n2.element)) {\r\n            return false;\r\n        }\r\n        n1 = n1.next;\r\n        n2 = n2.next;\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Removes the element at the specified position in this list.\r\n * @param {number} index given index.\r\n * @return {*} removed element or undefined if the index is out of bounds.\r\n */\r\nbuckets.LinkedList.prototype.removeElementAtIndex = function(index) {\r\n\r\n    if (index < 0 || index >= this.nElements) {\r\n        return undefined;\r\n    }\r\n    var element;\r\n    if (this.nElements === 1) {\r\n        //First node in the list.\r\n        element = this.firstNode.element;\r\n        this.firstNode = null;\r\n        this.lastNode = null;\r\n    } else {\r\n        var previous = this.nodeAtIndex(index - 1);\r\n        if (previous === null) {\r\n            element = this.firstNode.element;\r\n            this.firstNode = this.firstNode.next;\r\n        } else if (previous.next === this.lastNode) {\r\n            element = this.lastNode.element;\r\n            this.lastNode = previous;\r\n        }\r\n        if (previous !== null) {\r\n            element = previous.next.element;\r\n            previous.next = previous.next.next;\r\n        }\r\n    }\r\n    this.nElements--;\r\n    return element;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this list in order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.LinkedList.prototype.forEach = function(callback) {\r\n    var currentNode = this.firstNode;\r\n    while (currentNode !== null) {\r\n        if (callback(currentNode.element) === false) {\r\n            break;\r\n        }\r\n        currentNode = currentNode.next;\r\n    }\r\n};\r\n\r\n/**\r\n * Reverses the order of the elements in this linked list (makes the last \r\n * element first, and the first element last).\r\n */\r\nbuckets.LinkedList.prototype.reverse = function() {\r\n    var previous = null;\r\n    var current = this.firstNode;\r\n    var temp = null;\r\n    while (current !== null) {\r\n        temp = current.next;\r\n        current.next = previous;\r\n        previous = current;\r\n        current = temp;\r\n    }\r\n    temp = this.firstNode;\r\n    this.firstNode = this.lastNode;\r\n    this.lastNode = temp;\r\n};\r\n\r\n\r\n/**\r\n * Returns an array containing all of the elements in this list in proper\r\n * sequence.\r\n * @return {Array.<*>} an array containing all of the elements in this list,\r\n * in proper sequence.\r\n */\r\nbuckets.LinkedList.prototype.toArray = function() {\r\n    var array = [];\r\n    var currentNode = this.firstNode;\r\n    while (currentNode !== null) {\r\n        array.push(currentNode.element);\r\n        currentNode = currentNode.next;\r\n    }\r\n    return array;\r\n};\r\n/**\r\n * Returns the number of elements in this list.\r\n * @return {number} the number of elements in this list.\r\n */\r\nbuckets.LinkedList.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this list contains no elements.\r\n * @return {boolean} true if this list contains no elements.\r\n */\r\nbuckets.LinkedList.prototype.isEmpty = function() {\r\n    return this.nElements <= 0;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nbuckets.LinkedList.prototype.nodeAtIndex = function(index) {\r\n\r\n    if (index < 0 || index >= this.nElements) {\r\n        return null;\r\n    }\r\n    if (index === (this.nElements - 1)) {\r\n        return this.lastNode;\r\n    }\r\n    var node = this.firstNode;\r\n    for (var i = 0; i < index; i++) {\r\n        node = node.next;\r\n    }\r\n    return node;\r\n};\r\n/**\r\n * @private\r\n */\r\nbuckets.LinkedList.prototype.createNode = function(item) {\r\n    return {\r\n        element: item,\r\n        next: null\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * Creates an empty dictionary. \r\n * @class <p>Dictionaries map keys to values; each key can map to at most one value.\r\n * This implementation accepts any kind of objects as keys.</p>\r\n *\r\n * <p>If the keys are custom objects a function which converts keys to unique\r\n * strings must be provided. Example:</p>\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object):string=} toStrFunction optional function used\r\n * to convert keys to strings. If the keys aren't strings or if toString()\r\n * is not appropriate, a custom function which receives a key and returns a\r\n * unique string must be provided.\r\n */\r\nbuckets.Dictionary = function(toStrFunction) {\r\n\r\n    /**\r\n     * Object holding the key-value pairs.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    this.table = {};\r\n\r\n    /**\r\n     * Number of elements in the list.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.nElements = 0;\r\n\r\n    /**\r\n     * Function used to convert keys to strings.\r\n     * @type {function(Object):string}\r\n     * @private\r\n     */\r\n    this.toStr = toStrFunction || buckets.defaultToString;\r\n};\r\n\r\n/**\r\n * Returns the value to which this dictionary maps the specified key.\r\n * Returns undefined if this dictionary contains no mapping for this key.\r\n * @param {Object} key key whose associated value is to be returned.\r\n * @return {*} the value to which this dictionary maps the specified key or\r\n * undefined if the map contains no mapping for this key.\r\n */\r\nbuckets.Dictionary.prototype.get = function(key) {\r\n\r\n    var pair = this.table[this.toStr(key)];\r\n    if (buckets.isUndefined(pair)) {\r\n        return undefined;\r\n    }\r\n    return pair.value;\r\n};\r\n/**\r\n * Associates the specified value with the specified key in this dictionary.\r\n * If the dictionary previously contained a mapping for this key, the old\r\n * value is replaced by the specified value.\r\n * @param {Object} key key with which the specified value is to be\r\n * associated.\r\n * @param {Object} value value to be associated with the specified key.\r\n * @return {*} previous value associated with the specified key, or undefined if\r\n * there was no mapping for the key or if the key/value are undefined.\r\n */\r\nbuckets.Dictionary.prototype.set = function(key, value) {\r\n\r\n    if (buckets.isUndefined(key) || buckets.isUndefined(value)) {\r\n        return undefined;\r\n    }\r\n\r\n    var ret;\r\n    var k = this.toStr(key);\r\n    var previousElement = this.table[k];\r\n    if (buckets.isUndefined(previousElement)) {\r\n        this.nElements++;\r\n        ret = undefined;\r\n    } else {\r\n        ret = previousElement.value;\r\n    }\r\n    this.table[k] = {\r\n        key: key,\r\n        value: value\r\n    };\r\n    return ret;\r\n};\r\n/**\r\n * Removes the mapping for this key from this dictionary if it is present.\r\n * @param {Object} key key whose mapping is to be removed from the\r\n * dictionary.\r\n * @return {*} previous value associated with specified key, or undefined if\r\n * there was no mapping for key.\r\n */\r\nbuckets.Dictionary.prototype.remove = function(key) {\r\n    var k = this.toStr(key);\r\n    var previousElement = this.table[k];\r\n    if (!buckets.isUndefined(previousElement)) {\r\n        delete this.table[k];\r\n        this.nElements--;\r\n        return previousElement.value;\r\n    }\r\n    return undefined;\r\n};\r\n/**\r\n * Returns an array containing all of the keys in this dictionary.\r\n * @return {Array} an array containing all of the keys in this dictionary.\r\n */\r\nbuckets.Dictionary.prototype.keys = function() {\r\n    var array = [];\r\n    for (var name in this.table) {\r\n        if (this.table.hasOwnProperty(name)) {\r\n            array.push(this.table[name].key);\r\n        }\r\n    }\r\n    return array;\r\n};\r\n/**\r\n * Returns an array containing all of the values in this dictionary.\r\n * @return {Array} an array containing all of the values in this dictionary.\r\n */\r\nbuckets.Dictionary.prototype.values = function() {\r\n    var array = [];\r\n    for (var name in this.table) {\r\n        if (this.table.hasOwnProperty(name)) {\r\n            array.push(this.table[name].value);\r\n        }\r\n    }\r\n    return array;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each key-value pair \r\n * present in this dictionary.\r\n * @param {function(Object,Object):*} callback function to execute, it is\r\n * invoked with two arguments: key and value. To break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Dictionary.prototype.forEach = function(callback) {\r\n    for (var name in this.table) {\r\n        if (this.table.hasOwnProperty(name)) {\r\n            var pair = this.table[name];\r\n            var ret = callback(pair.key, pair.value);\r\n            if (ret === false) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary contains a mapping for the specified key.\r\n * @param {Object} key key whose presence in this dictionary is to be\r\n * tested.\r\n * @return {boolean} true if this dictionary contains a mapping for the\r\n * specified key.\r\n */\r\nbuckets.Dictionary.prototype.containsKey = function(key) {\r\n    return ! buckets.isUndefined(this.get(key));\r\n};\r\n/**\r\n * Removes all mappings from this dictionary.\r\n * @this {buckets.Dictionary}\r\n */\r\nbuckets.Dictionary.prototype.clear = function() {\r\n\r\n    this.table = {};\r\n    this.nElements = 0;\r\n};\r\n/**\r\n * Returns the number of keys in this dictionary.\r\n * @return {number} the number of key-value mappings in this dictionary.\r\n */\r\nbuckets.Dictionary.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary contains no mappings.\r\n * @return {boolean} true if this dictionary contains no mappings.\r\n */\r\nbuckets.Dictionary.prototype.isEmpty = function() {\r\n    return this.nElements <= 0;\r\n};\r\n\r\n// /**\r\n//  * Returns true if this dictionary is equal to the given dictionary.\r\n//  * Two dictionaries are equal if they contain the same mappings.\r\n//  * @param {buckets.Dictionary} other the other dictionary.\r\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\r\n//  * function used to check if two values are equal.\r\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\r\n//  */\r\n// buckets.Dictionary.prototype.equals = function(other,valuesEqualFunction) {\r\n// \tvar eqF = valuesEqualFunction || buckets.defaultEquals;\r\n// \tif(!(other instanceof buckets.Dictionary)){\r\n// \t\treturn false;\r\n// \t}\r\n// \tif(this.size() !== other.size()){\r\n// \t\treturn false;\r\n// \t}\r\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\r\n// };\r\n/**\r\n * Creates an empty multi dictionary. \r\n * @class <p>A multi dictionary is a special kind of dictionary that holds\r\n * multiple values against each key. Setting a value into the dictionary will \r\n * add the value to an array at that key. Getting a key will return an array,\r\n * holding all the values set to that key.\r\n * This implementation accepts any kind of objects as keys.</p>\r\n *\r\n * <p>If the keys are custom objects a function which converts keys to strings must be\r\n * provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n * <p>If the values are custom objects a function to check equality between values\r\n * must be provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petsAreEqualByAge(pet1,pet2) {\r\n *  return pet1.age===pet2.age;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object):string=} toStrFunction optional function\r\n * to convert keys to strings. If the keys aren't strings or if toString()\r\n * is not appropriate, a custom function which receives a key and returns a\r\n * unique string must be provided.\r\n * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\r\n * function to check if two values are equal.\r\n * \r\n */\r\nbuckets.MultiDictionary = function(toStrFunction, valuesEqualsFunction) {\r\n    // Call the parent's constructor\r\n    this.parent = new buckets.Dictionary(toStrFunction);\r\n    this.equalsF = valuesEqualsFunction || buckets.defaultEquals;\r\n};\r\n\r\n/**\r\n * Returns an array holding the values to which this dictionary maps\r\n * the specified key.\r\n * Returns an empty array if this dictionary contains no mappings for this key.\r\n * @param {Object} key key whose associated values are to be returned.\r\n * @return {Array} an array holding the values to which this dictionary maps\r\n * the specified key.\r\n */\r\nbuckets.MultiDictionary.prototype.get = function(key) {\r\n    var values = this.parent.get(key);\r\n    if (buckets.isUndefined(values)) {\r\n        return [];\r\n    }\r\n    return buckets.arrays.copy(values);\r\n};\r\n\r\n/**\r\n * Adds the value to the array associated with the specified key, if \r\n * it is not already present.\r\n * @param {Object} key key with which the specified value is to be\r\n * associated.\r\n * @param {Object} value the value to add to the array at the key\r\n * @return {boolean} true if the value was not already associated with that key.\r\n */\r\nbuckets.MultiDictionary.prototype.set = function(key, value) {\r\n\r\n    if (buckets.isUndefined(key) || buckets.isUndefined(value)) {\r\n        return false;\r\n    }\r\n    if (!this.containsKey(key)) {\r\n        this.parent.set(key, [value]);\r\n        return true;\r\n    }\r\n    var array = this.parent.get(key);\r\n    if (buckets.arrays.contains(array, value, this.equalsF)) {\r\n        return false;\r\n    }\r\n    array.push(value);\r\n    return true;\r\n};\r\n\r\n/**\r\n * Removes the specified values from the array of values associated with the\r\n * specified key. If a value isn't given, all values associated with the specified \r\n * key are removed.\r\n * @param {Object} key key whose mapping is to be removed from the\r\n * dictionary.\r\n * @param {Object=} value optional argument to specify the value to remove \r\n * from the array associated with the specified key.\r\n * @return {*} true if the dictionary changed, false if the key doesn't exist or \r\n * if the specified value isn't associated with the specified key.\r\n */\r\nbuckets.MultiDictionary.prototype.remove = function(key, value) {\r\n    if (buckets.isUndefined(value)) {\r\n        var v = this.parent.remove(key);\r\n        if (buckets.isUndefined(v)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    var array = this.parent.get(key);\r\n    if (buckets.arrays.remove(array, value, this.equalsF)) {\r\n        if (array.length === 0) {\r\n            this.parent.remove(key);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the keys in this dictionary.\r\n * @return {Array} an array containing all of the keys in this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.keys = function() {\r\n    return this.parent.keys();\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the values in this dictionary.\r\n * @return {Array} an array containing all of the values in this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.values = function() {\r\n    var values = this.parent.values();\r\n    var array = [];\r\n    for (var i = 0; i < values.length; i++) {\r\n        var v = values[i];\r\n        for (var j = 0; j < v.length; j++) {\r\n            array.push(v[j]);\r\n        }\r\n    }\r\n    return array;\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary at least one value associatted the specified key.\r\n * @param {Object} key key whose presence in this dictionary is to be\r\n * tested.\r\n * @return {boolean} true if this dictionary at least one value associatted \r\n * the specified key.\r\n */\r\nbuckets.MultiDictionary.prototype.containsKey = function(key) {\r\n    return this.parent.containsKey(key);\r\n};\r\n\r\n/**\r\n * Removes all mappings from this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.clear = function() {\r\n    return this.parent.clear();\r\n};\r\n\r\n/**\r\n * Returns the number of keys in this dictionary.\r\n * @return {number} the number of key-value mappings in this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.size = function() {\r\n    return this.parent.size();\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary contains no mappings.\r\n * @return {boolean} true if this dictionary contains no mappings.\r\n */\r\nbuckets.MultiDictionary.prototype.isEmpty = function() {\r\n    return this.parent.isEmpty();\r\n};\r\n\r\n/**\r\n * Creates an empty Heap.\r\n * @class \r\n * <p>A heap is a binary tree, where the nodes maintain the heap property: \r\n * each node is smaller than each of its children. \r\n * This implementation uses an array to store elements.</p>\r\n * <p>If the inserted elements are custom objects a compare function must be provided, \r\n *  at construction time, otherwise the <=, === and >= operators are \r\n * used to compare elements. Example:</p>\r\n *\r\n * <pre>\r\n * function compare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return -1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return 1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n *\r\n * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\r\n * reverse compare function to accomplish that behavior. Example:</p>\r\n *\r\n * <pre>\r\n * function reverseCompare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return 1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return -1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n *\r\n * @constructor\r\n * @param {function(Object,Object):number=} compareFunction optional\r\n * function used to compare two elements. Must return a negative integer,\r\n * zero, or a positive integer as the first argument is less than, equal to,\r\n * or greater than the second.\r\n */\r\nbuckets.Heap = function(compareFunction) {\r\n\r\n    /**\r\n     * Array used to store the elements od the heap.\r\n     * @type {Array.<Object>}\r\n     * @private\r\n     */\r\n    this.data = [];\r\n\r\n    /**\r\n     * Function used to compare elements.\r\n     * @type {function(Object,Object):number}\r\n     * @private\r\n     */\r\n    this.compare = compareFunction || buckets.defaultCompare;\r\n};\r\n/**\r\n * Returns the index of the left child of the node at the given index.\r\n * @param {number} nodeIndex The index of the node to get the left child\r\n * for.\r\n * @return {number} The index of the left child.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.leftChildIndex = function(nodeIndex) {\r\n    return (2 * nodeIndex) + 1;\r\n};\r\n/**\r\n * Returns the index of the right child of the node at the given index.\r\n * @param {number} nodeIndex The index of the node to get the right child\r\n * for.\r\n * @return {number} The index of the right child.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.rightChildIndex = function(nodeIndex) {\r\n    return (2 * nodeIndex) + 2;\r\n};\r\n/**\r\n * Returns the index of the parent of the node at the given index.\r\n * @param {number} nodeIndex The index of the node to get the parent for.\r\n * @return {number} The index of the parent.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.parentIndex = function(nodeIndex) {\r\n    return Math.floor((nodeIndex - 1) / 2);\r\n};\r\n/**\r\n * Returns the index of the smaller child node (if it exists).\r\n * @param {number} leftChild left child index.\r\n * @param {number} rightChild right child index.\r\n * @return {number} the index with the minimum value or -1 if it doesn't\r\n * exists.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.minIndex = function(leftChild, rightChild) {\r\n\r\n    if (rightChild >= this.data.length) {\r\n        if (leftChild >= this.data.length) {\r\n            return - 1;\r\n        } else {\r\n            return leftChild;\r\n        }\r\n    } else {\r\n        if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\r\n            return leftChild;\r\n        } else {\r\n            return rightChild;\r\n        }\r\n    }\r\n};\r\n/**\r\n * Moves the node at the given index up to its proper place in the heap.\r\n * @param {number} index The index of the node to move up.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.siftUp = function(index) {\r\n\r\n    var parent = this.parentIndex(index);\r\n    while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\r\n        buckets.arrays.swap(this.data, parent, index);\r\n        index = parent;\r\n        parent = this.parentIndex(index);\r\n    }\r\n};\r\n/**\r\n * Moves the node at the given index down to its proper place in the heap.\r\n * @param {number} nodeIndex The index of the node to move down.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.siftDown = function(nodeIndex) {\r\n\r\n    //smaller child index\r\n    var min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n    this.rightChildIndex(nodeIndex));\r\n\r\n    while (min >= 0 && this.compare(this.data[nodeIndex],\r\n    this.data[min]) > 0) {\r\n        buckets.arrays.swap(this.data, min, nodeIndex);\r\n        nodeIndex = min;\r\n        min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n        this.rightChildIndex(nodeIndex));\r\n    }\r\n};\r\n/**\r\n * Retrieves but does not remove the root element of this heap.\r\n * @return {*} The value at the root of the heap. Returns undefined if the\r\n * heap is empty.\r\n */\r\nbuckets.Heap.prototype.peek = function() {\r\n\r\n    if (this.data.length > 0) {\r\n        return this.data[0];\r\n    } else {\r\n        return undefined;\r\n    }\r\n};\r\n/**\r\n * Adds the given element into the heap.\r\n * @param {*} element the element.\r\n * @return true if the element was added or fals if it is undefined.\r\n */\r\nbuckets.Heap.prototype.add = function(element) {\r\n    if (buckets.isUndefined(element)) {\r\n        return undefined;\r\n    }\r\n    this.data.push(element);\r\n    this.siftUp(this.data.length - 1);\r\n    return true;\r\n};\r\n\r\n/**\r\n * Retrieves and removes the root element of this heap.\r\n * @return {*} The value removed from the root of the heap. Returns\r\n * undefined if the heap is empty.\r\n */\r\nbuckets.Heap.prototype.removeRoot = function() {\r\n\r\n    if (this.data.length > 0) {\r\n        var obj = this.data[0];\r\n        this.data[0] = this.data[this.data.length - 1];\r\n        this.data.splice(this.data.length - 1, 1);\r\n        if (this.data.length > 0) {\r\n            this.siftDown(0);\r\n        }\r\n        return obj;\r\n    }\r\n    return undefined;\r\n};\r\n/**\r\n * Returns true if this heap contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this Heap contains the specified element, false\r\n * otherwise.\r\n */\r\nbuckets.Heap.prototype.contains = function(element) {\r\n    var equF = buckets.compareToEquals(this.compare);\r\n    return buckets.arrays.contains(this.data, element, equF);\r\n};\r\n/**\r\n * Returns the number of elements in this heap.\r\n * @return {number} the number of elements in this heap.\r\n */\r\nbuckets.Heap.prototype.size = function() {\r\n    return this.data.length;\r\n};\r\n/**\r\n * Checks if this heap is empty.\r\n * @return {boolean} true if and only if this heap contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.Heap.prototype.isEmpty = function() {\r\n    return this.data.length <= 0;\r\n};\r\n/**\r\n * Removes all of the elements from this heap.\r\n */\r\nbuckets.Heap.prototype.clear = function() {\r\n    this.data.length = 0;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this heap in \r\n * no particular order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Heap.prototype.forEach = function(callback) {\r\n   buckets.arrays.forEach(this.data,callback);\r\n};\r\n\r\n/**\r\n * Creates an empty Stack.\r\n * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\r\n * element added to the stack will be the first one to be removed. This\r\n * implementation uses a linked list as a container.\r\n * @constructor\r\n */\r\nbuckets.Stack = function() {\r\n\r\n    /**\r\n     * List containing the elements.\r\n     * @type buckets.LinkedList\r\n     * @private\r\n     */\r\n    this.list = new buckets.LinkedList();\r\n};\r\n/**\r\n * Pushes an item onto the top of this stack.\r\n * @param {Object} elem the element to be pushed onto this stack.\r\n * @return {boolean} true if the element was pushed or false if it is undefined.\r\n */\r\nbuckets.Stack.prototype.push = function(elem) {\r\n    return this.list.add(elem, 0);\r\n};\r\n/**\r\n * Pushes an item onto the top of this stack.\r\n * @param {Object} elem the element to be pushed onto this stack.\r\n * @return {boolean} true if the element was pushed or false if it is undefined.\r\n */\r\nbuckets.Stack.prototype.add = function(elem) {\r\n    return this.list.add(elem, 0);\r\n};\r\n/**\r\n * Removes the object at the top of this stack and returns that object.\r\n * @return {*} the object at the top of this stack or undefined if the\r\n * stack is empty.\r\n */\r\nbuckets.Stack.prototype.pop = function() {\r\n    return this.list.removeElementAtIndex(0);\r\n};\r\n/**\r\n * Looks at the object at the top of this stack without removing it from the\r\n * stack.\r\n * @return {*} the object at the top of this stack or undefined if the\r\n * stack is empty.\r\n */\r\nbuckets.Stack.prototype.peek = function() {\r\n    return this.list.first();\r\n};\r\n/**\r\n * Returns the number of elements in this stack.\r\n * @return {number} the number of elements in this stack.\r\n */\r\nbuckets.Stack.prototype.size = function() {\r\n    return this.list.size();\r\n};\r\n\r\n/**\r\n * Returns true if this stack contains the specified element.\r\n * <p>If the elements inside this stack are\r\n * not comparable with the === operator, a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} elem element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional\r\n * function to check if two elements are equal.\r\n * @return {boolean} true if this stack contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Stack.prototype.contains = function(elem, equalsFunction) {\r\n    return this.list.contains(elem, equalsFunction);\r\n};\r\n/**\r\n * Checks if this stack is empty.\r\n * @return {boolean} true if and only if this stack contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.Stack.prototype.isEmpty = function() {\r\n    return this.list.isEmpty();\r\n};\r\n/**\r\n * Removes all of the elements from this stack.\r\n */\r\nbuckets.Stack.prototype.clear = function() {\r\n    this.list.clear();\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this stack in \r\n * LIFO order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Stack.prototype.forEach = function(callback) {\r\n   this.list.forEach(callback);\r\n};\r\n\r\n/**\r\n * Creates an empty queue.\r\n * @class A queue is a First-In-First-Out (FIFO) data structure, the first\r\n * element added to the queue will be the first one to be removed. This\r\n * implementation uses a linked list as a container.\r\n * @constructor\r\n */\r\nbuckets.Queue = function() {\r\n\r\n    /**\r\n     * List containing the elements.\r\n     * @type buckets.LinkedList\r\n     * @private\r\n     */\r\n    this.list = new buckets.LinkedList();\r\n};\r\n/**\r\n * Inserts the specified element into the end of this queue.\r\n * @param {Object} elem the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.Queue.prototype.enqueue = function(elem) {\r\n    return this.list.add(elem);\r\n};\r\n/**\r\n * Inserts the specified element into the end of this queue.\r\n * @param {Object} elem the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.Queue.prototype.add = function(elem) {\r\n    return this.list.add(elem);\r\n};\r\n/**\r\n * Retrieves and removes the head of this queue.\r\n * @return {*} the head of this queue, or undefined if this queue is empty.\r\n */\r\nbuckets.Queue.prototype.dequeue = function() {\r\n    if (this.list.size() !== 0) {\r\n        var el = this.list.first();\r\n        this.list.removeElementAtIndex(0);\r\n        return el;\r\n    }\r\n    return undefined;\r\n};\r\n/**\r\n * Retrieves, but does not remove, the head of this queue.\r\n * @return {*} the head of this queue, or undefined if this queue is empty.\r\n */\r\nbuckets.Queue.prototype.peek = function() {\r\n\r\n    if (this.list.size() !== 0) {\r\n        return this.list.first();\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this queue.\r\n * @return {number} the number of elements in this queue.\r\n */\r\nbuckets.Queue.prototype.size = function() {\r\n    return this.list.size();\r\n};\r\n\r\n/**\r\n * Returns true if this queue contains the specified element.\r\n * <p>If the elements inside this stack are\r\n * not comparable with the === operator, a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} elem element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional\r\n * function to check if two elements are equal.\r\n * @return {boolean} true if this queue contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Queue.prototype.contains = function(elem, equalsFunction) {\r\n    return this.list.contains(elem, equalsFunction);\r\n};\r\n\r\n/**\r\n * Checks if this queue is empty.\r\n * @return {boolean} true if and only if this queue contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.Queue.prototype.isEmpty = function() {\r\n    return this.list.size() <= 0;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this queue.\r\n */\r\nbuckets.Queue.prototype.clear = function() {\r\n    this.list.clear();\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this queue in \r\n * FIFO order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Queue.prototype.forEach = function(callback) {\r\n   this.list.forEach(callback);\r\n};\r\n\r\n/**\r\n * Creates an empty priority queue.\r\n * @class <p>In a priority queue each element is associated with a \"priority\",\r\n * elements are dequeued in highest-priority-first order (the elements with the \r\n * highest priority are dequeued first). Priority Queues are implemented as heaps. \r\n * If the inserted elements are custom objects a compare function must be provided, \r\n * otherwise the <=, === and >= operators are used to compare object priority.</p>\r\n * <pre>\r\n * function compare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return -1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return 1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object,Object):number=} compareFunction optional\r\n * function used to compare two element priorities. Must return a negative integer,\r\n * zero, or a positive integer as the first argument is less than, equal to,\r\n * or greater than the second.\r\n */\r\nbuckets.PriorityQueue = function(compareFunction) {\r\n    this.heap = new buckets.Heap(buckets.reverseCompareFunction(compareFunction));\r\n};\r\n\r\n/**\r\n * Inserts the specified element into this priority queue.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.PriorityQueue.prototype.enqueue = function(element) {\r\n    return this.heap.add(element);\r\n};\r\n\r\n/**\r\n * Inserts the specified element into this priority queue.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.PriorityQueue.prototype.add = function(element) {\r\n    return this.heap.add(element);\r\n};\r\n\r\n/**\r\n * Retrieves and removes the highest priority element of this queue.\r\n * @return {*} the the highest priority element of this queue, \r\nor undefined if this queue is empty.\r\n */\r\nbuckets.PriorityQueue.prototype.dequeue = function() {\r\n    if (this.heap.size() !== 0) {\r\n        var el = this.heap.peek();\r\n        this.heap.removeRoot();\r\n        return el;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Retrieves, but does not remove, the highest priority element of this queue.\r\n * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\r\n */\r\nbuckets.PriorityQueue.prototype.peek = function() {\r\n    return this.heap.peek();\r\n};\r\n\r\n/**\r\n * Returns true if this priority queue contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this priority queue contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.PriorityQueue.prototype.contains = function(element) {\r\n    return this.heap.contains(element);\r\n};\r\n\r\n/**\r\n * Checks if this priority queue is empty.\r\n * @return {boolean} true if and only if this priority queue contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.PriorityQueue.prototype.isEmpty = function() {\r\n    return this.heap.isEmpty();\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this priority queue.\r\n * @return {number} the number of elements in this priority queue.\r\n */\r\nbuckets.PriorityQueue.prototype.size = function() {\r\n    return this.heap.size();\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this priority queue.\r\n */\r\nbuckets.PriorityQueue.prototype.clear = function() {\r\n    this.heap.clear();\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this queue in \r\n * no particular order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.PriorityQueue.prototype.forEach = function(callback) {\r\n   this.heap.forEach(callback);\r\n};\r\n\r\n\r\n/**\r\n * Creates an empty set.\r\n * @class <p>A set is a data structure that contains no duplicate items.</p>\r\n * <p>If the inserted elements are custom objects a function \r\n * which converts elements to strings must be provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n *\r\n * @constructor\r\n * @param {function(Object):string=} toStringFunction optional function used\r\n * to convert elements to strings. If the elements aren't strings or if toString()\r\n * is not appropriate, a custom function which receives a onject and returns a\r\n * unique string must be provided.\r\n */\r\nbuckets.Set = function(toStringFunction) {\r\n    this.dictionary = new buckets.Dictionary(toStringFunction);\r\n};\r\n\r\n/**\r\n * Returns true if this set contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this set contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Set.prototype.contains = function(element) {\r\n    return this.dictionary.containsKey(element);\r\n};\r\n\r\n/**\r\n * Adds the specified element to this set if it is not already present.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if this set did not already contain the specified element.\r\n */\r\nbuckets.Set.prototype.add = function(element) {\r\n    if (this.contains(element) || buckets.isUndefined(element)) {\r\n        return false;\r\n    } else {\r\n        this.dictionary.set(element, element);\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Performs an intersecion between this an another set.\r\n * Removes all values that are not present this set and the given set.\r\n * @param {buckets.Set} otherSet other set.\r\n */\r\nbuckets.Set.prototype.intersection = function(otherSet) {\r\n    var set = this;\r\n    this.forEach(function(element) {\r\n        if (!otherSet.contains(element)) {\r\n            set.remove(element);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Performs a union between this an another set.\r\n * Adds all values from the given set to this set.\r\n * @param {buckets.Set} otherSet other set.\r\n */\r\nbuckets.Set.prototype.union = function(otherSet) {\r\n    var set = this;\r\n    otherSet.forEach(function(element) {\r\n        set.add(element);\r\n    });\r\n};\r\n\r\n/**\r\n * Performs a difference between this an another set.\r\n * Removes from this set all the values that are present in the given set.\r\n * @param {buckets.Set} otherSet other set.\r\n */\r\nbuckets.Set.prototype.difference = function(otherSet) {\r\n    var set = this;\r\n    otherSet.forEach(function(element) {\r\n        set.remove(element);\r\n    });\r\n};\r\n\r\n/**\r\n * Checks whether the given set contains all the elements in this set.\r\n * @param {buckets.Set} otherSet other set.\r\n * @return {boolean} true if this set is a subset of the given set.\r\n */\r\nbuckets.Set.prototype.isSubsetOf = function(otherSet) {\r\n    \r\n\tif (this.size() > otherSet.size()) {\r\n        return false;\r\n    }\r\n\t\r\n\tvar isSub = true;\r\n    this.forEach(function(element) {\r\n        if (!otherSet.contains(element)) {\r\n\t\t\tisSub = false;\r\n\t\t\treturn false;\r\n        }\r\n    });\r\n    return isSub;\r\n};\r\n\r\n/**\r\n * Removes the specified element from this set if it is present.\r\n * @return {boolean} true if this set contained the specified element.\r\n */\r\nbuckets.Set.prototype.remove = function(element) {\r\n    if (!this.contains(element)) {\r\n        return false;\r\n    } else {\r\n        this.dictionary.remove(element);\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element \r\n * present in this set.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one arguments: the element. To break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Set.prototype.forEach = function(callback) {\r\n    this.dictionary.forEach(function(k, v) {\r\n        return callback(v);\r\n    });\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the elements in this set in arbitrary order.\r\n * @return {Array} an array containing all of the elements in this set.\r\n */\r\nbuckets.Set.prototype.toArray = function() {\r\n    return this.dictionary.values();\r\n};\r\n\r\n/**\r\n * Returns true if this set contains no elements.\r\n * @return {boolean} true if this set contains no elements.\r\n */\r\nbuckets.Set.prototype.isEmpty = function() {\r\n    return this.dictionary.isEmpty();\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this set.\r\n * @return {number} the number of elements in this set.\r\n */\r\nbuckets.Set.prototype.size = function() {\r\n    return this.dictionary.size();\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this set.\r\n */\r\nbuckets.Set.prototype.clear = function() {\r\n    this.dictionary.clear();\r\n};\r\n\r\n/**\r\n * Creates an empty bag.\r\n * @class <p>A bag is a special kind of set in which members are \r\n * allowed to appear more than once.</p>\r\n * <p>If the inserted elements are custom objects a function \r\n * which converts elements to unique strings must be provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n *\r\n * @constructor\r\n * @param {function(Object):string=} toStrFunction optional function used\r\n * to convert elements to strings. If the elements aren't strings or if toString()\r\n * is not appropriate, a custom function which receives an object and returns a\r\n * unique string must be provided.\r\n */\r\nbuckets.Bag = function(toStrFunction) {\r\n    this.toStrF = toStrFunction || buckets.defaultToString;\r\n    this.dictionary = new buckets.Dictionary(this.toStrF);\r\n    this.nElements = 0;\r\n};\r\n\r\n/**\r\n* Adds nCopies of the specified object to this bag.\r\n* @param {Object} element element to add.\r\n* @param {number=} nCopies the number of copies to add, if this argument is\r\n* undefined 1 copy is added.\r\n* @return {boolean} true unless element is undefined.\r\n*/\r\nbuckets.Bag.prototype.add = function(element, nCopies) {\r\n\r\n    if (isNaN(nCopies) || buckets.isUndefined(nCopies)) {\r\n        nCopies = 1;\r\n    }\r\n    if (buckets.isUndefined(element) || nCopies <= 0) {\r\n        return false;\r\n    }\r\n\r\n    if (!this.contains(element)) {\r\n        var node = {\r\n            value: element,\r\n            copies: nCopies\r\n        };\r\n        this.dictionary.set(element, node);\r\n    } else {\r\n        this.dictionary.get(element).copies += nCopies;\r\n    }\r\n    this.nElements += nCopies;\r\n    return true;\r\n};\r\n\r\n/**\r\n* Counts the number of copies of the specified object in this bag.\r\n* @param {Object} element the object to search for..\r\n* @return {number} the number of copies of the object, 0 if not found\r\n*/\r\nbuckets.Bag.prototype.count = function(element) {\r\n\r\n    if (!this.contains(element)) {\r\n        return 0;\r\n    } else {\r\n        return this.dictionary.get(element).copies;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns true if this bag contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this bag contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Bag.prototype.contains = function(element) {\r\n    return this.dictionary.containsKey(element);\r\n};\r\n\r\n/**\r\n* Removes nCopies of the specified object to this bag.\r\n* If the number of copies to remove is greater than the actual number \r\n* of copies in the Bag, all copies are removed. \r\n* @param {Object} element element to remove.\r\n* @param {number=} nCopies the number of copies to remove, if this argument is\r\n* undefined 1 copy is removed.\r\n* @return {boolean} true if at least 1 element was removed.\r\n*/\r\nbuckets.Bag.prototype.remove = function(element, nCopies) {\r\n\r\n    if (isNaN(nCopies) || buckets.isUndefined(nCopies)) {\r\n        nCopies = 1;\r\n    }\r\n    if (buckets.isUndefined(element) || nCopies <= 0) {\r\n        return false;\r\n    }\r\n\r\n    if (!this.contains(element)) {\r\n        return false;\r\n    } else {\r\n        var node = this.dictionary.get(element);\r\n        if (nCopies > node.copies) {\r\n            this.nElements -= node.copies;\r\n        } else {\r\n            this.nElements -= nCopies;\r\n        }\r\n        node.copies -= nCopies;\r\n        if (node.copies <= 0) {\r\n            this.dictionary.remove(element);\r\n        }\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the elements in this big in arbitrary order, \r\n * including multiple copies.\r\n * @return {Array} an array containing all of the elements in this bag.\r\n */\r\nbuckets.Bag.prototype.toArray = function() {\r\n    var a = [];\r\n    var values = this.dictionary.values();\r\n    var vl = values.length;\r\n    for (var i = 0; i < vl; i++) {\r\n        var node = values[i];\r\n        var element = node.value;\r\n        var copies = node.copies;\r\n        for (var j = 0; j < copies; j++) {\r\n            a.push(element);\r\n        }\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * Returns a set of unique elements in this bag. \r\n * @return {buckets.Set} a set of unique elements in this bag.\r\n */\r\nbuckets.Bag.prototype.toSet = function() {\r\n    var set = new buckets.Set(this.toStrF);\r\n    var elements = this.dictionary.values();\r\n    var l = elements.length;\r\n    for (var i = 0; i < l; i++) {\r\n        var value = elements[i].value;\r\n        set.add(value);\r\n    }\r\n    return set;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element \r\n * present in this bag, including multiple copies.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element. To break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Bag.prototype.forEach = function(callback) {\r\n    this.dictionary.forEach(function(k, v) {\r\n        var value = v.value;\r\n        var copies = v.copies;\r\n        for (var i = 0; i < copies; i++) {\r\n            if (callback(value) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n};\r\n/**\r\n * Returns the number of elements in this bag.\r\n * @return {number} the number of elements in this bag.\r\n */\r\nbuckets.Bag.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this bag contains no elements.\r\n * @return {boolean} true if this bag contains no elements.\r\n */\r\nbuckets.Bag.prototype.isEmpty = function() {\r\n    return this.nElements === 0;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this bag.\r\n */\r\nbuckets.Bag.prototype.clear = function() {\r\n    this.nElements = 0;\r\n    this.dictionary.clear();\r\n};\r\n\r\n\r\n\r\n/**\r\n * Creates an empty binary search tree.\r\n * @class <p>A binary search tree is a binary tree in which each \r\n * internal node stores an element such that the elements stored in the \r\n * left subtree are less than it and the elements \r\n * stored in the right subtree are greater.</p>\r\n * <p>Formally, a binary search tree is a node-based binary tree data structure which \r\n * has the following properties:</p>\r\n * <ul>\r\n * <li>The left subtree of a node contains only nodes with elements less \r\n * than the node's element</li>\r\n * <li>The right subtree of a node contains only nodes with elements greater \r\n * than the node's element</li>\r\n * <li>Both the left and right subtrees must also be binary search trees.</li>\r\n * </ul>\r\n * <p>If the inserted elements are custom objects a compare function must \r\n * be provided at construction time, otherwise the <=, === and >= operators are \r\n * used to compare elements. Example:</p>\r\n * <pre>\r\n * function compare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return -1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return 1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object,Object):number=} compareFunction optional\r\n * function used to compare two elements. Must return a negative integer,\r\n * zero, or a positive integer as the first argument is less than, equal to,\r\n * or greater than the second.\r\n */\r\nbuckets.BSTree = function(compareFunction) {\r\n    this.root = null;\r\n    this.compare = compareFunction || buckets.defaultCompare;\r\n    this.nElements = 0;\r\n};\r\n\r\n\r\n/**\r\n * Adds the specified element to this tree if it is not already present.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if this tree did not already contain the specified element.\r\n */\r\nbuckets.BSTree.prototype.add = function(element) {\r\n    if (buckets.isUndefined(element)) {\r\n        return false;\r\n    }\r\n\r\n    if (this.insertNode(this.createNode(element)) !== null) {\r\n        this.nElements++;\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this tree.\r\n */\r\nbuckets.BSTree.prototype.clear = function() {\r\n    this.root = null;\r\n    this.nElements = 0;\r\n};\r\n\r\n/**\r\n * Returns true if this tree contains no elements.\r\n * @return {boolean} true if this tree contains no elements.\r\n */\r\nbuckets.BSTree.prototype.isEmpty = function() {\r\n    return this.nElements === 0;\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this tree.\r\n * @return {number} the number of elements in this tree.\r\n */\r\nbuckets.BSTree.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this tree contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this tree contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.BSTree.prototype.contains = function(element) {\r\n    if (buckets.isUndefined(element)) {\r\n        return false;\r\n    }\r\n    return this.searchNode(this.root, element) !== null;\r\n};\r\n\r\n/**\r\n * Removes the specified element from this tree if it is present.\r\n * @return {boolean} true if this tree contained the specified element.\r\n */\r\nbuckets.BSTree.prototype.remove = function(element) {\r\n    var node = this.searchNode(this.root, element);\r\n    if (node === null) {\r\n        return false;\r\n    }\r\n    this.removeNode(node);\r\n    this.nElements--;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in \r\n * in-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.inorderTraversal = function(callback) {\r\n    this.inorderTraversalAux(this.root, callback, {\r\n        stop: false\r\n    });\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in pre-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.preorderTraversal = function(callback) {\r\n    this.preorderTraversalAux(this.root, callback, {\r\n        stop: false\r\n    });\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in post-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.postorderTraversal = function(callback) {\r\n    this.postorderTraversalAux(this.root, callback, {\r\n        stop: false\r\n    });\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in \r\n * level-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.levelTraversal = function(callback) {\r\n    this.levelTraversalAux(this.root, callback);\r\n};\r\n\r\n/**\r\n * Returns the minimum element of this tree.\r\n * @return {*} the minimum element of this tree or undefined if this tree is\r\n * is empty.\r\n */\r\nbuckets.BSTree.prototype.minimum = function() {\r\n    if (this.isEmpty()) {\r\n        return undefined;\r\n    }\r\n    return this.minimumAux(this.root).element;\r\n};\r\n\r\n/**\r\n * Returns the maximum element of this tree.\r\n * @return {*} the maximum element of this tree or undefined if this tree is\r\n * is empty.\r\n */\r\nbuckets.BSTree.prototype.maximum = function() {\r\n    if (this.isEmpty()) {\r\n        return undefined;\r\n    }\r\n    return this.maximumAux(this.root).element;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in inorder.\r\n * Equivalent to inorderTraversal.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.BSTree.prototype.forEach = function(callback) {\r\n    this.inorderTraversal(callback);\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the elements in this tree in in-order.\r\n * @return {Array} an array containing all of the elements in this tree in in-order.\r\n */\r\nbuckets.BSTree.prototype.toArray = function() {\r\n    var array = [];\r\n    this.inorderTraversal(function(element) {\r\n        array.push(element);\r\n    });\r\n    return array;\r\n};\r\n\r\n/**\r\n * Returns the height of this tree.\r\n * @return {number} the height of this tree or -1 if is empty.\r\n */\r\nbuckets.BSTree.prototype.height = function() {\r\n    return this.heightAux(this.root);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.searchNode = function(node, element) {\r\n    var cmp = null;\r\n    while (node !== null && cmp !== 0) {\r\n        cmp = this.compare(element, node.element);\r\n        if (cmp < 0) {\r\n            node = node.leftCh;\r\n        } else if (cmp > 0) {\r\n            node = node.rightCh;\r\n        }\r\n    }\r\n    return node;\r\n};\r\n\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.transplant = function(n1, n2) {\r\n    if (n1.parent === null) {\r\n        this.root = n2;\r\n    } else if (n1 === n1.parent.leftCh) {\r\n        n1.parent.leftCh = n2;\r\n    } else {\r\n        n1.parent.rightCh = n2;\r\n    }\r\n    if (n2 !== null) {\r\n        n2.parent = n1.parent;\r\n    }\r\n};\r\n\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.removeNode = function(node) {\r\n    if (node.leftCh === null) {\r\n        this.transplant(node, node.rightCh);\r\n    } else if (node.rightCh === null) {\r\n        this.transplant(node, node.leftCh);\r\n    } else {\r\n        var y = this.minimumAux(node.rightCh);\r\n        if (y.parent !== node) {\r\n            this.transplant(y, y.rightCh);\r\n            y.rightCh = node.rightCh;\r\n            y.rightCh.parent = y;\r\n        }\r\n        this.transplant(node, y);\r\n        y.leftCh = node.leftCh;\r\n        y.leftCh.parent = y;\r\n    }\r\n};\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.inorderTraversalAux = function(node, callback, signal) {\r\n    if (node === null || signal.stop) {\r\n        return;\r\n    }\r\n    this.inorderTraversalAux(node.leftCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    signal.stop = callback(node.element) === false;\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.inorderTraversalAux(node.rightCh, callback, signal);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.levelTraversalAux = function(node, callback) {\r\n    var queue = new buckets.Queue();\r\n    if (node !== null) {\r\n        queue.enqueue(node);\r\n    }\r\n    while (!queue.isEmpty()) {\r\n        node = queue.dequeue();\r\n        if (callback(node.element) === false) {\r\n            return;\r\n        }\r\n        if (node.leftCh !== null) {\r\n            queue.enqueue(node.leftCh);\r\n        }\r\n        if (node.rightCh !== null) {\r\n            queue.enqueue(node.rightCh);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.preorderTraversalAux = function(node, callback, signal) {\r\n    if (node === null || signal.stop) {\r\n        return;\r\n    }\r\n    signal.stop = callback(node.element) === false;\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.preorderTraversalAux(node.leftCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.preorderTraversalAux(node.rightCh, callback, signal);\r\n};\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.postorderTraversalAux = function(node, callback, signal) {\r\n    if (node === null || signal.stop) {\r\n        return;\r\n    }\r\n    this.postorderTraversalAux(node.leftCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.postorderTraversalAux(node.rightCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    signal.stop = callback(node.element) === false;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.minimumAux = function(node) {\r\n    while (node.leftCh !== null) {\r\n        node = node.leftCh;\r\n    }\r\n    return node;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.maximumAux = function(node) {\r\n    while (node.rightCh !== null) {\r\n        node = node.rightCh;\r\n    }\r\n    return node;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.successorNode = function(node) {\r\n    if (node.rightCh !== null) {\r\n        return this.minimumAux(node.rightCh);\r\n    }\r\n    var successor = node.parent;\r\n    while (successor !== null && node === successor.rightCh) {\r\n        node = successor;\r\n        successor = node.parent;\r\n    }\r\n    return successor;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.heightAux = function(node) {\r\n    if (node === null) {\r\n        return - 1;\r\n    }\r\n    return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\r\n};\r\n\r\n/*\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.insertNode = function(node) {\r\n\r\n    var parent = null;\r\n    var position = this.root;\r\n    var cmp = null;\r\n    while (position !== null) {\r\n        cmp = this.compare(node.element, position.element);\r\n        if (cmp === 0) {\r\n            return null;\r\n        } else if (cmp < 0) {\r\n            parent = position;\r\n            position = position.leftCh;\r\n        } else {\r\n            parent = position;\r\n            position = position.rightCh;\r\n        }\r\n    }\r\n    node.parent = parent;\r\n    if (parent === null) {\r\n        // tree is empty\r\n        this.root = node;\r\n    } else if (this.compare(node.element, parent.element) < 0) {\r\n        parent.leftCh = node;\r\n    } else {\r\n        parent.rightCh = node;\r\n    }\r\n    return node;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.createNode = function(element) {\r\n    return {\r\n        element: element,\r\n        leftCh: null,\r\n        rightCh: null,\r\n        parent: null\r\n    };\r\n};\r\n\r\nmodule.exports = buckets;\r\n\n});\n",
    "\ndefine('lib/angl-scope',['require','exports','module','lodash','../vendor/buckets'],function (require, exports, module) {var __extends = this.__extends || function (d, b) {\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\nvar _ = require('lodash');\r\nvar buckets = require('../vendor/buckets');\r\n\r\nvar bucketIdProp = '_id' + new Date();\r\nvar idGeneratorFn = function (item) {\r\n    return item[bucketIdProp] = item[bucketIdProp] || _.uniqueId();\r\n};\r\nvar AnglScope = (function () {\r\n    function AnglScope() {\r\n        this._identifiers = new buckets.Dictionary();\r\n        this._jsIdentifiers = new buckets.Dictionary();\r\n        this._unnamedVariables = new buckets.Set(idGeneratorFn);\r\n        this._variables = new buckets.Set(idGeneratorFn);\r\n        this._parentScope = null;\r\n        this._namingUid = 0;\r\n    }\r\n    AnglScope.prototype.addVariable = function (variable) {\r\n        var identifier = variable.getIdentifier();\r\n        if(identifier !== null && this.hasIdentifier(identifier)) {\r\n            throw new Error('Scope already has an identifier with the name \"' + identifier + '\"');\r\n        }\r\n        this._addVariable(variable);\r\n    };\r\n    AnglScope.prototype._addVariable = function (variable) {\r\n        var identifier = variable.getIdentifier();\r\n        var jsIdentifier = variable.getJsIdentifier();\r\n        this._variables.add(variable);\r\n        if(identifier !== null) {\r\n            this._identifiers.set(identifier, variable);\r\n        }\r\n        if(jsIdentifier === null) {\r\n            this._unnamedVariables.add(variable);\r\n        } else {\r\n            this._jsIdentifiers.set(jsIdentifier, variable);\r\n        }\r\n    };\r\n    AnglScope.prototype.getVariableByIdentifier = function (identifier) {\r\n        return this._identifiers.get(identifier);\r\n    };\r\n    AnglScope.prototype.getVariableByIdentifierInChain = function (identifier) {\r\n        return this._identifiers.get(identifier) || (this._parentScope && this._parentScope.getVariableByIdentifierInChain(identifier));\r\n    };\r\n    AnglScope.prototype.hasIdentifier = function (identifier) {\r\n        return this._identifiers.containsKey(identifier);\r\n    };\r\n    AnglScope.prototype.hasIdentifierInChain = function (identifier) {\r\n        return this.hasIdentifier(identifier) || !!(this._parentScope && this._parentScope.hasIdentifierInChain(identifier));\r\n    };\r\n    AnglScope.prototype.removeVariableByIdentifier = function (identifier) {\r\n        var variable = this.getVariableByIdentifier(identifier);\r\n        if(variable) {\r\n            this.removeVariable(variable);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    AnglScope.prototype.removeVariable = function (variable) {\r\n        var ret = this._variables.remove(variable);\r\n        if(ret) {\r\n            var jsIdentifier = variable.getJsIdentifier(), identifier = variable.getIdentifier();\r\n            identifier !== null && this._identifiers.remove(identifier);\r\n            jsIdentifier !== null && this._jsIdentifiers.remove(jsIdentifier);\r\n            this._unnamedVariables.remove(variable);\r\n        }\r\n        return ret;\r\n    };\r\n    AnglScope.prototype.getVariablesArray = function () {\r\n        return this._variables.toArray();\r\n    };\r\n    AnglScope.prototype.setParentScope = function (parentAnglScope) {\r\n        this._parentScope = parentAnglScope;\r\n    };\r\n    AnglScope.prototype.getParentScope = function () {\r\n        return this._parentScope;\r\n    };\r\n    AnglScope.prototype.createUnnamedIdentifier = function (preferredName, value) {\r\n        var unnamedIdentifier = new UnnamedIdentifier(preferredName);\r\n        this._unnamedVariables.set(unnamedIdentifier, value);\r\n        return unnamedIdentifier;\r\n    };\r\n    AnglScope.prototype.assignJsIdentifiers = function () {\r\n        var _this = this;\r\n        var unnamedVariables = this._unnamedVariables.toArray();\r\n        _.each(unnamedVariables, function (variable) {\r\n            if(!variable.awaitingJsIdentifierAssignment()) {\r\n                return;\r\n            }\r\n            _this.removeVariable(variable);\r\n            var namePrefix = variable.getDesiredJsIdentifier() || '__a';\r\n            var nameSuffix = '';\r\n            while(_this._hasJsIdentifier(namePrefix + nameSuffix)) {\r\n                nameSuffix = '' + _this._namingUid;\r\n                _this._namingUid++;\r\n            }\r\n            var name = namePrefix + nameSuffix;\r\n            variable.setJsIdentifier(name);\r\n            _this.addVariable(variable);\r\n        });\r\n    };\r\n    AnglScope.prototype._hasJsIdentifier = function (identifier) {\r\n        return this._jsIdentifiers.containsKey(identifier);\r\n    };\r\n    return AnglScope;\r\n})();\r\nexports.AnglScope = AnglScope;\r\nvar WithScope = (function (_super) {\r\n    __extends(WithScope, _super);\r\n    function WithScope() {\r\n        _super.apply(this, arguments);\r\n\r\n    }\r\n    WithScope.prototype.getVariableByIdentifier = function (identifier) {\r\n        return _super.prototype.getVariableByIdentifier.call(this, identifier) || this._parentScope.getVariableByIdentifier(identifier);\r\n    };\r\n    WithScope.prototype.hasIdentifier = function (identifier) {\r\n        return _super.prototype.hasIdentifier.call(this, identifier) || this._parentScope.hasIdentifier(identifier);\r\n    };\r\n    WithScope.prototype.addVariable = function (variable) {\r\n        var identifier = variable.getIdentifier();\r\n        if(identifier !== null && _.contains([\r\n            'self', \r\n            'other'\r\n        ], identifier) ? this._identifiers.containsKey(identifier) : this.hasIdentifier(identifier)) {\r\n            throw new Error('Scope already has an identifier with the name \"' + identifier + '\"');\r\n        }\r\n        this._addVariable(variable);\r\n    };\r\n    WithScope.prototype._hasJsIdentifier = function (identifier) {\r\n        return this._jsIdentifiers.containsKey(identifier) || this._parentScope._hasJsIdentifier(identifier);\r\n    };\r\n    return WithScope;\r\n})(AnglScope);\r\nexports.WithScope = WithScope;\r\nvar UnnamedIdentifier = (function () {\r\n    function UnnamedIdentifier(preferredName) {\r\n        this._preferredName = preferredName || null;\r\n    }\r\n    UnnamedIdentifier.prototype.getName = function () {\r\n        return this._assignedName || null;\r\n    };\r\n    UnnamedIdentifier.prototype.getJsExpression = function () {\r\n        return this.getName();\r\n    };\r\n    UnnamedIdentifier.prototype.getPreferredName = function () {\r\n        return this._preferredName;\r\n    };\r\n    UnnamedIdentifier.prototype._assignName = function (name) {\r\n        this._assignedName = name;\r\n    };\r\n    return UnnamedIdentifier;\r\n})();\r\nexports.UnnamedIdentifier = UnnamedIdentifier;\r\nvar IdentifierFromParentScope = (function () {\r\n    function IdentifierFromParentScope(scope, anglName) {\r\n        this._anglName = anglName;\r\n        var parentScope = scope.getParentScope();\r\n        this._unnamedIdentifier = parentScope.createUnnamedIdentifier(anglName, null);\r\n    }\r\n    IdentifierFromParentScope.prototype.getPreferredName = function () {\r\n        return this._anglName;\r\n    };\r\n    IdentifierFromParentScope.prototype.getJsExpression = function () {\r\n        if(!this._unnamedIdentifier.getName()) {\r\n            throw new Error('Attempted to access JavaScript accessor expression for IdentifierFromParentScope before' + 'parent scope has assigned it a name.');\r\n        }\r\n        return this._unnamedIdentifier.getJsExpression();\r\n    };\r\n    return IdentifierFromParentScope;\r\n})();\r\nexports.IdentifierFromParentScope = IdentifierFromParentScope;\r\n//@ sourceMappingURL=angl-scope.js.map\r\n\n});\n",
    "\ndefine('lib/scope-variable',['require','exports','module','lodash'],function (require, exports, module) {var _ = require('lodash');\r\nvar Variable = (function () {\r\n    function Variable(identifier, allocationType, accessType) {\r\n        if (typeof identifier === \"undefined\") { identifier = null; }\r\n        if (typeof allocationType === \"undefined\") { allocationType = 'LOCAL'; }\r\n        if (typeof accessType === \"undefined\") { accessType = 'BARE'; }\r\n        if(!_.contains(Variable.allocationTypes, allocationType)) {\r\n            throw new Error('Invalid Variable allocationType \"' + allocationType + '\"');\r\n        }\r\n        if(!_.contains(Variable.accessTypes, accessType)) {\r\n            throw new Error('Invalid Variable accessType\"' + accessType + '\"');\r\n        }\r\n        this._identifier = identifier;\r\n        this._jsIdentifier = identifier;\r\n        this._desiredJsIdentifier = null;\r\n        this._allocationType = allocationType;\r\n        this._accessType = accessType;\r\n        this._containingObjectIdentifier = null;\r\n    }\r\n    Variable.allocationTypes = [\r\n        'LOCAL', \r\n        'ARGUMENT', \r\n        'PROP_ASSIGNMENT', \r\n        'NONE'\r\n    ];\r\n    Variable.accessTypes = [\r\n        'BARE', \r\n        'PROP_ACCESS'\r\n    ];\r\n    Variable.prototype.awaitingJsIdentifierAssignment = function () {\r\n        return !this._jsIdentifier;\r\n    };\r\n    Variable.prototype.setDesiredJsIdentifier = function (desiredIdentifier) {\r\n        this._desiredJsIdentifier = desiredIdentifier;\r\n    };\r\n    Variable.prototype.getDesiredJsIdentifier = function () {\r\n        return this._desiredJsIdentifier;\r\n    };\r\n    Variable.prototype.setJsIdentifier = function (jsIdentifier) {\r\n        this._jsIdentifier = jsIdentifier;\r\n    };\r\n    Variable.prototype.getJsIdentifier = function () {\r\n        return this._jsIdentifier;\r\n    };\r\n    Variable.prototype.setIdentifier = function (identifier) {\r\n        this._identifier = identifier;\r\n    };\r\n    Variable.prototype.getIdentifier = function () {\r\n        return this._identifier;\r\n    };\r\n    Variable.prototype.getAllocationType = function () {\r\n        return this._allocationType;\r\n    };\r\n    Variable.prototype.getAccessType = function () {\r\n        return this._accessType;\r\n    };\r\n    Variable.prototype.setContainingObjectIdentifier = function (identifier) {\r\n        this._containingObjectIdentifier = identifier;\r\n    };\r\n    Variable.prototype.getContainingObjectIdentifier = function () {\r\n        return this._containingObjectIdentifier;\r\n    };\r\n    return Variable;\r\n})();\r\nexports.Variable = Variable;\r\nvar LinkedVariable = (function () {\r\n    function LinkedVariable(identifier, linkedToVariable) {\r\n        this._identifier = identifier;\r\n        this._linkedToVariable = linkedToVariable;\r\n    }\r\n    LinkedVariable.prototype.awaitingJsIdentifierAssignment = function () {\r\n        return false;\r\n    };\r\n    LinkedVariable.prototype.getJsIdentifier = function () {\r\n        return this._linkedToVariable.getJsIdentifier();\r\n    };\r\n    LinkedVariable.prototype.getIdentifier = function () {\r\n        return this._identifier;\r\n    };\r\n    LinkedVariable.prototype.getAllocationType = function () {\r\n        return 'NONE';\r\n    };\r\n    LinkedVariable.prototype.getAccessType = function () {\r\n        return this._linkedToVariable.getAccessType();\r\n    };\r\n    LinkedVariable.prototype.getContainingObjectIdentifier = function () {\r\n        return this._linkedToVariable.getContainingObjectIdentifier();\r\n    };\r\n    return LinkedVariable;\r\n})();\r\nexports.LinkedVariable = LinkedVariable;\r\n//@ sourceMappingURL=scope-variable.js.map\r\n\n});\n",
    "\ndefine('lib/strings',['require','exports','module'],function (require, exports, module) {exports.ANGL_GLOBALS_IDENTIFIER = '$AG';\r\nexports.ANGL_GLOBALS_MODULE = 'angl-globals-namespace';\r\nexports.ANGL_RUNTIME_IDENTIFIER = '$ART';\r\nexports.ANGL_RUNTIME_MODULE = 'angl-runtime';\r\nexports.ANGL_FILE_MODULE_PREFIX = 'compiled-angl/';\r\nexports.SUPER_OBJECT_NAME = 'AnglObject';\r\nexports.OBJECT_INITPROPERTIES_METHOD_NAME = '$initProperties';\r\n//@ sourceMappingURL=strings.js.map\r\n\n});\n",
    "\ndefine('runtime/angl-globals-namespace',['require','exports','module'],function (require, exports, module) {// This module creates the Angl globals namespace\r\n\r\nmodule.exports = {};\r\n\r\n// Well that was anticlimactic...\r\n\n});\n",
    "\ndefine('runtime/../../compiler/vendor/buckets',['require','exports','module'],function (require, exports, module) {// Copyright 2012 Mauricio Santos. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n//\r\n// Some documentation is borrowed from the official Java API\r\n// as it serves the same porpose.\r\n\r\n/**\r\n * @namespace Top level namespace for Buckets, a JavaScript data structure library.\r\n */\r\nvar buckets = {};\r\n\r\n/**\r\n * Default function to compare element order.\r\n * @function\r\n * @private\r\n */\r\nbuckets.defaultCompare = function(a, b) {\r\n    if (a < b) {\r\n        return - 1;\r\n    } else if (a === b) {\r\n        return 0;\r\n    } else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * Default function to test equality.\r\n * @function\r\n * @private\r\n */\r\nbuckets.defaultEquals = function(a, b) {\r\n    return a === b;\r\n};\r\n\r\n/**\r\n * Default function to convert an object to a string.\r\n * @function\r\n * @private\r\n */\r\nbuckets.defaultToString = function(item) {\r\n    if (item === null) {\r\n        return 'BUCKETS_NULL';\r\n    } else if (buckets.isUndefined(item)) {\r\n        return 'BUCKETS_UNDEFINED';\r\n    } else if (buckets.isString(item)) {\r\n        return item;\r\n    } else {\r\n        return item.toString();\r\n    }\r\n};\r\n\r\n/**\r\n * Checks if the given argument is a function.\r\n * @function\r\n * @private\r\n */\r\nbuckets.isFunction = function(func) {\r\n    return (typeof func) === 'function';\r\n};\r\n\r\n/**\r\n * Checks if the given argument is undefined.\r\n * @function\r\n * @private\r\n */\r\nbuckets.isUndefined = function(obj) {\r\n    return (typeof obj) === 'undefined';\r\n};\r\n\r\n/**\r\n * Checks if the given argument is a string.\r\n * @function\r\n * @private\r\n */\r\nbuckets.isString = function(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object String]';\r\n};\r\n\r\n/**\r\n * Reverses a compare function.\r\n * @function\r\n * @private\r\n */\r\nbuckets.reverseCompareFunction = function(compareFunction) {\r\n    if (!buckets.isFunction(compareFunction)) {\r\n        return function(a, b) {\r\n            if (a < b) {\r\n                return 1;\r\n            } else if (a === b) {\r\n                return 0;\r\n            } else {\r\n                return - 1;\r\n            }\r\n        };\r\n    } else {\r\n        return function(d, v) {\r\n            return compareFunction(d, v) * -1;\r\n        };\r\n    }\r\n};\r\n\r\n/**\r\n * Returns an equal function given a compare function.\r\n * @function\r\n * @private\r\n */\r\nbuckets.compareToEquals = function(compareFunction) {\r\n    return function(a, b) {\r\n        return compareFunction(a, b) === 0;\r\n    };\r\n};\r\n\r\n/**\r\n * @namespace Contains various functions for manipulating arrays.\r\n */\r\nbuckets.arrays = {};\r\n\r\n/**\r\n * Returns the position of the first occurrence of the specified item\r\n * within the specified array.\r\n * @param {*} array the array in which to search the element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between 2 elements.\r\n * @return {number} the position of the first occurrence of the specified element\r\n * within the specified array, or -1 if not found.\r\n */\r\nbuckets.arrays.indexOf = function(array, item, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n    var length = array.length;\r\n    for (var i = 0; i < length; i++) {\r\n        if (equals(array[i], item)) {\r\n            return i;\r\n        }\r\n    }\r\n    return - 1;\r\n};\r\n\r\n/**\r\n * Returns the position of the last occurrence of the specified element\r\n * within the specified array.\r\n * @param {*} array the array in which to search the element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between 2 elements.\r\n * @return {number} the position of the last occurrence of the specified element\r\n * within the specified array or -1 if not found.\r\n */\r\nbuckets.arrays.lastIndexOf = function(array, item, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n    var length = array.length;\r\n    for (var i = length - 1; i >= 0; i--) {\r\n        if (equals(array[i], item)) {\r\n            return i;\r\n        }\r\n    }\r\n    return - 1;\r\n};\r\n\r\n/**\r\n * Returns true if the specified array contains the specified element.\r\n * @param {*} array the array in which to search the element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function to \r\n * check equality between 2 elements.\r\n * @return {boolean} true if the specified array contains the specified element.\r\n */\r\nbuckets.arrays.contains = function(array, item, equalsFunction) {\r\n    return buckets.arrays.indexOf(array, item, equalsFunction) >= 0;\r\n};\r\n\r\n\r\n/**\r\n * Removes the first ocurrence of the specified element from the specified array.\r\n * @param {*} array the array in which to search element.\r\n * @param {Object} item the element to search.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function to \r\n * check equality between 2 elements.\r\n * @return {boolean} true if the array changed after this call.\r\n */\r\nbuckets.arrays.remove = function(array, item, equalsFunction) {\r\n    var index = buckets.arrays.indexOf(array, item, equalsFunction);\r\n    if (index < 0) {\r\n        return false;\r\n    }\r\n    array.splice(index, 1);\r\n    return true;\r\n};\r\n\r\n/**\r\n * Returns the number of elements in the specified array equal\r\n * to the specified object.\r\n * @param {Array} array the array in which to determine the frequency of the element.\r\n * @param {Object} item the element whose frequency is to be determined.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between 2 elements.\r\n * @return {number} the number of elements in the specified array \r\n * equal to the specified object.\r\n */\r\nbuckets.arrays.frequency = function(array, item, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n    var length = array.length;\r\n    var freq = 0;\r\n    for (var i = 0; i < length; i++) {\r\n        if (equals(array[i], item)) {\r\n            freq++;\r\n        }\r\n    }\r\n    return freq;\r\n};\r\n\r\n/**\r\n * Returns true if the two specified arrays are equal to one another.\r\n * Two arrays are considered equal if both arrays contain the same number\r\n * of elements, and all corresponding pairs of elements in the two \r\n * arrays are equal and are in the same order. \r\n * @param {Array} array1 one array to be tested for equality.\r\n * @param {Array} array2 the other array to be tested for equality.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to \r\n * check equality between elemements in the arrays.\r\n * @return {boolean} true if the two arrays are equal\r\n */\r\nbuckets.arrays.equals = function(array1, array2, equalsFunction) {\r\n    var equals = equalsFunction || buckets.defaultEquals;\r\n\r\n    if (array1.length !== array2.length) {\r\n        return false;\r\n    }\r\n    var length = array1.length;\r\n    for (var i = 0; i < length; i++) {\r\n        if (!equals(array1[i], array2[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Returns shallow a copy of the specified array.\r\n * @param {*} array the array to copy.\r\n * @return {Array} a copy of the specified array\r\n */\r\nbuckets.arrays.copy = function(array) {\r\n    return array.concat();\r\n};\r\n\r\n/**\r\n * Swaps the elements at the specified positions in the specified array.\r\n * @param {Array} array The array in which to swap elements.\r\n * @param {number} i the index of one element to be swapped.\r\n * @param {number} j the index of the other element to be swapped.\r\n * @return {boolean} true if the array is defined and the indexes are valid.\r\n */\r\nbuckets.arrays.swap = function(array, i, j) {\r\n    if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\r\n        return false;\r\n    }\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this array \r\n * starting from index 0 to length - 1.\r\n * @param {Array} array The array in which to iterate.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.arrays.forEach = function(array, callback) {\r\n   var lenght = array.length;\r\n   for (var i=0; i < lenght; i++) {\r\n   \t\tif(callback(array[i])===false){\r\n\t\t\treturn;\r\n\t\t}\r\n   }\t \r\n};\r\n\r\n/**\r\n * Creates an empty Linked List.\r\n * @class A linked list is a data structure consisting of a group of nodes\r\n * which together represent a sequence.\r\n * @constructor\r\n */\r\nbuckets.LinkedList = function() {\r\n\r\n    /**\r\n     * First node in the list\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    this.firstNode = null;\r\n\r\n    /**\r\n     * Last node in the list\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    this.lastNode = null;\r\n\r\n    /**\r\n     * Number of elements in the list\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.nElements = 0;\r\n};\r\n\r\n\r\n/**\r\n * Adds an element to this list.\r\n * @param {Object} item element to be added.\r\n * @param {number=} index optional index to add the element. If no index is specified\r\n * the element is added to the end of this list.\r\n * @return {boolean} true if the element was added or false if the index is invalid\r\n * or if the element is undefined.\r\n */\r\nbuckets.LinkedList.prototype.add = function(item, index) {\r\n\r\n    if (buckets.isUndefined(index)) {\r\n        index = this.nElements;\r\n    }\r\n    if (index < 0 || index > this.nElements || buckets.isUndefined(item)) {\r\n        return false;\r\n    }\r\n    var newNode = this.createNode(item);\r\n    if (this.nElements === 0) {\r\n        // First node in the list.\r\n        this.firstNode = newNode;\r\n        this.lastNode = newNode;\r\n    } else if (index === this.nElements) {\r\n        // Insert at the end.\r\n        this.lastNode.next = newNode;\r\n        this.lastNode = newNode;\r\n    } else if (index === 0) {\r\n        // Change first node.\r\n        newNode.next = this.firstNode;\r\n        this.firstNode = newNode;\r\n    } else {\r\n        var prev = this.nodeAtIndex(index - 1);\r\n        newNode.next = prev.next;\r\n        prev.next = newNode;\r\n    }\r\n    this.nElements++;\r\n    return true;\r\n};\r\n\r\n\r\n/**\r\n * Returns the first element in this list.\r\n * @return {*} the first element of the list or undefined if the list is\r\n * empty.\r\n */\r\nbuckets.LinkedList.prototype.first = function() {\r\n\r\n    if (this.firstNode !== null) {\r\n        return this.firstNode.element;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Returns the last element in this list.\r\n * @return {*} the last element in the list or undefined if the list is\r\n * empty.\r\n */\r\nbuckets.LinkedList.prototype.last = function() {\r\n\r\n    if (this.lastNode !== null) {\r\n        return this.lastNode.element;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n\r\n/**\r\n * Returns the element at the specified position in this list.\r\n * @param {number} index desired index.\r\n * @return {*} the element at the given index or undefined if the index is\r\n * out of bounds.\r\n */\r\nbuckets.LinkedList.prototype.elementAtIndex = function(index) {\r\n\r\n    var node = this.nodeAtIndex(index);\r\n    if (node === null) {\r\n        return undefined;\r\n    }\r\n    return node.element;\r\n};\r\n\r\n/**\r\n * Returns the index in this list of the first occurrence of the\r\n * specified element, or -1 if the List does not contain this element.\r\n * <p>If the elements inside this list are\r\n * not comparable with the === operator a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} item element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n * function used to check if two elements are equal.\r\n * @return {number} the index in this list of the first occurrence\r\n * of the specified element, or -1 if this list does not contain the\r\n * element.\r\n */\r\nbuckets.LinkedList.prototype.indexOf = function(item, equalsFunction) {\r\n\r\n    var equalsF = equalsFunction || buckets.defaultEquals;\r\n    if (buckets.isUndefined(item)) {\r\n        return - 1;\r\n    }\r\n    var currentNode = this.firstNode;\r\n    var index = 0;\r\n    while (currentNode !== null) {\r\n        if (equalsF(currentNode.element, item)) {\r\n            return index;\r\n        }\r\n        index++;\r\n        currentNode = currentNode.next;\r\n    }\r\n    return - 1;\r\n};\r\n\r\n/**\r\n * Returns true if this list contains the specified element.\r\n * <p>If the elements inside the list are\r\n * not comparable with the === operator a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} item element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction Optional\r\n * function used to check if two elements are equal.\r\n * @return {boolean} true if this list contains the specified element, false\r\n * otherwise.\r\n */\r\nbuckets.LinkedList.prototype.contains = function(item, equalsFunction) {\r\n    return (this.indexOf(item, equalsFunction) >= 0);\r\n};\r\n\r\n/**\r\n * Removes the first occurrence of the specified element in this list.\r\n * <p>If the elements inside the list are\r\n * not comparable with the === operator a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} item element to be removed from this list, if present.\r\n * @return {boolean} true if the list contained the specified element.\r\n */\r\nbuckets.LinkedList.prototype.remove = function(item, equalsFunction) {\r\n    var equalsF = equalsFunction || buckets.defaultEquals;\r\n    if (this.nElements < 1 || buckets.isUndefined(item)) {\r\n        return false;\r\n    }\r\n    var previous = null;\r\n    var currentNode = this.firstNode;\r\n    while (currentNode !== null) {\r\n\r\n        if (equalsF(currentNode.element, item)) {\r\n\r\n            if (currentNode === this.firstNode) {\r\n                this.firstNode = this.firstNode.next;\r\n                if (currentNode === this.lastNode) {\r\n                    this.lastNode = null;\r\n                }\r\n            } else if (currentNode === this.lastNode) {\r\n                this.lastNode = previous;\r\n                previous.next = currentNode.next;\r\n                currentNode.next = null;\r\n            } else {\r\n                previous.next = currentNode.next;\r\n                currentNode.next = null;\r\n            }\r\n            this.nElements--;\r\n            return true;\r\n        }\r\n        previous = currentNode;\r\n        currentNode = currentNode.next;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this list.\r\n */\r\nbuckets.LinkedList.prototype.clear = function() {\r\n    this.firstNode = null;\r\n    this.lastNode = null;\r\n    this.nElements = 0;\r\n};\r\n\r\n/**\r\n * Returns true if this list is equal to the given list.\r\n * Two lists are equal if they have the same elements in the same order.\r\n * @param {buckets.LinkedList} other the other list.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional\r\n * function used to check if two elements are equal. If the elements in the lists\r\n * are custom objects you should provide a function, otherwise \r\n * the === operator is used to check equality between elements.\r\n * @return {boolean} true if this list is equal to the given list.\r\n */\r\nbuckets.LinkedList.prototype.equals = function(other, equalsFunction) {\r\n    var eqF = equalsFunction || buckets.defaultEquals;\r\n    if (! (other instanceof buckets.LinkedList)) {\r\n        return false;\r\n    }\r\n    if (this.size() !== other.size()) {\r\n        return false;\r\n    }\r\n    return this.equalsAux(this.firstNode, other.firstNode, eqF);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nbuckets.LinkedList.prototype.equalsAux = function(n1, n2, eqF) {\r\n    while (n1 !== null) {\r\n        if (!eqF(n1.element, n2.element)) {\r\n            return false;\r\n        }\r\n        n1 = n1.next;\r\n        n2 = n2.next;\r\n    }\r\n    return true;\r\n};\r\n\r\n/**\r\n * Removes the element at the specified position in this list.\r\n * @param {number} index given index.\r\n * @return {*} removed element or undefined if the index is out of bounds.\r\n */\r\nbuckets.LinkedList.prototype.removeElementAtIndex = function(index) {\r\n\r\n    if (index < 0 || index >= this.nElements) {\r\n        return undefined;\r\n    }\r\n    var element;\r\n    if (this.nElements === 1) {\r\n        //First node in the list.\r\n        element = this.firstNode.element;\r\n        this.firstNode = null;\r\n        this.lastNode = null;\r\n    } else {\r\n        var previous = this.nodeAtIndex(index - 1);\r\n        if (previous === null) {\r\n            element = this.firstNode.element;\r\n            this.firstNode = this.firstNode.next;\r\n        } else if (previous.next === this.lastNode) {\r\n            element = this.lastNode.element;\r\n            this.lastNode = previous;\r\n        }\r\n        if (previous !== null) {\r\n            element = previous.next.element;\r\n            previous.next = previous.next.next;\r\n        }\r\n    }\r\n    this.nElements--;\r\n    return element;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this list in order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.LinkedList.prototype.forEach = function(callback) {\r\n    var currentNode = this.firstNode;\r\n    while (currentNode !== null) {\r\n        if (callback(currentNode.element) === false) {\r\n            break;\r\n        }\r\n        currentNode = currentNode.next;\r\n    }\r\n};\r\n\r\n/**\r\n * Reverses the order of the elements in this linked list (makes the last \r\n * element first, and the first element last).\r\n */\r\nbuckets.LinkedList.prototype.reverse = function() {\r\n    var previous = null;\r\n    var current = this.firstNode;\r\n    var temp = null;\r\n    while (current !== null) {\r\n        temp = current.next;\r\n        current.next = previous;\r\n        previous = current;\r\n        current = temp;\r\n    }\r\n    temp = this.firstNode;\r\n    this.firstNode = this.lastNode;\r\n    this.lastNode = temp;\r\n};\r\n\r\n\r\n/**\r\n * Returns an array containing all of the elements in this list in proper\r\n * sequence.\r\n * @return {Array.<*>} an array containing all of the elements in this list,\r\n * in proper sequence.\r\n */\r\nbuckets.LinkedList.prototype.toArray = function() {\r\n    var array = [];\r\n    var currentNode = this.firstNode;\r\n    while (currentNode !== null) {\r\n        array.push(currentNode.element);\r\n        currentNode = currentNode.next;\r\n    }\r\n    return array;\r\n};\r\n/**\r\n * Returns the number of elements in this list.\r\n * @return {number} the number of elements in this list.\r\n */\r\nbuckets.LinkedList.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this list contains no elements.\r\n * @return {boolean} true if this list contains no elements.\r\n */\r\nbuckets.LinkedList.prototype.isEmpty = function() {\r\n    return this.nElements <= 0;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nbuckets.LinkedList.prototype.nodeAtIndex = function(index) {\r\n\r\n    if (index < 0 || index >= this.nElements) {\r\n        return null;\r\n    }\r\n    if (index === (this.nElements - 1)) {\r\n        return this.lastNode;\r\n    }\r\n    var node = this.firstNode;\r\n    for (var i = 0; i < index; i++) {\r\n        node = node.next;\r\n    }\r\n    return node;\r\n};\r\n/**\r\n * @private\r\n */\r\nbuckets.LinkedList.prototype.createNode = function(item) {\r\n    return {\r\n        element: item,\r\n        next: null\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * Creates an empty dictionary. \r\n * @class <p>Dictionaries map keys to values; each key can map to at most one value.\r\n * This implementation accepts any kind of objects as keys.</p>\r\n *\r\n * <p>If the keys are custom objects a function which converts keys to unique\r\n * strings must be provided. Example:</p>\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object):string=} toStrFunction optional function used\r\n * to convert keys to strings. If the keys aren't strings or if toString()\r\n * is not appropriate, a custom function which receives a key and returns a\r\n * unique string must be provided.\r\n */\r\nbuckets.Dictionary = function(toStrFunction) {\r\n\r\n    /**\r\n     * Object holding the key-value pairs.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    this.table = {};\r\n\r\n    /**\r\n     * Number of elements in the list.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.nElements = 0;\r\n\r\n    /**\r\n     * Function used to convert keys to strings.\r\n     * @type {function(Object):string}\r\n     * @private\r\n     */\r\n    this.toStr = toStrFunction || buckets.defaultToString;\r\n};\r\n\r\n/**\r\n * Returns the value to which this dictionary maps the specified key.\r\n * Returns undefined if this dictionary contains no mapping for this key.\r\n * @param {Object} key key whose associated value is to be returned.\r\n * @return {*} the value to which this dictionary maps the specified key or\r\n * undefined if the map contains no mapping for this key.\r\n */\r\nbuckets.Dictionary.prototype.get = function(key) {\r\n\r\n    var pair = this.table[this.toStr(key)];\r\n    if (buckets.isUndefined(pair)) {\r\n        return undefined;\r\n    }\r\n    return pair.value;\r\n};\r\n/**\r\n * Associates the specified value with the specified key in this dictionary.\r\n * If the dictionary previously contained a mapping for this key, the old\r\n * value is replaced by the specified value.\r\n * @param {Object} key key with which the specified value is to be\r\n * associated.\r\n * @param {Object} value value to be associated with the specified key.\r\n * @return {*} previous value associated with the specified key, or undefined if\r\n * there was no mapping for the key or if the key/value are undefined.\r\n */\r\nbuckets.Dictionary.prototype.set = function(key, value) {\r\n\r\n    if (buckets.isUndefined(key) || buckets.isUndefined(value)) {\r\n        return undefined;\r\n    }\r\n\r\n    var ret;\r\n    var k = this.toStr(key);\r\n    var previousElement = this.table[k];\r\n    if (buckets.isUndefined(previousElement)) {\r\n        this.nElements++;\r\n        ret = undefined;\r\n    } else {\r\n        ret = previousElement.value;\r\n    }\r\n    this.table[k] = {\r\n        key: key,\r\n        value: value\r\n    };\r\n    return ret;\r\n};\r\n/**\r\n * Removes the mapping for this key from this dictionary if it is present.\r\n * @param {Object} key key whose mapping is to be removed from the\r\n * dictionary.\r\n * @return {*} previous value associated with specified key, or undefined if\r\n * there was no mapping for key.\r\n */\r\nbuckets.Dictionary.prototype.remove = function(key) {\r\n    var k = this.toStr(key);\r\n    var previousElement = this.table[k];\r\n    if (!buckets.isUndefined(previousElement)) {\r\n        delete this.table[k];\r\n        this.nElements--;\r\n        return previousElement.value;\r\n    }\r\n    return undefined;\r\n};\r\n/**\r\n * Returns an array containing all of the keys in this dictionary.\r\n * @return {Array} an array containing all of the keys in this dictionary.\r\n */\r\nbuckets.Dictionary.prototype.keys = function() {\r\n    var array = [];\r\n    for (var name in this.table) {\r\n        if (this.table.hasOwnProperty(name)) {\r\n            array.push(this.table[name].key);\r\n        }\r\n    }\r\n    return array;\r\n};\r\n/**\r\n * Returns an array containing all of the values in this dictionary.\r\n * @return {Array} an array containing all of the values in this dictionary.\r\n */\r\nbuckets.Dictionary.prototype.values = function() {\r\n    var array = [];\r\n    for (var name in this.table) {\r\n        if (this.table.hasOwnProperty(name)) {\r\n            array.push(this.table[name].value);\r\n        }\r\n    }\r\n    return array;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each key-value pair \r\n * present in this dictionary.\r\n * @param {function(Object,Object):*} callback function to execute, it is\r\n * invoked with two arguments: key and value. To break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Dictionary.prototype.forEach = function(callback) {\r\n    for (var name in this.table) {\r\n        if (this.table.hasOwnProperty(name)) {\r\n            var pair = this.table[name];\r\n            var ret = callback(pair.key, pair.value);\r\n            if (ret === false) {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary contains a mapping for the specified key.\r\n * @param {Object} key key whose presence in this dictionary is to be\r\n * tested.\r\n * @return {boolean} true if this dictionary contains a mapping for the\r\n * specified key.\r\n */\r\nbuckets.Dictionary.prototype.containsKey = function(key) {\r\n    return ! buckets.isUndefined(this.get(key));\r\n};\r\n/**\r\n * Removes all mappings from this dictionary.\r\n * @this {buckets.Dictionary}\r\n */\r\nbuckets.Dictionary.prototype.clear = function() {\r\n\r\n    this.table = {};\r\n    this.nElements = 0;\r\n};\r\n/**\r\n * Returns the number of keys in this dictionary.\r\n * @return {number} the number of key-value mappings in this dictionary.\r\n */\r\nbuckets.Dictionary.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary contains no mappings.\r\n * @return {boolean} true if this dictionary contains no mappings.\r\n */\r\nbuckets.Dictionary.prototype.isEmpty = function() {\r\n    return this.nElements <= 0;\r\n};\r\n\r\n// /**\r\n//  * Returns true if this dictionary is equal to the given dictionary.\r\n//  * Two dictionaries are equal if they contain the same mappings.\r\n//  * @param {buckets.Dictionary} other the other dictionary.\r\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\r\n//  * function used to check if two values are equal.\r\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\r\n//  */\r\n// buckets.Dictionary.prototype.equals = function(other,valuesEqualFunction) {\r\n// \tvar eqF = valuesEqualFunction || buckets.defaultEquals;\r\n// \tif(!(other instanceof buckets.Dictionary)){\r\n// \t\treturn false;\r\n// \t}\r\n// \tif(this.size() !== other.size()){\r\n// \t\treturn false;\r\n// \t}\r\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\r\n// };\r\n/**\r\n * Creates an empty multi dictionary. \r\n * @class <p>A multi dictionary is a special kind of dictionary that holds\r\n * multiple values against each key. Setting a value into the dictionary will \r\n * add the value to an array at that key. Getting a key will return an array,\r\n * holding all the values set to that key.\r\n * This implementation accepts any kind of objects as keys.</p>\r\n *\r\n * <p>If the keys are custom objects a function which converts keys to strings must be\r\n * provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n * <p>If the values are custom objects a function to check equality between values\r\n * must be provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petsAreEqualByAge(pet1,pet2) {\r\n *  return pet1.age===pet2.age;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object):string=} toStrFunction optional function\r\n * to convert keys to strings. If the keys aren't strings or if toString()\r\n * is not appropriate, a custom function which receives a key and returns a\r\n * unique string must be provided.\r\n * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\r\n * function to check if two values are equal.\r\n * \r\n */\r\nbuckets.MultiDictionary = function(toStrFunction, valuesEqualsFunction) {\r\n    // Call the parent's constructor\r\n    this.parent = new buckets.Dictionary(toStrFunction);\r\n    this.equalsF = valuesEqualsFunction || buckets.defaultEquals;\r\n};\r\n\r\n/**\r\n * Returns an array holding the values to which this dictionary maps\r\n * the specified key.\r\n * Returns an empty array if this dictionary contains no mappings for this key.\r\n * @param {Object} key key whose associated values are to be returned.\r\n * @return {Array} an array holding the values to which this dictionary maps\r\n * the specified key.\r\n */\r\nbuckets.MultiDictionary.prototype.get = function(key) {\r\n    var values = this.parent.get(key);\r\n    if (buckets.isUndefined(values)) {\r\n        return [];\r\n    }\r\n    return buckets.arrays.copy(values);\r\n};\r\n\r\n/**\r\n * Adds the value to the array associated with the specified key, if \r\n * it is not already present.\r\n * @param {Object} key key with which the specified value is to be\r\n * associated.\r\n * @param {Object} value the value to add to the array at the key\r\n * @return {boolean} true if the value was not already associated with that key.\r\n */\r\nbuckets.MultiDictionary.prototype.set = function(key, value) {\r\n\r\n    if (buckets.isUndefined(key) || buckets.isUndefined(value)) {\r\n        return false;\r\n    }\r\n    if (!this.containsKey(key)) {\r\n        this.parent.set(key, [value]);\r\n        return true;\r\n    }\r\n    var array = this.parent.get(key);\r\n    if (buckets.arrays.contains(array, value, this.equalsF)) {\r\n        return false;\r\n    }\r\n    array.push(value);\r\n    return true;\r\n};\r\n\r\n/**\r\n * Removes the specified values from the array of values associated with the\r\n * specified key. If a value isn't given, all values associated with the specified \r\n * key are removed.\r\n * @param {Object} key key whose mapping is to be removed from the\r\n * dictionary.\r\n * @param {Object=} value optional argument to specify the value to remove \r\n * from the array associated with the specified key.\r\n * @return {*} true if the dictionary changed, false if the key doesn't exist or \r\n * if the specified value isn't associated with the specified key.\r\n */\r\nbuckets.MultiDictionary.prototype.remove = function(key, value) {\r\n    if (buckets.isUndefined(value)) {\r\n        var v = this.parent.remove(key);\r\n        if (buckets.isUndefined(v)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    var array = this.parent.get(key);\r\n    if (buckets.arrays.remove(array, value, this.equalsF)) {\r\n        if (array.length === 0) {\r\n            this.parent.remove(key);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the keys in this dictionary.\r\n * @return {Array} an array containing all of the keys in this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.keys = function() {\r\n    return this.parent.keys();\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the values in this dictionary.\r\n * @return {Array} an array containing all of the values in this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.values = function() {\r\n    var values = this.parent.values();\r\n    var array = [];\r\n    for (var i = 0; i < values.length; i++) {\r\n        var v = values[i];\r\n        for (var j = 0; j < v.length; j++) {\r\n            array.push(v[j]);\r\n        }\r\n    }\r\n    return array;\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary at least one value associatted the specified key.\r\n * @param {Object} key key whose presence in this dictionary is to be\r\n * tested.\r\n * @return {boolean} true if this dictionary at least one value associatted \r\n * the specified key.\r\n */\r\nbuckets.MultiDictionary.prototype.containsKey = function(key) {\r\n    return this.parent.containsKey(key);\r\n};\r\n\r\n/**\r\n * Removes all mappings from this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.clear = function() {\r\n    return this.parent.clear();\r\n};\r\n\r\n/**\r\n * Returns the number of keys in this dictionary.\r\n * @return {number} the number of key-value mappings in this dictionary.\r\n */\r\nbuckets.MultiDictionary.prototype.size = function() {\r\n    return this.parent.size();\r\n};\r\n\r\n/**\r\n * Returns true if this dictionary contains no mappings.\r\n * @return {boolean} true if this dictionary contains no mappings.\r\n */\r\nbuckets.MultiDictionary.prototype.isEmpty = function() {\r\n    return this.parent.isEmpty();\r\n};\r\n\r\n/**\r\n * Creates an empty Heap.\r\n * @class \r\n * <p>A heap is a binary tree, where the nodes maintain the heap property: \r\n * each node is smaller than each of its children. \r\n * This implementation uses an array to store elements.</p>\r\n * <p>If the inserted elements are custom objects a compare function must be provided, \r\n *  at construction time, otherwise the <=, === and >= operators are \r\n * used to compare elements. Example:</p>\r\n *\r\n * <pre>\r\n * function compare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return -1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return 1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n *\r\n * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\r\n * reverse compare function to accomplish that behavior. Example:</p>\r\n *\r\n * <pre>\r\n * function reverseCompare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return 1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return -1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n *\r\n * @constructor\r\n * @param {function(Object,Object):number=} compareFunction optional\r\n * function used to compare two elements. Must return a negative integer,\r\n * zero, or a positive integer as the first argument is less than, equal to,\r\n * or greater than the second.\r\n */\r\nbuckets.Heap = function(compareFunction) {\r\n\r\n    /**\r\n     * Array used to store the elements od the heap.\r\n     * @type {Array.<Object>}\r\n     * @private\r\n     */\r\n    this.data = [];\r\n\r\n    /**\r\n     * Function used to compare elements.\r\n     * @type {function(Object,Object):number}\r\n     * @private\r\n     */\r\n    this.compare = compareFunction || buckets.defaultCompare;\r\n};\r\n/**\r\n * Returns the index of the left child of the node at the given index.\r\n * @param {number} nodeIndex The index of the node to get the left child\r\n * for.\r\n * @return {number} The index of the left child.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.leftChildIndex = function(nodeIndex) {\r\n    return (2 * nodeIndex) + 1;\r\n};\r\n/**\r\n * Returns the index of the right child of the node at the given index.\r\n * @param {number} nodeIndex The index of the node to get the right child\r\n * for.\r\n * @return {number} The index of the right child.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.rightChildIndex = function(nodeIndex) {\r\n    return (2 * nodeIndex) + 2;\r\n};\r\n/**\r\n * Returns the index of the parent of the node at the given index.\r\n * @param {number} nodeIndex The index of the node to get the parent for.\r\n * @return {number} The index of the parent.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.parentIndex = function(nodeIndex) {\r\n    return Math.floor((nodeIndex - 1) / 2);\r\n};\r\n/**\r\n * Returns the index of the smaller child node (if it exists).\r\n * @param {number} leftChild left child index.\r\n * @param {number} rightChild right child index.\r\n * @return {number} the index with the minimum value or -1 if it doesn't\r\n * exists.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.minIndex = function(leftChild, rightChild) {\r\n\r\n    if (rightChild >= this.data.length) {\r\n        if (leftChild >= this.data.length) {\r\n            return - 1;\r\n        } else {\r\n            return leftChild;\r\n        }\r\n    } else {\r\n        if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\r\n            return leftChild;\r\n        } else {\r\n            return rightChild;\r\n        }\r\n    }\r\n};\r\n/**\r\n * Moves the node at the given index up to its proper place in the heap.\r\n * @param {number} index The index of the node to move up.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.siftUp = function(index) {\r\n\r\n    var parent = this.parentIndex(index);\r\n    while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\r\n        buckets.arrays.swap(this.data, parent, index);\r\n        index = parent;\r\n        parent = this.parentIndex(index);\r\n    }\r\n};\r\n/**\r\n * Moves the node at the given index down to its proper place in the heap.\r\n * @param {number} nodeIndex The index of the node to move down.\r\n * @private\r\n */\r\nbuckets.Heap.prototype.siftDown = function(nodeIndex) {\r\n\r\n    //smaller child index\r\n    var min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n    this.rightChildIndex(nodeIndex));\r\n\r\n    while (min >= 0 && this.compare(this.data[nodeIndex],\r\n    this.data[min]) > 0) {\r\n        buckets.arrays.swap(this.data, min, nodeIndex);\r\n        nodeIndex = min;\r\n        min = this.minIndex(this.leftChildIndex(nodeIndex),\r\n        this.rightChildIndex(nodeIndex));\r\n    }\r\n};\r\n/**\r\n * Retrieves but does not remove the root element of this heap.\r\n * @return {*} The value at the root of the heap. Returns undefined if the\r\n * heap is empty.\r\n */\r\nbuckets.Heap.prototype.peek = function() {\r\n\r\n    if (this.data.length > 0) {\r\n        return this.data[0];\r\n    } else {\r\n        return undefined;\r\n    }\r\n};\r\n/**\r\n * Adds the given element into the heap.\r\n * @param {*} element the element.\r\n * @return true if the element was added or fals if it is undefined.\r\n */\r\nbuckets.Heap.prototype.add = function(element) {\r\n    if (buckets.isUndefined(element)) {\r\n        return undefined;\r\n    }\r\n    this.data.push(element);\r\n    this.siftUp(this.data.length - 1);\r\n    return true;\r\n};\r\n\r\n/**\r\n * Retrieves and removes the root element of this heap.\r\n * @return {*} The value removed from the root of the heap. Returns\r\n * undefined if the heap is empty.\r\n */\r\nbuckets.Heap.prototype.removeRoot = function() {\r\n\r\n    if (this.data.length > 0) {\r\n        var obj = this.data[0];\r\n        this.data[0] = this.data[this.data.length - 1];\r\n        this.data.splice(this.data.length - 1, 1);\r\n        if (this.data.length > 0) {\r\n            this.siftDown(0);\r\n        }\r\n        return obj;\r\n    }\r\n    return undefined;\r\n};\r\n/**\r\n * Returns true if this heap contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this Heap contains the specified element, false\r\n * otherwise.\r\n */\r\nbuckets.Heap.prototype.contains = function(element) {\r\n    var equF = buckets.compareToEquals(this.compare);\r\n    return buckets.arrays.contains(this.data, element, equF);\r\n};\r\n/**\r\n * Returns the number of elements in this heap.\r\n * @return {number} the number of elements in this heap.\r\n */\r\nbuckets.Heap.prototype.size = function() {\r\n    return this.data.length;\r\n};\r\n/**\r\n * Checks if this heap is empty.\r\n * @return {boolean} true if and only if this heap contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.Heap.prototype.isEmpty = function() {\r\n    return this.data.length <= 0;\r\n};\r\n/**\r\n * Removes all of the elements from this heap.\r\n */\r\nbuckets.Heap.prototype.clear = function() {\r\n    this.data.length = 0;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this heap in \r\n * no particular order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Heap.prototype.forEach = function(callback) {\r\n   buckets.arrays.forEach(this.data,callback);\r\n};\r\n\r\n/**\r\n * Creates an empty Stack.\r\n * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\r\n * element added to the stack will be the first one to be removed. This\r\n * implementation uses a linked list as a container.\r\n * @constructor\r\n */\r\nbuckets.Stack = function() {\r\n\r\n    /**\r\n     * List containing the elements.\r\n     * @type buckets.LinkedList\r\n     * @private\r\n     */\r\n    this.list = new buckets.LinkedList();\r\n};\r\n/**\r\n * Pushes an item onto the top of this stack.\r\n * @param {Object} elem the element to be pushed onto this stack.\r\n * @return {boolean} true if the element was pushed or false if it is undefined.\r\n */\r\nbuckets.Stack.prototype.push = function(elem) {\r\n    return this.list.add(elem, 0);\r\n};\r\n/**\r\n * Pushes an item onto the top of this stack.\r\n * @param {Object} elem the element to be pushed onto this stack.\r\n * @return {boolean} true if the element was pushed or false if it is undefined.\r\n */\r\nbuckets.Stack.prototype.add = function(elem) {\r\n    return this.list.add(elem, 0);\r\n};\r\n/**\r\n * Removes the object at the top of this stack and returns that object.\r\n * @return {*} the object at the top of this stack or undefined if the\r\n * stack is empty.\r\n */\r\nbuckets.Stack.prototype.pop = function() {\r\n    return this.list.removeElementAtIndex(0);\r\n};\r\n/**\r\n * Looks at the object at the top of this stack without removing it from the\r\n * stack.\r\n * @return {*} the object at the top of this stack or undefined if the\r\n * stack is empty.\r\n */\r\nbuckets.Stack.prototype.peek = function() {\r\n    return this.list.first();\r\n};\r\n/**\r\n * Returns the number of elements in this stack.\r\n * @return {number} the number of elements in this stack.\r\n */\r\nbuckets.Stack.prototype.size = function() {\r\n    return this.list.size();\r\n};\r\n\r\n/**\r\n * Returns true if this stack contains the specified element.\r\n * <p>If the elements inside this stack are\r\n * not comparable with the === operator, a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} elem element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional\r\n * function to check if two elements are equal.\r\n * @return {boolean} true if this stack contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Stack.prototype.contains = function(elem, equalsFunction) {\r\n    return this.list.contains(elem, equalsFunction);\r\n};\r\n/**\r\n * Checks if this stack is empty.\r\n * @return {boolean} true if and only if this stack contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.Stack.prototype.isEmpty = function() {\r\n    return this.list.isEmpty();\r\n};\r\n/**\r\n * Removes all of the elements from this stack.\r\n */\r\nbuckets.Stack.prototype.clear = function() {\r\n    this.list.clear();\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this stack in \r\n * LIFO order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Stack.prototype.forEach = function(callback) {\r\n   this.list.forEach(callback);\r\n};\r\n\r\n/**\r\n * Creates an empty queue.\r\n * @class A queue is a First-In-First-Out (FIFO) data structure, the first\r\n * element added to the queue will be the first one to be removed. This\r\n * implementation uses a linked list as a container.\r\n * @constructor\r\n */\r\nbuckets.Queue = function() {\r\n\r\n    /**\r\n     * List containing the elements.\r\n     * @type buckets.LinkedList\r\n     * @private\r\n     */\r\n    this.list = new buckets.LinkedList();\r\n};\r\n/**\r\n * Inserts the specified element into the end of this queue.\r\n * @param {Object} elem the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.Queue.prototype.enqueue = function(elem) {\r\n    return this.list.add(elem);\r\n};\r\n/**\r\n * Inserts the specified element into the end of this queue.\r\n * @param {Object} elem the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.Queue.prototype.add = function(elem) {\r\n    return this.list.add(elem);\r\n};\r\n/**\r\n * Retrieves and removes the head of this queue.\r\n * @return {*} the head of this queue, or undefined if this queue is empty.\r\n */\r\nbuckets.Queue.prototype.dequeue = function() {\r\n    if (this.list.size() !== 0) {\r\n        var el = this.list.first();\r\n        this.list.removeElementAtIndex(0);\r\n        return el;\r\n    }\r\n    return undefined;\r\n};\r\n/**\r\n * Retrieves, but does not remove, the head of this queue.\r\n * @return {*} the head of this queue, or undefined if this queue is empty.\r\n */\r\nbuckets.Queue.prototype.peek = function() {\r\n\r\n    if (this.list.size() !== 0) {\r\n        return this.list.first();\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this queue.\r\n * @return {number} the number of elements in this queue.\r\n */\r\nbuckets.Queue.prototype.size = function() {\r\n    return this.list.size();\r\n};\r\n\r\n/**\r\n * Returns true if this queue contains the specified element.\r\n * <p>If the elements inside this stack are\r\n * not comparable with the === operator, a custom equals function should be\r\n * provided to perform searches, the function must receive two arguments and\r\n * return true if they are equal, false otherwise. Example:</p>\r\n *\r\n * <pre>\r\n * var petsAreEqualByName = function(pet1, pet2) {\r\n *  return pet1.name === pet2.name;\r\n * }\r\n * </pre>\r\n * @param {Object} elem element to search for.\r\n * @param {function(Object,Object):boolean=} equalsFunction optional\r\n * function to check if two elements are equal.\r\n * @return {boolean} true if this queue contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Queue.prototype.contains = function(elem, equalsFunction) {\r\n    return this.list.contains(elem, equalsFunction);\r\n};\r\n\r\n/**\r\n * Checks if this queue is empty.\r\n * @return {boolean} true if and only if this queue contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.Queue.prototype.isEmpty = function() {\r\n    return this.list.size() <= 0;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this queue.\r\n */\r\nbuckets.Queue.prototype.clear = function() {\r\n    this.list.clear();\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this queue in \r\n * FIFO order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Queue.prototype.forEach = function(callback) {\r\n   this.list.forEach(callback);\r\n};\r\n\r\n/**\r\n * Creates an empty priority queue.\r\n * @class <p>In a priority queue each element is associated with a \"priority\",\r\n * elements are dequeued in highest-priority-first order (the elements with the \r\n * highest priority are dequeued first). Priority Queues are implemented as heaps. \r\n * If the inserted elements are custom objects a compare function must be provided, \r\n * otherwise the <=, === and >= operators are used to compare object priority.</p>\r\n * <pre>\r\n * function compare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return -1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return 1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object,Object):number=} compareFunction optional\r\n * function used to compare two element priorities. Must return a negative integer,\r\n * zero, or a positive integer as the first argument is less than, equal to,\r\n * or greater than the second.\r\n */\r\nbuckets.PriorityQueue = function(compareFunction) {\r\n    this.heap = new buckets.Heap(buckets.reverseCompareFunction(compareFunction));\r\n};\r\n\r\n/**\r\n * Inserts the specified element into this priority queue.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.PriorityQueue.prototype.enqueue = function(element) {\r\n    return this.heap.add(element);\r\n};\r\n\r\n/**\r\n * Inserts the specified element into this priority queue.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if the element was inserted, or false if it is undefined.\r\n */\r\nbuckets.PriorityQueue.prototype.add = function(element) {\r\n    return this.heap.add(element);\r\n};\r\n\r\n/**\r\n * Retrieves and removes the highest priority element of this queue.\r\n * @return {*} the the highest priority element of this queue, \r\nor undefined if this queue is empty.\r\n */\r\nbuckets.PriorityQueue.prototype.dequeue = function() {\r\n    if (this.heap.size() !== 0) {\r\n        var el = this.heap.peek();\r\n        this.heap.removeRoot();\r\n        return el;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Retrieves, but does not remove, the highest priority element of this queue.\r\n * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\r\n */\r\nbuckets.PriorityQueue.prototype.peek = function() {\r\n    return this.heap.peek();\r\n};\r\n\r\n/**\r\n * Returns true if this priority queue contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this priority queue contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.PriorityQueue.prototype.contains = function(element) {\r\n    return this.heap.contains(element);\r\n};\r\n\r\n/**\r\n * Checks if this priority queue is empty.\r\n * @return {boolean} true if and only if this priority queue contains no items; false\r\n * otherwise.\r\n */\r\nbuckets.PriorityQueue.prototype.isEmpty = function() {\r\n    return this.heap.isEmpty();\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this priority queue.\r\n * @return {number} the number of elements in this priority queue.\r\n */\r\nbuckets.PriorityQueue.prototype.size = function() {\r\n    return this.heap.size();\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this priority queue.\r\n */\r\nbuckets.PriorityQueue.prototype.clear = function() {\r\n    this.heap.clear();\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this queue in \r\n * no particular order.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.PriorityQueue.prototype.forEach = function(callback) {\r\n   this.heap.forEach(callback);\r\n};\r\n\r\n\r\n/**\r\n * Creates an empty set.\r\n * @class <p>A set is a data structure that contains no duplicate items.</p>\r\n * <p>If the inserted elements are custom objects a function \r\n * which converts elements to strings must be provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n *\r\n * @constructor\r\n * @param {function(Object):string=} toStringFunction optional function used\r\n * to convert elements to strings. If the elements aren't strings or if toString()\r\n * is not appropriate, a custom function which receives a onject and returns a\r\n * unique string must be provided.\r\n */\r\nbuckets.Set = function(toStringFunction) {\r\n    this.dictionary = new buckets.Dictionary(toStringFunction);\r\n};\r\n\r\n/**\r\n * Returns true if this set contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this set contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Set.prototype.contains = function(element) {\r\n    return this.dictionary.containsKey(element);\r\n};\r\n\r\n/**\r\n * Adds the specified element to this set if it is not already present.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if this set did not already contain the specified element.\r\n */\r\nbuckets.Set.prototype.add = function(element) {\r\n    if (this.contains(element) || buckets.isUndefined(element)) {\r\n        return false;\r\n    } else {\r\n        this.dictionary.set(element, element);\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Performs an intersecion between this an another set.\r\n * Removes all values that are not present this set and the given set.\r\n * @param {buckets.Set} otherSet other set.\r\n */\r\nbuckets.Set.prototype.intersection = function(otherSet) {\r\n    var set = this;\r\n    this.forEach(function(element) {\r\n        if (!otherSet.contains(element)) {\r\n            set.remove(element);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Performs a union between this an another set.\r\n * Adds all values from the given set to this set.\r\n * @param {buckets.Set} otherSet other set.\r\n */\r\nbuckets.Set.prototype.union = function(otherSet) {\r\n    var set = this;\r\n    otherSet.forEach(function(element) {\r\n        set.add(element);\r\n    });\r\n};\r\n\r\n/**\r\n * Performs a difference between this an another set.\r\n * Removes from this set all the values that are present in the given set.\r\n * @param {buckets.Set} otherSet other set.\r\n */\r\nbuckets.Set.prototype.difference = function(otherSet) {\r\n    var set = this;\r\n    otherSet.forEach(function(element) {\r\n        set.remove(element);\r\n    });\r\n};\r\n\r\n/**\r\n * Checks whether the given set contains all the elements in this set.\r\n * @param {buckets.Set} otherSet other set.\r\n * @return {boolean} true if this set is a subset of the given set.\r\n */\r\nbuckets.Set.prototype.isSubsetOf = function(otherSet) {\r\n    \r\n\tif (this.size() > otherSet.size()) {\r\n        return false;\r\n    }\r\n\t\r\n\tvar isSub = true;\r\n    this.forEach(function(element) {\r\n        if (!otherSet.contains(element)) {\r\n\t\t\tisSub = false;\r\n\t\t\treturn false;\r\n        }\r\n    });\r\n    return isSub;\r\n};\r\n\r\n/**\r\n * Removes the specified element from this set if it is present.\r\n * @return {boolean} true if this set contained the specified element.\r\n */\r\nbuckets.Set.prototype.remove = function(element) {\r\n    if (!this.contains(element)) {\r\n        return false;\r\n    } else {\r\n        this.dictionary.remove(element);\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element \r\n * present in this set.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one arguments: the element. To break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Set.prototype.forEach = function(callback) {\r\n    this.dictionary.forEach(function(k, v) {\r\n        return callback(v);\r\n    });\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the elements in this set in arbitrary order.\r\n * @return {Array} an array containing all of the elements in this set.\r\n */\r\nbuckets.Set.prototype.toArray = function() {\r\n    return this.dictionary.values();\r\n};\r\n\r\n/**\r\n * Returns true if this set contains no elements.\r\n * @return {boolean} true if this set contains no elements.\r\n */\r\nbuckets.Set.prototype.isEmpty = function() {\r\n    return this.dictionary.isEmpty();\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this set.\r\n * @return {number} the number of elements in this set.\r\n */\r\nbuckets.Set.prototype.size = function() {\r\n    return this.dictionary.size();\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this set.\r\n */\r\nbuckets.Set.prototype.clear = function() {\r\n    this.dictionary.clear();\r\n};\r\n\r\n/**\r\n * Creates an empty bag.\r\n * @class <p>A bag is a special kind of set in which members are \r\n * allowed to appear more than once.</p>\r\n * <p>If the inserted elements are custom objects a function \r\n * which converts elements to unique strings must be provided. Example:</p>\r\n *\r\n * <pre>\r\n * function petToString(pet) {\r\n *  return pet.name;\r\n * }\r\n * </pre>\r\n *\r\n * @constructor\r\n * @param {function(Object):string=} toStrFunction optional function used\r\n * to convert elements to strings. If the elements aren't strings or if toString()\r\n * is not appropriate, a custom function which receives an object and returns a\r\n * unique string must be provided.\r\n */\r\nbuckets.Bag = function(toStrFunction) {\r\n    this.toStrF = toStrFunction || buckets.defaultToString;\r\n    this.dictionary = new buckets.Dictionary(this.toStrF);\r\n    this.nElements = 0;\r\n};\r\n\r\n/**\r\n* Adds nCopies of the specified object to this bag.\r\n* @param {Object} element element to add.\r\n* @param {number=} nCopies the number of copies to add, if this argument is\r\n* undefined 1 copy is added.\r\n* @return {boolean} true unless element is undefined.\r\n*/\r\nbuckets.Bag.prototype.add = function(element, nCopies) {\r\n\r\n    if (isNaN(nCopies) || buckets.isUndefined(nCopies)) {\r\n        nCopies = 1;\r\n    }\r\n    if (buckets.isUndefined(element) || nCopies <= 0) {\r\n        return false;\r\n    }\r\n\r\n    if (!this.contains(element)) {\r\n        var node = {\r\n            value: element,\r\n            copies: nCopies\r\n        };\r\n        this.dictionary.set(element, node);\r\n    } else {\r\n        this.dictionary.get(element).copies += nCopies;\r\n    }\r\n    this.nElements += nCopies;\r\n    return true;\r\n};\r\n\r\n/**\r\n* Counts the number of copies of the specified object in this bag.\r\n* @param {Object} element the object to search for..\r\n* @return {number} the number of copies of the object, 0 if not found\r\n*/\r\nbuckets.Bag.prototype.count = function(element) {\r\n\r\n    if (!this.contains(element)) {\r\n        return 0;\r\n    } else {\r\n        return this.dictionary.get(element).copies;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns true if this bag contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this bag contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.Bag.prototype.contains = function(element) {\r\n    return this.dictionary.containsKey(element);\r\n};\r\n\r\n/**\r\n* Removes nCopies of the specified object to this bag.\r\n* If the number of copies to remove is greater than the actual number \r\n* of copies in the Bag, all copies are removed. \r\n* @param {Object} element element to remove.\r\n* @param {number=} nCopies the number of copies to remove, if this argument is\r\n* undefined 1 copy is removed.\r\n* @return {boolean} true if at least 1 element was removed.\r\n*/\r\nbuckets.Bag.prototype.remove = function(element, nCopies) {\r\n\r\n    if (isNaN(nCopies) || buckets.isUndefined(nCopies)) {\r\n        nCopies = 1;\r\n    }\r\n    if (buckets.isUndefined(element) || nCopies <= 0) {\r\n        return false;\r\n    }\r\n\r\n    if (!this.contains(element)) {\r\n        return false;\r\n    } else {\r\n        var node = this.dictionary.get(element);\r\n        if (nCopies > node.copies) {\r\n            this.nElements -= node.copies;\r\n        } else {\r\n            this.nElements -= nCopies;\r\n        }\r\n        node.copies -= nCopies;\r\n        if (node.copies <= 0) {\r\n            this.dictionary.remove(element);\r\n        }\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the elements in this big in arbitrary order, \r\n * including multiple copies.\r\n * @return {Array} an array containing all of the elements in this bag.\r\n */\r\nbuckets.Bag.prototype.toArray = function() {\r\n    var a = [];\r\n    var values = this.dictionary.values();\r\n    var vl = values.length;\r\n    for (var i = 0; i < vl; i++) {\r\n        var node = values[i];\r\n        var element = node.value;\r\n        var copies = node.copies;\r\n        for (var j = 0; j < copies; j++) {\r\n            a.push(element);\r\n        }\r\n    }\r\n    return a;\r\n};\r\n\r\n/**\r\n * Returns a set of unique elements in this bag. \r\n * @return {buckets.Set} a set of unique elements in this bag.\r\n */\r\nbuckets.Bag.prototype.toSet = function() {\r\n    var set = new buckets.Set(this.toStrF);\r\n    var elements = this.dictionary.values();\r\n    var l = elements.length;\r\n    for (var i = 0; i < l; i++) {\r\n        var value = elements[i].value;\r\n        set.add(value);\r\n    }\r\n    return set;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element \r\n * present in this bag, including multiple copies.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element. To break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.Bag.prototype.forEach = function(callback) {\r\n    this.dictionary.forEach(function(k, v) {\r\n        var value = v.value;\r\n        var copies = v.copies;\r\n        for (var i = 0; i < copies; i++) {\r\n            if (callback(value) === false) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    });\r\n};\r\n/**\r\n * Returns the number of elements in this bag.\r\n * @return {number} the number of elements in this bag.\r\n */\r\nbuckets.Bag.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this bag contains no elements.\r\n * @return {boolean} true if this bag contains no elements.\r\n */\r\nbuckets.Bag.prototype.isEmpty = function() {\r\n    return this.nElements === 0;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this bag.\r\n */\r\nbuckets.Bag.prototype.clear = function() {\r\n    this.nElements = 0;\r\n    this.dictionary.clear();\r\n};\r\n\r\n\r\n\r\n/**\r\n * Creates an empty binary search tree.\r\n * @class <p>A binary search tree is a binary tree in which each \r\n * internal node stores an element such that the elements stored in the \r\n * left subtree are less than it and the elements \r\n * stored in the right subtree are greater.</p>\r\n * <p>Formally, a binary search tree is a node-based binary tree data structure which \r\n * has the following properties:</p>\r\n * <ul>\r\n * <li>The left subtree of a node contains only nodes with elements less \r\n * than the node's element</li>\r\n * <li>The right subtree of a node contains only nodes with elements greater \r\n * than the node's element</li>\r\n * <li>Both the left and right subtrees must also be binary search trees.</li>\r\n * </ul>\r\n * <p>If the inserted elements are custom objects a compare function must \r\n * be provided at construction time, otherwise the <=, === and >= operators are \r\n * used to compare elements. Example:</p>\r\n * <pre>\r\n * function compare(a, b) {\r\n *  if (a is less than b by some ordering criterion) {\r\n *     return -1;\r\n *  } if (a is greater than b by the ordering criterion) {\r\n *     return 1;\r\n *  } \r\n *  // a must be equal to b\r\n *  return 0;\r\n * }\r\n * </pre>\r\n * @constructor\r\n * @param {function(Object,Object):number=} compareFunction optional\r\n * function used to compare two elements. Must return a negative integer,\r\n * zero, or a positive integer as the first argument is less than, equal to,\r\n * or greater than the second.\r\n */\r\nbuckets.BSTree = function(compareFunction) {\r\n    this.root = null;\r\n    this.compare = compareFunction || buckets.defaultCompare;\r\n    this.nElements = 0;\r\n};\r\n\r\n\r\n/**\r\n * Adds the specified element to this tree if it is not already present.\r\n * @param {Object} element the element to insert.\r\n * @return {boolean} true if this tree did not already contain the specified element.\r\n */\r\nbuckets.BSTree.prototype.add = function(element) {\r\n    if (buckets.isUndefined(element)) {\r\n        return false;\r\n    }\r\n\r\n    if (this.insertNode(this.createNode(element)) !== null) {\r\n        this.nElements++;\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Removes all of the elements from this tree.\r\n */\r\nbuckets.BSTree.prototype.clear = function() {\r\n    this.root = null;\r\n    this.nElements = 0;\r\n};\r\n\r\n/**\r\n * Returns true if this tree contains no elements.\r\n * @return {boolean} true if this tree contains no elements.\r\n */\r\nbuckets.BSTree.prototype.isEmpty = function() {\r\n    return this.nElements === 0;\r\n};\r\n\r\n/**\r\n * Returns the number of elements in this tree.\r\n * @return {number} the number of elements in this tree.\r\n */\r\nbuckets.BSTree.prototype.size = function() {\r\n    return this.nElements;\r\n};\r\n\r\n/**\r\n * Returns true if this tree contains the specified element.\r\n * @param {Object} element element to search for.\r\n * @return {boolean} true if this tree contains the specified element,\r\n * false otherwise.\r\n */\r\nbuckets.BSTree.prototype.contains = function(element) {\r\n    if (buckets.isUndefined(element)) {\r\n        return false;\r\n    }\r\n    return this.searchNode(this.root, element) !== null;\r\n};\r\n\r\n/**\r\n * Removes the specified element from this tree if it is present.\r\n * @return {boolean} true if this tree contained the specified element.\r\n */\r\nbuckets.BSTree.prototype.remove = function(element) {\r\n    var node = this.searchNode(this.root, element);\r\n    if (node === null) {\r\n        return false;\r\n    }\r\n    this.removeNode(node);\r\n    this.nElements--;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in \r\n * in-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.inorderTraversal = function(callback) {\r\n    this.inorderTraversalAux(this.root, callback, {\r\n        stop: false\r\n    });\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in pre-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.preorderTraversal = function(callback) {\r\n    this.preorderTraversalAux(this.root, callback, {\r\n        stop: false\r\n    });\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in post-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.postorderTraversal = function(callback) {\r\n    this.postorderTraversalAux(this.root, callback, {\r\n        stop: false\r\n    });\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in \r\n * level-order.\r\n * @param {function(Object):*} callback function to execute, it is invoked with one \r\n * argument: the element value, to break the iteration you can optionally return false.\r\n */\r\nbuckets.BSTree.prototype.levelTraversal = function(callback) {\r\n    this.levelTraversalAux(this.root, callback);\r\n};\r\n\r\n/**\r\n * Returns the minimum element of this tree.\r\n * @return {*} the minimum element of this tree or undefined if this tree is\r\n * is empty.\r\n */\r\nbuckets.BSTree.prototype.minimum = function() {\r\n    if (this.isEmpty()) {\r\n        return undefined;\r\n    }\r\n    return this.minimumAux(this.root).element;\r\n};\r\n\r\n/**\r\n * Returns the maximum element of this tree.\r\n * @return {*} the maximum element of this tree or undefined if this tree is\r\n * is empty.\r\n */\r\nbuckets.BSTree.prototype.maximum = function() {\r\n    if (this.isEmpty()) {\r\n        return undefined;\r\n    }\r\n    return this.maximumAux(this.root).element;\r\n};\r\n\r\n/**\r\n * Executes the provided function once for each element present in this tree in inorder.\r\n * Equivalent to inorderTraversal.\r\n * @param {function(Object):*} callback function to execute, it is\r\n * invoked with one argument: the element value, to break the iteration you can \r\n * optionally return false.\r\n */\r\nbuckets.BSTree.prototype.forEach = function(callback) {\r\n    this.inorderTraversal(callback);\r\n};\r\n\r\n/**\r\n * Returns an array containing all of the elements in this tree in in-order.\r\n * @return {Array} an array containing all of the elements in this tree in in-order.\r\n */\r\nbuckets.BSTree.prototype.toArray = function() {\r\n    var array = [];\r\n    this.inorderTraversal(function(element) {\r\n        array.push(element);\r\n    });\r\n    return array;\r\n};\r\n\r\n/**\r\n * Returns the height of this tree.\r\n * @return {number} the height of this tree or -1 if is empty.\r\n */\r\nbuckets.BSTree.prototype.height = function() {\r\n    return this.heightAux(this.root);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.searchNode = function(node, element) {\r\n    var cmp = null;\r\n    while (node !== null && cmp !== 0) {\r\n        cmp = this.compare(element, node.element);\r\n        if (cmp < 0) {\r\n            node = node.leftCh;\r\n        } else if (cmp > 0) {\r\n            node = node.rightCh;\r\n        }\r\n    }\r\n    return node;\r\n};\r\n\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.transplant = function(n1, n2) {\r\n    if (n1.parent === null) {\r\n        this.root = n2;\r\n    } else if (n1 === n1.parent.leftCh) {\r\n        n1.parent.leftCh = n2;\r\n    } else {\r\n        n1.parent.rightCh = n2;\r\n    }\r\n    if (n2 !== null) {\r\n        n2.parent = n1.parent;\r\n    }\r\n};\r\n\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.removeNode = function(node) {\r\n    if (node.leftCh === null) {\r\n        this.transplant(node, node.rightCh);\r\n    } else if (node.rightCh === null) {\r\n        this.transplant(node, node.leftCh);\r\n    } else {\r\n        var y = this.minimumAux(node.rightCh);\r\n        if (y.parent !== node) {\r\n            this.transplant(y, y.rightCh);\r\n            y.rightCh = node.rightCh;\r\n            y.rightCh.parent = y;\r\n        }\r\n        this.transplant(node, y);\r\n        y.leftCh = node.leftCh;\r\n        y.leftCh.parent = y;\r\n    }\r\n};\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.inorderTraversalAux = function(node, callback, signal) {\r\n    if (node === null || signal.stop) {\r\n        return;\r\n    }\r\n    this.inorderTraversalAux(node.leftCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    signal.stop = callback(node.element) === false;\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.inorderTraversalAux(node.rightCh, callback, signal);\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.levelTraversalAux = function(node, callback) {\r\n    var queue = new buckets.Queue();\r\n    if (node !== null) {\r\n        queue.enqueue(node);\r\n    }\r\n    while (!queue.isEmpty()) {\r\n        node = queue.dequeue();\r\n        if (callback(node.element) === false) {\r\n            return;\r\n        }\r\n        if (node.leftCh !== null) {\r\n            queue.enqueue(node.leftCh);\r\n        }\r\n        if (node.rightCh !== null) {\r\n            queue.enqueue(node.rightCh);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.preorderTraversalAux = function(node, callback, signal) {\r\n    if (node === null || signal.stop) {\r\n        return;\r\n    }\r\n    signal.stop = callback(node.element) === false;\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.preorderTraversalAux(node.leftCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.preorderTraversalAux(node.rightCh, callback, signal);\r\n};\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.postorderTraversalAux = function(node, callback, signal) {\r\n    if (node === null || signal.stop) {\r\n        return;\r\n    }\r\n    this.postorderTraversalAux(node.leftCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    this.postorderTraversalAux(node.rightCh, callback, signal);\r\n    if (signal.stop) {\r\n        return;\r\n    }\r\n    signal.stop = callback(node.element) === false;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.minimumAux = function(node) {\r\n    while (node.leftCh !== null) {\r\n        node = node.leftCh;\r\n    }\r\n    return node;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.maximumAux = function(node) {\r\n    while (node.rightCh !== null) {\r\n        node = node.rightCh;\r\n    }\r\n    return node;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.successorNode = function(node) {\r\n    if (node.rightCh !== null) {\r\n        return this.minimumAux(node.rightCh);\r\n    }\r\n    var successor = node.parent;\r\n    while (successor !== null && node === successor.rightCh) {\r\n        node = successor;\r\n        successor = node.parent;\r\n    }\r\n    return successor;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.heightAux = function(node) {\r\n    if (node === null) {\r\n        return - 1;\r\n    }\r\n    return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\r\n};\r\n\r\n/*\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.insertNode = function(node) {\r\n\r\n    var parent = null;\r\n    var position = this.root;\r\n    var cmp = null;\r\n    while (position !== null) {\r\n        cmp = this.compare(node.element, position.element);\r\n        if (cmp === 0) {\r\n            return null;\r\n        } else if (cmp < 0) {\r\n            parent = position;\r\n            position = position.leftCh;\r\n        } else {\r\n            parent = position;\r\n            position = position.rightCh;\r\n        }\r\n    }\r\n    node.parent = parent;\r\n    if (parent === null) {\r\n        // tree is empty\r\n        this.root = node;\r\n    } else if (this.compare(node.element, parent.element) < 0) {\r\n        parent.leftCh = node;\r\n    } else {\r\n        parent.rightCh = node;\r\n    }\r\n    return node;\r\n};\r\n\r\n/**\r\n* @private\r\n*/\r\nbuckets.BSTree.prototype.createNode = function(element) {\r\n    return {\r\n        element: element,\r\n        leftCh: null,\r\n        rightCh: null,\r\n        parent: null\r\n    };\r\n};\r\n\r\nmodule.exports = buckets;\r\n\n});\n",
    "\ndefine('runtime/object-creation',['require','exports','module','../../compiler/vendor/buckets','./angl-globals-namespace'],function (require, exports, module) {var buckets = require('../../compiler/vendor/buckets');\r\nvar anglGlobalsNamespace = require('./angl-globals-namespace');\r\n\r\n// Set of all objects that have already been created\r\nvar createdObjectNames = new buckets.Set();\r\n\r\n// Multi-map of all objects that are waiting for their parent to be created\r\nvar pendingObjects = new buckets.MultiDictionary();\r\n\r\n\r\nmodule.exports.createAnglObject = function(objectName, parentObjectName, creationCallback) {\r\n    if(parentObjectName && !createdObjectNames.contains(parentObjectName)) {\r\n        // we must wait for the parent to be constructed\r\n        pendingObjects.set(parentObjectName, {\r\n            childObjectName: objectName,\r\n            creationCallback: creationCallback\r\n        });\r\n    } else {\r\n        // Call the creation callback to immediately create the object\r\n        createObject(objectName, parentObjectName, creationCallback);\r\n    }\r\n};\r\n\r\n// call the construction callbacks for all objects that inherit from the given parent object\r\nvar createSubclassesOf = function(parentObjectName) {\r\n    pendingObjects.get(parentObjectName).forEach(function(v) {\r\n        createObject(v.childObjectName, parentObjectName, v.creationCallback);\r\n    });\r\n};\r\n\r\nvar createObject = function(objectName, parentObjectName, creationCallback) {\r\n    // Execute callback, which will create the object/class\r\n    creationCallback();\r\n    \r\n    createdObjectNames.add(objectName);\r\n    var object = anglGlobalsNamespace[objectName];\r\n    var parentObject = anglGlobalsNamespace[parentObjectName];\r\n    \r\n    // Create an array of each subclass that directly inherits from this object/class\r\n    object.$childObjects = [];\r\n    \r\n    // Add ourselves to the list of subclasses for our parent\r\n    parentObject.$childObjects.push(object);\r\n    \r\n    // If this object inherits from GameObject, initialize it as a GameObject type in the runtime\r\n    if(object.prototype instanceof anglGlobalsNamespace.GameObject) {\r\n        registerGameObject(objectName, object);\r\n    }\r\n    \r\n    // Create any subclasses that were waiting\r\n    createSubclassesOf(objectName);\r\n}\r\n\r\nvar registerGameObject = function(objectName, object) {\r\n    object.$name = objectName;\r\n    object.$instances = new buckets.Set(function(instance) { return instance.$id; });\r\n}\r\n\r\n// Sets up inheritance from parentObject to object\r\n// Creates and assigns a prototype, and copies all fields from parentObject onto object\r\nmodule.exports.inherit = function(object, parentObject) {\r\n    object.prototype = Object.create(parentObject.prototype, {\r\n        constructor: {\r\n            value: object,\r\n            writable: false\r\n        }\r\n    });\r\n    // Copy own enumerable properties from parent\r\n    _.extend(object, parentObject);\r\n};\r\n\n});\n",
    "\ndefine('runtime/angl-object',['require','exports','module','./angl-globals-namespace'],function (require, exports, module) {// $AnglObject, the parent of all Angl objects\r\n\r\nvar anglGlobalNamespace = require('./angl-globals-namespace');\r\n\r\nvar AnglObject = anglGlobalNamespace.$AnglObject = function() {\r\n    \r\n    // Set the `id` value as a reference to self\r\n    this.id = this;\r\n    \r\n    // Initialize all object properties\r\n    this.$initProperties(this);\r\n    \r\n    // Execute any instance registration logic.  Intended for GameObjects, but could be implemented by other classes\r\n    this.$registerInstance();\r\n    \r\n    // Call the create event\r\n    var args = Array.prototype.slice.call(arguments);\r\n    args.unshift(this);\r\n    this.$create.apply(this, args);\r\n};\r\n\r\n// No-op implementations of methods\r\nAnglObject.prototype.$initProperties = function() {};\r\nAnglObject.prototype.$registerInstance = function() {};\r\n\n});\n",
    "\ndefine('runtime/angl-game-object',['require','exports','module','lodash','./angl-globals-namespace','./object-creation','./angl-object'],function (require, exports, module) {// GameObject, the parent of all objects that need a sprite, events, collisions, etc.\r\n\r\nvar _ = require('lodash');\r\nvar anglGlobalsNamespace = require('./angl-globals-namespace');\r\nvar anglRuntime = require('./object-creation');\r\nrequire('./angl-object');\r\n\r\nvar AnglObject = anglGlobalsNamespace.$AnglObject;\r\n\r\n\r\nvar GameObject = anglGlobalsNamespace.GameObject = function() {\r\n    AnglObject.call(this);\r\n};\r\n\r\nanglRuntime.inherit(GameObject, AnglObject);\r\n\r\nGameObject.prototype.$registerInstance = function() {\r\n    // Grab a reference to the object/class\r\n    var object = this.constructor;\r\n    // Give self a unique ID, used for storage in the Set data structure\r\n    this.$id = _.uniqueId();\r\n    // Store a reference to self into the set of all instances for this object\r\n    object.$instances.add(this);\r\n};\r\n\n});\n",
    "\ndefine('runtime/special-constants',['require','exports','module'],function (require, exports, module) {module.exports = {\r\n    true: 1,\r\n    false: 0,\r\n    all: {}, // a globally unique value\r\n    noone: {} // a globally unique value\r\n};\n});\n",
    "\ndefine('runtime/console',['require','exports','module'],function (require, exports, module) {// Provides basic console logging support to Angl code\r\n\r\nmodule.exports = {\r\n    console: {\r\n        log: function(other, message) {\r\n            console.log(message);\r\n        },\r\n        dir: function(other, value) {\r\n            console.dir(message);\r\n        }\r\n    }\r\n};\n});\n",
    "\ndefine('runtime/angl-globals',['require','exports','module','lodash','./angl-globals-namespace','./angl-game-object','./angl-object','./special-constants','./console'],function (require, exports, module) {var _ = require('lodash');\r\nvar anglGlobalsNamespace = require('./angl-globals-namespace');\r\n\r\n// This file is responsible for populating the global namespace with all built-in global values\r\n// true, false, all, noone, instance_create, etc.\r\n\r\n// A few modules independently add items to the global namespace\r\n// TODO rewrite these modules; this loading behavior is too messy\r\nrequire('./angl-game-object');\r\nrequire('./angl-object');\r\n\r\n// load all submodules\r\nvar subModules = [\r\n    require('./special-constants'),\r\n    require('./console')\r\n];\r\n\r\n// Copy all own enumerable properties from all submodules into the global namespace\r\n_(subModules).each(function(subModule) {\r\n    _.extend(anglGlobalsNamespace, subModule);\r\n});\r\n\r\n\n});\n",
    "\ndefine('lib/global-scope',['require','exports','module','lodash','./angl-scope','./scope-variable','./strings','runtime/angl-globals-namespace','runtime/angl-globals'],function (require, exports, module) {var _ = require('lodash');\r\nvar scope = require('./angl-scope')\r\nvar scopeVariable = require('./scope-variable')\r\nvar strings = require('./strings')\r\nvar anglGlobalsNamespace = require('runtime/angl-globals-namespace');\r\nrequire('runtime/angl-globals');\r\nfunction createGlobalScope() {\r\n    var globalScope = new scope.AnglScope();\r\n    var globalIdentifiers = _.keys(anglGlobalsNamespace);\r\n    _.each(globalIdentifiers, function (globalIdentifier) {\r\n        var variable = new scopeVariable.Variable(globalIdentifier, 'PROP_ASSIGNMENT', 'PROP_ACCESS');\r\n        variable.setContainingObjectIdentifier(strings.ANGL_GLOBALS_IDENTIFIER);\r\n        globalScope.addVariable(variable);\r\n    });\r\n    return globalScope;\r\n}\r\nexports.createGlobalScope = createGlobalScope;\r\n;\r\n//@ sourceMappingURL=global-scope.js.map\r\n\n});\n",
    "\ndefine('lib/process-phase-zero',['require','exports','module','./global-scope','./angl-scope','./scope-variable'],function (require, exports, module) {\r\nvar globalScope = require('./global-scope');\r\nvar AnglScope = require('./angl-scope')\r\nvar scopeVariable = require('./scope-variable')\r\nexports.transform = function (ast) {\r\n    var anglScope = new AnglScope.AnglScope();\r\n    var thisVariable = new scopeVariable.Variable('self', 'ARGUMENT');\r\n    thisVariable.setJsIdentifier('this');\r\n    var otherVariable = new scopeVariable.Variable('other', 'ARGUMENT');\r\n    anglScope.addVariable(thisVariable);\r\n    anglScope.addVariable(otherVariable);\r\n    var globalAnglScope = globalScope.createGlobalScope();\r\n    anglScope.setParentScope(globalAnglScope);\r\n    if(ast.type !== 'statements') {\r\n        throw new Error('Unexpected root node from Angl parser. Expected type \"statements\", got \"' + ast.type + '\".');\r\n    }\r\n    return {\r\n        type: \"file\",\r\n        stmts: ast.list,\r\n        globalAnglScope: globalAnglScope,\r\n        anglScope: anglScope\r\n    };\r\n};\r\n//@ sourceMappingURL=process-phase-zero.js.map\r\n\n});\n",
    "\ndefine('lib/ast-node-children',['require','exports','module'],function (require, exports, module) {var nodeChildNames = {\r\n    \"file\": [\r\n        \"stmts\"\r\n    ],\r\n    \"statements\": [\r\n        \"list\"\r\n    ],\r\n    \"nop\": [],\r\n    \"var\": [\r\n        \"list\"\r\n    ],\r\n    \"var_item\": [\r\n        \"expr\"\r\n    ],\r\n    \"const\": [\r\n        \"expr\"\r\n    ],\r\n    \"identifier\": [],\r\n    \"number\": [],\r\n    \"string\": [],\r\n    \"binop\": [\r\n        \"expr1\", \r\n        \"expr2\"\r\n    ],\r\n    \"unop\": [\r\n        \"expr\"\r\n    ],\r\n    \"index\": [\r\n        \"expr\", \r\n        \"indexes\"\r\n    ],\r\n    \"funccall\": [\r\n        \"expr\", \r\n        \"args\"\r\n    ],\r\n    \"jsfunccall\": [\r\n        \"args\"\r\n    ],\r\n    \"scriptdef\": [\r\n        \"stmts\"\r\n    ],\r\n    \"script\": [\r\n        \"stmts\"\r\n    ],\r\n    \"object\": [\r\n        \"stmts\", \r\n        \"propertyinitscript\", \r\n        \"createscript\", \r\n        \"destroyscript\", \r\n        \"methods\"\r\n    ],\r\n    \"createdef\": [\r\n        \"stmts\"\r\n    ],\r\n    \"destroydef\": [\r\n        \"stmts\"\r\n    ],\r\n    \"property\": [\r\n        \"expr\"\r\n    ],\r\n    \"super\": [\r\n        \"args\"\r\n    ],\r\n    \"assign\": [\r\n        \"lval\", \r\n        \"rval\"\r\n    ],\r\n    \"cmpassign\": [\r\n        \"lval\", \r\n        \"rval\"\r\n    ],\r\n    \"return\": [\r\n        \"expr\"\r\n    ],\r\n    \"continue\": [],\r\n    \"break\": [],\r\n    \"exit\": [],\r\n    \"for\": [\r\n        \"initstmt\", \r\n        \"contexpr\", \r\n        \"stepstmt\", \r\n        \"stmt\"\r\n    ],\r\n    \"if\": [\r\n        \"expr\", \r\n        \"stmt\"\r\n    ],\r\n    \"ifelse\": [\r\n        \"expr\", \r\n        \"stmt1\", \r\n        \"stmt2\"\r\n    ],\r\n    \"repeat\": [\r\n        \"expr\", \r\n        \"stmt\"\r\n    ],\r\n    \"while\": [\r\n        \"expr\", \r\n        \"stmt\"\r\n    ],\r\n    \"dountil\": [\r\n        \"expr\", \r\n        \"stmt\"\r\n    ],\r\n    \"switch\": [\r\n        \"expr\", \r\n        \"cases\"\r\n    ],\r\n    \"case\": [\r\n        \"expr\", \r\n        \"stmts\"\r\n    ],\r\n    \"defaultcase\": [\r\n        \"stmts\"\r\n    ],\r\n    \"with\": [\r\n        \"expr\", \r\n        \"stmt\"\r\n    ]\r\n};\r\n(module).exports = nodeChildNames;\r\n//@ sourceMappingURL=ast-node-children.js.map\r\n\n});\n",
    "\ndefine('lib/tree-walker',['require','exports','module','./ast-node-children','lodash'],function (require, exports, module) {var nodeChildren = require('./ast-node-children');\r\nvar _ = require('lodash');\r\n\r\nvar setNodeParent = function (node, parent) {\r\n    node.parentNode = parent;\r\n};\r\nfunction walk(rootNode, fn) {\r\n    setNodeParent(rootNode, null);\r\n    fn(rootNode, null, null);\r\n    _walk(rootNode, fn);\r\n}\r\nexports.walk = walk;\r\nfunction _walk(node, fn) {\r\n    var type = node.type;\r\n    var children = nodeChildren[type];\r\n    _.each(children, function (childName) {\r\n        var child = node[childName];\r\n        var ret;\r\n        if(_.isArray(child)) {\r\n            var i, children = child;\r\n            for(i = 0; i < children.length; i++) {\r\n                var child = children[i];\r\n                setNodeParent(child, node);\r\n                ret = fn(child, node, childName + '.' + i);\r\n                if(ret === null) {\r\n                    ret = [];\r\n                }\r\n                if(_.isObject(ret) && !_.isArray(ret)) {\r\n                    ret = [\r\n                        ret\r\n                    ];\r\n                }\r\n                if(_.isArray(ret)) {\r\n                    var args = [\r\n                        i, \r\n                        1\r\n                    ].concat(ret);\r\n                    children.splice.apply(children, args);\r\n                    i--;\r\n                    continue;\r\n                }\r\n                ret === false || _walk(child, fn);\r\n            }\r\n        } else if(child !== undefined) {\r\n            while(true) {\r\n                setNodeParent(child, node);\r\n                ret = fn(child, node, childName);\r\n                if(ret === null) {\r\n                    throw new Error('Cannot remove child node from parent type \"' + node.type + '\" at position \"' + childName + '\"');\r\n                }\r\n                if(_.isArray(ret)) {\r\n                    throw new Error('Cannot replace child node with multiple nodes, from parent type \"' + node.type + '\" at position \"' + childName + '\"');\r\n                }\r\n                if(_.isObject(ret)) {\r\n                    child = ret;\r\n                    node[childName] = child;\r\n                    continue;\r\n                }\r\n                ret === false || _walk(child, fn);\r\n                break;\r\n            }\r\n        }\r\n    });\r\n}\r\n//@ sourceMappingURL=tree-walker.js.map\r\n\n});\n",
    "\ndefine('lib/ast-utils',['require','exports','module'],function (require, exports, module) {\r\n\r\nexports.cleanNode = function (astNode) {\r\n    astNode.parentNode = null;\r\n    return astNode;\r\n};\r\nexports.getAnglScope = function (astNode) {\r\n    while(!astNode.anglScope) {\r\n        astNode = astNode.parentNode;\r\n    }\r\n    return astNode.anglScope;\r\n};\r\nexports.getGlobalAnglScope = function (astNode) {\r\n    while(!astNode.globalAnglScope) {\r\n        astNode = astNode.parentNode;\r\n    }\r\n    return astNode.globalAnglScope;\r\n};\r\nexports.findParent = function (astNode, callback) {\r\n    while(true) {\r\n        astNode = astNode.parentNode;\r\n        if(astNode == null) {\r\n            return null;\r\n        }\r\n        if(callback(astNode)) {\r\n            return astNode;\r\n        }\r\n    }\r\n};\r\n//@ sourceMappingURL=ast-utils.js.map\r\n\n});\n",
    "\ndefine('lib/process-phase-one',['require','exports','module','./tree-walker','./angl-scope','./ast-utils','./scope-variable','./strings','../vendor/buckets','lodash'],function (require, exports, module) {var treeWalker = require('./tree-walker')\r\nvar scope = require('./angl-scope')\r\n\r\nvar astUtils = require('./ast-utils')\r\nvar scopeVariable = require('./scope-variable')\r\nvar strings = require('./strings')\r\nvar buckets = require('../vendor/buckets');\r\nvar _ = require('lodash');\r\nvar walk = treeWalker.walk;\r\nexports.transform = function (ast) {\r\n    walk(ast, function (node, parent, locationInParent) {\r\n        var replacement;\r\n        if(node.type === 'scriptdef' || node.type === 'const') {\r\n            if(node.parentNode.type !== 'file' && (node.parentNode.type !== 'object' || node.type !== 'scriptdef')) {\r\n                throw new Error(node.type + ' must be at the root level of a file.');\r\n            }\r\n            var globalVar = new scopeVariable.Variable(node.name, 'PROP_ASSIGNMENT', 'PROP_ACCESS');\r\n            globalVar.setContainingObjectIdentifier(strings.ANGL_GLOBALS_IDENTIFIER);\r\n            astUtils.getGlobalAnglScope(node).addVariable(globalVar);\r\n        }\r\n        if(node.type === 'script' || node.type === 'scriptdef') {\r\n            var newScope = new scope.AnglScope();\r\n            newScope.setParentScope(astUtils.getAnglScope(node));\r\n            node.anglScope = newScope;\r\n            var thisVar = new scopeVariable.Variable('self', 'ARGUMENT');\r\n            thisVar.setJsIdentifier('this');\r\n            newScope.addVariable(thisVar);\r\n            var otherVar = new scopeVariable.Variable('other', 'ARGUMENT');\r\n            newScope.addVariable(otherVar);\r\n            _.each(node.args, function (argName) {\r\n                var argumentVar = new scopeVariable.Variable(argName, 'ARGUMENT');\r\n                newScope.addVariable(argumentVar);\r\n            });\r\n        }\r\n        if(node.type === 'var') {\r\n            replacement = [];\r\n            _.each(node.list, function (var_item) {\r\n                if(astUtils.getAnglScope(node).hasIdentifier(var_item.name)) {\r\n                    throw new Error('Attempt to declare local variable with the name ' + JSON.stringify(var_item.name) + ' more than once.');\r\n                }\r\n                var localVar = new scopeVariable.Variable(var_item.name);\r\n                astUtils.getAnglScope(node).addVariable(localVar);\r\n                if(var_item.expr) {\r\n                    replacement.push({\r\n                        type: 'assign',\r\n                        lval: {\r\n                            type: 'identifier',\r\n                            variable: localVar\r\n                        },\r\n                        rval: var_item.expr\r\n                    });\r\n                }\r\n            });\r\n            return replacement;\r\n        }\r\n        if(node.type === 'repeat') {\r\n            var counterVariable = new scopeVariable.Variable();\r\n            counterVariable.setDesiredJsIdentifier('$i');\r\n            astUtils.getAnglScope(node).addVariable(counterVariable);\r\n            var timesVariable = new scopeVariable.Variable();\r\n            timesVariable.setDesiredJsIdentifier('$l');\r\n            astUtils.getAnglScope(node).addVariable(timesVariable);\r\n            replacement = [\r\n                {\r\n                    type: 'assign',\r\n                    lval: {\r\n                        type: 'identifier',\r\n                        variable: timesVariable\r\n                    },\r\n                    rval: astUtils.cleanNode(node.expr)\r\n                }, \r\n                {\r\n                    type: 'for',\r\n                    initstmt: {\r\n                        type: 'assign',\r\n                        lval: {\r\n                            type: 'identifier',\r\n                            variable: counterVariable\r\n                        },\r\n                        rval: {\r\n                            type: 'number',\r\n                            val: 0\r\n                        }\r\n                    },\r\n                    contexpr: {\r\n                        type: 'binop',\r\n                        op: '<',\r\n                        expr1: {\r\n                            type: 'identifier',\r\n                            variable: counterVariable\r\n                        },\r\n                        expr2: {\r\n                            type: 'identifier',\r\n                            variable: timesVariable\r\n                        }\r\n                    },\r\n                    stepstmt: {\r\n                        type: 'cmpassign',\r\n                        op: '+',\r\n                        lval: {\r\n                            type: 'identifier',\r\n                            variable: counterVariable\r\n                        },\r\n                        rval: {\r\n                            type: 'number',\r\n                            val: 1\r\n                        }\r\n                    },\r\n                    stmt: astUtils.cleanNode(node.stmt)\r\n                }\r\n            ];\r\n            return replacement;\r\n        }\r\n        if(node.type === 'with' && !node.alreadyVisited) {\r\n            var outerScope = astUtils.getAnglScope(node);\r\n            var innerScope = new scope.WithScope();\r\n            innerScope.setParentScope(outerScope);\r\n            node.anglScope = innerScope;\r\n            var allObjectsVariable = new scopeVariable.Variable();\r\n            allObjectsVariable.setDesiredJsIdentifier('$objects');\r\n            outerScope.addVariable(allObjectsVariable);\r\n            var indexVariable = new scopeVariable.Variable();\r\n            indexVariable.setDesiredJsIdentifier('$i');\r\n            outerScope.addVariable(indexVariable);\r\n            var selfVariable = new scopeVariable.Variable();\r\n            selfVariable.setIdentifier('self');\r\n            selfVariable.setDesiredJsIdentifier('$withSelf');\r\n            innerScope.addVariable(selfVariable);\r\n            var otherVariable = new scopeVariable.LinkedVariable('other', outerScope.getVariableByIdentifierInChain('self'));\r\n            innerScope.addVariable(otherVariable);\r\n            node.allObjectsVariable = allObjectsVariable;\r\n            node.indexVariable = indexVariable;\r\n            var assignmentNode = {\r\n                type: 'assign',\r\n                lval: {\r\n                    type: 'identifier',\r\n                    variable: allObjectsVariable\r\n                },\r\n                rval: {\r\n                    type: 'jsfunccall',\r\n                    expr: strings.ANGL_RUNTIME_IDENTIFIER + '.resolveWithExpression',\r\n                    args: [\r\n                        astUtils.cleanNode(node.expr)\r\n                    ]\r\n                }\r\n            };\r\n            node.alreadyVisited = true;\r\n            return [\r\n                assignmentNode, \r\n                node\r\n            ];\r\n        }\r\n        if(node.type === 'object') {\r\n            if(!node.parent) {\r\n                node.parent = strings.SUPER_OBJECT_NAME;\r\n            }\r\n            node.propertyNames = new buckets.Set();\r\n            node.properties = [];\r\n            node.methodNames = new buckets.Set();\r\n            node.methods = [];\r\n            _.each(node.stmts, function (stmt) {\r\n                switch(stmt.type) {\r\n                    case 'scriptdef':\r\n                        if(node.methodNames.contains(stmt.name)) {\r\n                            throw new Error('Method ' + JSON.stringify(stmt.name) + ' defined more than once for object ' + JSON.stringify(node.name));\r\n                        }\r\n                        node.methodNames.add(stmt.name);\r\n                        var stmt = astUtils.cleanNode(stmt);\r\n                        node.methods.push({\r\n                            type: 'script',\r\n                            args: stmt.args,\r\n                            stmts: stmt.stmts,\r\n                            methodname: stmt.name\r\n                        });\r\n                        break;\r\n                    case 'createdef':\r\n                        if(node.createscript) {\r\n                            throw new Error('Multiple create scripts defined for object ' + JSON.stringify(node.name));\r\n                        }\r\n                        node.createscript = {\r\n                            type: 'script',\r\n                            args: stmt.args,\r\n                            stmts: stmt.stmts,\r\n                            methodname: '$create'\r\n                        };\r\n                        break;\r\n                    case 'destroydef':\r\n                        if(node.destroyscript) {\r\n                            throw new Error('Multiple destroy scripts defined for object ' + JSON.stringify(node.name));\r\n                        }\r\n                        node.destroyscript = {\r\n                            type: 'script',\r\n                            args: [],\r\n                            stmts: stmt.stmts,\r\n                            methodname: '$destroy'\r\n                        };\r\n                        break;\r\n                    case 'property':\r\n                        if(node.propertyNames.contains(stmt.name)) {\r\n                            throw new Error('Cannot initialize object property ' + JSON.stringify(stmt.name) + 'more than once for object ' + JSON.stringify(node.name));\r\n                        }\r\n                        node.propertyNames.add(stmt.name);\r\n                        node.properties.push({\r\n                            type: 'assign',\r\n                            lval: {\r\n                                type: 'binop',\r\n                                op: '.',\r\n                                expr1: {\r\n                                    type: 'identifier',\r\n                                    name: 'self'\r\n                                },\r\n                                expr2: {\r\n                                    type: 'identifier',\r\n                                    name: stmt.name\r\n                                }\r\n                            },\r\n                            rval: astUtils.cleanNode(stmt.expr)\r\n                        });\r\n                        break;\r\n                    default:\r\n                        throw new Error('Unexpected child node of \"object\": ' + JSON.stringify(stmt.type));\r\n                }\r\n            });\r\n            node.propertyinitscript = {\r\n                type: 'script',\r\n                args: [],\r\n                methodname: strings.OBJECT_INITPROPERTIES_METHOD_NAME,\r\n                stmts: {\r\n                    type: 'statements',\r\n                    list: [\r\n                        {\r\n                            type: 'super',\r\n                            args: []\r\n                        }\r\n                    ].concat(node.properties)\r\n                }\r\n            };\r\n            node.stmts = [];\r\n        }\r\n        if(node.type === 'super') {\r\n            var methodNode = astUtils.findParent(node, function (parentNode) {\r\n                return parentNode.type === 'script' && parentNode.methodname;\r\n            });\r\n            if(!methodNode) {\r\n                throw new Error('\"super\" calls only allowed within object methods.');\r\n            }\r\n            var objectNode = astUtils.findParent(methodNode, function (parentNode) {\r\n                return parentNode.type === 'object';\r\n            });\r\n            var methodName = methodNode.methodname;\r\n            var parentName = objectNode.parent;\r\n            if(methodName === '$destroy' && node.args.length) {\r\n                throw new Error('Can\\'t pass arguments to \"super\" call within a \"destroy\" script.');\r\n            }\r\n            return {\r\n                type: 'funccall',\r\n                expr: {\r\n                    type: 'jsexpr',\r\n                    expr: strings.ANGL_GLOBALS_IDENTIFIER + '.' + parentName + '.prototype.' + methodName\r\n                },\r\n                args: node.args\r\n            };\r\n        }\r\n        if(node.type === 'assign') {\r\n            var assignNode = node;\r\n            if(assignNode.lval.type === 'binop' && (assignNode.lval).op === '->') {\r\n                var arrowLeft = (assignNode.lval).expr1;\r\n                var arrowRight = (assignNode.lval).expr2;\r\n                var fieldString = {\r\n                    type: 'string',\r\n                    val: arrowRight.name\r\n                };\r\n                var assignReplacement = {\r\n                    type: 'jsfunccall',\r\n                    expr: strings.ANGL_RUNTIME_IDENTIFIER + '.arrowAssign',\r\n                    args: [\r\n                        arrowLeft, \r\n                        fieldString, \r\n                        assignNode.rval\r\n                    ]\r\n                };\r\n                return assignReplacement;\r\n            }\r\n        }\r\n        if(node.type === 'binop' && (node).op === '->') {\r\n            var arrowNode = node;\r\n            var resolveCall = {\r\n                type: 'jsfunccall',\r\n                expr: strings.ANGL_RUNTIME_IDENTIFIER + '.arrowResolve',\r\n                args: [\r\n                    arrowNode.expr1\r\n                ]\r\n            };\r\n            var arrowReplacement = {\r\n                type: 'binop',\r\n                op: '.',\r\n                expr1: resolveCall,\r\n                expr2: arrowNode.expr2\r\n            };\r\n            return arrowReplacement;\r\n        }\r\n        if(node.type === 'cmpassign') {\r\n            var cmpAssignNode = node;\r\n            var binopNode = {\r\n                type: 'binop',\r\n                op: cmpAssignNode.op,\r\n                expr1: cmpAssignNode.lval,\r\n                expr2: cmpAssignNode.rval\r\n            };\r\n            var assignNode = {\r\n                type: 'assign',\r\n                lval: cmpAssignNode.lval,\r\n                rval: binopNode\r\n            };\r\n            return assignNode;\r\n        }\r\n    });\r\n};\r\n//@ sourceMappingURL=process-phase-one.js.map\r\n\n});\n",
    "\ndefine('lib/process-phase-resolve-identifiers-to-variables',['require','exports','module','./tree-walker','./ast-utils'],function (require, exports, module) {var treeWalker = require('./tree-walker')\r\n\r\n\r\nvar astUtils = require('./ast-utils')\r\nvar walk = treeWalker.walk;\r\nexports.transform = function (ast) {\r\n    walk(ast, function (node, parent, locationInParent) {\r\n        if(node.type === 'identifier') {\r\n            if(locationInParent === 'expr2' && parent.type === 'binop' && parent.op === '.') {\r\n                return;\r\n            }\r\n            if(node.variable) {\r\n                return;\r\n            }\r\n            var variable = astUtils.getAnglScope(node).getVariableByIdentifierInChain(node.name);\r\n            if(!variable) {\r\n                return {\r\n                    type: 'binop',\r\n                    op: '.',\r\n                    expr1: {\r\n                        type: 'identifier',\r\n                        name: 'self'\r\n                    },\r\n                    expr2: astUtils.cleanNode(node)\r\n                };\r\n            }\r\n            node.variable = variable;\r\n        }\r\n    });\r\n};\r\n//@ sourceMappingURL=process-phase-resolve-identifiers-to-variables.js.map\r\n\n});\n",
    "\ndefine('lib/process-phase-mark-method-calls',['require','exports','module','./tree-walker'],function (require, exports, module) {var treeWalker = require('./tree-walker')\r\n\r\nvar walk = treeWalker.walk;\r\nexports.transform = function (ast) {\r\n    walk(ast, function (node, parent, locationInParent) {\r\n        if(node.type === 'funccall') {\r\n            var funcNode = node;\r\n            if(funcNode.expr.type === 'binop' && funcNode.expr.op === '.') {\r\n                funcNode.isMethodCall = true;\r\n            }\r\n        }\r\n    });\r\n};\r\n//@ sourceMappingURL=process-phase-mark-method-calls.js.map\r\n\n});\n",
    "\ndefine('lib/process-phase-assign-js-identifiers',['require','exports','module','./tree-walker','./ast-utils'],function (require, exports, module) {var treeWalker = require('./tree-walker')\r\n\r\n\r\nvar astUtils = require('./ast-utils')\r\nvar walk = treeWalker.walk;\r\nexports.transform = function (ast) {\r\n    walk(ast, function (node, parent, locationInParent) {\r\n        astUtils.getAnglScope(node).assignJsIdentifiers();\r\n    });\r\n};\r\n//@ sourceMappingURL=process-phase-assign-js-identifiers.js.map\r\n\n});\n",
    "\ndefine('lib/run-all-transformations',['require','exports','module','lodash','./process-phase-zero','./process-phase-one','./process-phase-resolve-identifiers-to-variables','./process-phase-mark-method-calls','./process-phase-assign-js-identifiers'],function (require, exports, module) {var _ = require('lodash');\r\n\r\nvar transformers = [\r\n    require('./process-phase-zero').transform, \r\n    require('./process-phase-one').transform, \r\n    require('./process-phase-resolve-identifiers-to-variables').transform, \r\n    require('./process-phase-mark-method-calls').transform, \r\n    require('./process-phase-assign-js-identifiers').transform\r\n];\r\nexports.runAllTransformations = function (ast) {\r\n    return _.reduce(transformers, function (ast, transformer) {\r\n        return (transformer(ast) || ast);\r\n    }, ast);\r\n};\r\n//@ sourceMappingURL=run-all-transformations.js.map\r\n\n});\n",
    "\ndefine('lib/main',['require','exports','module','lodash','./ast-utils','./strings'],function (require, exports, module) {var _ = require('lodash');\r\nvar astUtils = require('./ast-utils');\r\nvar strings = require('./strings');\r\n\r\nvar buffer\r\n  , print\r\n  , indentationLevel\r\n  ;\r\n\r\nvar initializeCompiler = function() {\r\n    buffer = [];\r\n    print = _.bind(buffer.push, buffer);\r\n    indentationLevel = 0;\r\n};\r\n\r\nvar indent = function() {\r\n    indentationLevel++;\r\n};\r\n\r\nvar outdent = function() {\r\n    indentationLevel--;\r\n    if(indentationLevel < 0) {\r\n        throw new Error('Tried to outdent too far.');\r\n    }\r\n};\r\n\r\nvar printIndent = function() {\r\n    // TODO create customizable indentation level\r\n    // TODO make this faster?\r\n    _.times(indentationLevel, function() {\r\n        print('    ');\r\n    });\r\n};\r\n\r\n// TODO properly translate all binops and unops:\r\n//   ones that GML has that JS doesn't have\r\n//   ones with different behavior that need to be implemented differently\r\n//   DIV, MOD, ^^, bitwise ops\r\n//   how does GML do type coercion (42 + \"hello world\")?  Do I need to emulate that behavior?\r\nvar generateExpression = function(astNode, omitIndentation) {\r\n    switch(astNode.type) {\r\n\r\n        case 'identifier':\r\n            var variable = astNode.variable;\r\n            if(variable) {\r\n                if(variable.getAccessType() === 'PROP_ACCESS') {\r\n                    print(variable.getContainingObjectIdentifier() + '.');\r\n                }\r\n                print(variable.getJsIdentifier());\r\n            } else {\r\n                print(astNode.name);\r\n            }\r\n            // TODO will this ever need to be enclosed in parentheses?\r\n            // How should I be handling this in the general case?\r\n            break;\r\n\r\n        case 'binop':\r\n            switch(astNode.op) {\r\n                // special-case the dot operator - no brackets!\r\n                case '.':\r\n                    generateExpression(astNode.expr1);\r\n                    print('.');\r\n                    generateExpression(astNode.expr2);\r\n                    break;\r\n\r\n                case 'div':\r\n                    print('((');\r\n                    generateExpression(astNode.expr1);\r\n                    print(' / ');\r\n                    generateExpression(astNode.expr2);\r\n                    print(')|0)');\r\n                    break;\r\n\r\n                case 'mod':\r\n                    print('(');\r\n                    generateExpression(astNode.expr1);\r\n                    print(' % ');\r\n                    generateExpression(astNode.expr2);\r\n                    print(')');\r\n                    break;\r\n                \r\n                case '||':\r\n                    // Implement OR without short-circuit evaluation\r\n                    // Coerce both sides to booleans, add them, coerce that to a boolean, then coerce that to a number\r\n                    print('(!!(!!( ');\r\n                    generateExpression(astNode.expr1);\r\n                    print(' )+!!( ');\r\n                    generateExpression(astNode.expr2);\r\n                    print(' ))|0)');\r\n                    break;\r\n                \r\n                case '&&':\r\n                    // Implement AND without short-circuit evaluation\r\n                    // Coerce both sides to booleans, then multiply them\r\n                    print('(!!( ');\r\n                    generateExpression(astNode.expr1);\r\n                    print(' )*!!( ');\r\n                    generateExpression(astNode.expr2);\r\n                    print(' ))');\r\n                    break;\r\n                \r\n                case '^^':\r\n                    // Implement XOR without short-circuit evaluation\r\n                    // Coerce both sides to boolean and \"not\" them, add them, subtract 1, coerce to boolean and \"not\", coerce to number\r\n                    print('(!((!( ');\r\n                    generateExpression(astNode.expr1);\r\n                    print(' )+!( ');\r\n                    generateExpression(astNode.expr2);\r\n                    print(' ))-1)|0)');\r\n                    break;\r\n                    \r\n                default:\r\n                    print('(');\r\n                    generateExpression(astNode.expr1);\r\n                    print(' ' + astNode.op + ' ');\r\n                    generateExpression(astNode.expr2);\r\n                    print(')');\r\n                    break;\r\n            }\r\n            break;\r\n\r\n        case 'unop':\r\n            print('(');\r\n            print(astNode.op);\r\n            generateExpression(astNode.expr);\r\n            print(')');\r\n            break;\r\n\r\n        case 'number':\r\n            print('(');\r\n            print(astNode.val.toString());\r\n            // TODO does toString always produce valid Javascript that will create the exact same number?\r\n            print(')');\r\n            break;\r\n\r\n        case 'string':\r\n            print(JSON.stringify(astNode.val));\r\n            // TODO this fails in a select few corner cases.  Use something better,\r\n            // perhaps stolen from the Jade source code\r\n            break;\r\n\r\n        case 'index':\r\n            // TODO this needs a lot of work\r\n            // What do we do when index values aren't numbers?  Aren't integers?\r\n            // What about when the array isn't initialized or the target isn't an array?\r\n            print('(');\r\n            generateExpression(astNode.expr);\r\n            print(')');\r\n            _.each(astNode.indexes, function (index) {\r\n                print('[');\r\n                generateExpression(index);\r\n                print(']');\r\n            });\r\n            break;\r\n\r\n        case 'funccall':\r\n            print('(');\r\n            generateExpression(astNode.expr);\r\n            print(')');\r\n            if(astNode.isMethodCall) {\r\n                // Method calls: `self`/`this` is automatically set to the object to which the method belongs\r\n                // `other` should be set to the local `self` value\r\n                print('(');\r\n                generateExpression({\r\n                    type: 'identifier',\r\n                    variable: astUtils.getAnglScope(astNode).getVariableByIdentifierInChain('self')\r\n                });\r\n            } else {\r\n                // Function calls: Function's `self` and `other` are the local `self` and `other` values\r\n                print('.call(');\r\n                generateExpression({\r\n                    type: 'identifier',\r\n                    variable: astUtils.getAnglScope(astNode).getVariableByIdentifierInChain('self')\r\n                });\r\n                print(', ');\r\n                generateExpression({\r\n                    type: 'identifier',\r\n                    variable: astUtils.getAnglScope(astNode).getVariableByIdentifierInChain('other')\r\n                })\r\n            }\r\n            _.each(astNode.args, function(arg, i, args) {\r\n                print(', ');\r\n                generateExpression(arg);\r\n            });\r\n            print(')');\r\n            break;\r\n\r\n        case 'script':\r\n            print('function(');\r\n            print(['other'].concat(astNode.args).join(', '));\r\n            print(') {\\n');\r\n            indent();\r\n            generateLocalVariableAllocation(astNode);\r\n            // TODO this part of the AST doesn't seem quite right, suggesting there are\r\n            // possibilities I'm not aware of.\r\n            // These sanity checks will reject anything unexpected.\r\n            /*if(!(_.isObject(astNode.stmts) && _(_.keys(astNode.stmts).sort()).isEqual(['list', 'type']) && astNode.stmts.type === 'statements' && _.isArray(astNode.stmts.list))) {\r\n             throw new Error('Failed sanity checks on stmts!')\r\n             }\r\n             _.each(astNode.stmts.list, generateStatement)*/\r\n            generateStatement(astNode.stmts);\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('}');\r\n            break;\r\n\r\n        case 'jsfunccall':\r\n            print('(');\r\n            print(astNode.expr);\r\n            print(')(');\r\n            _.each(astNode.args, function(arg, i) {\r\n                if(i) print(', ');\r\n                generateExpression(arg);\r\n            });\r\n            print(')');\r\n            break;\r\n\r\n        case 'jsexpr':\r\n            print(astNode.expr);\r\n            break;\r\n\r\n        default:\r\n            throw new Error('Unknown expression type: \"' + astNode.type + '\"');\r\n    }\r\n};\r\n\r\nvar generateStatement = function(astNode, omitTerminator, omitIndentation) {\r\n    if(arguments.length < 2) omitTerminator = false;\r\n    switch(astNode.type) {\r\n\r\n        case 'var':\r\n            omitIndentation || printIndent();\r\n            print('var ');\r\n            _.each(astNode.list, function (varNode, i, args) {\r\n                print (varNode.name);\r\n                if (varNode.hasOwnProperty('expr')) {\r\n                    print (' = ');\r\n                    generateExpression(varNode.expr);\r\n                }\r\n                if(i < args.length - 1) {\r\n                    print(', ');\r\n                }\r\n            });\r\n            break;\r\n\r\n        case 'assign':\r\n            omitIndentation || printIndent();\r\n            generateExpression(astNode.lval);\r\n            print(' = ');\r\n            generateExpression(astNode.rval);\r\n            break;\r\n\r\n        case 'scriptdef':\r\n            omitIndentation || printIndent();\r\n            print(strings.ANGL_GLOBALS_IDENTIFIER + '.' + astNode.name);\r\n            print(' = function(');\r\n            print(['other'].concat(astNode.args).join(', '));\r\n            print(') {\\n');\r\n            indent();\r\n            generateLocalVariableAllocation(astNode);\r\n            // TODO this part of the AST doesn't seem quite right, suggesting there are\r\n            // possibilities I'm not aware of.\r\n            // These sanity checks will reject anything unexpected.\r\n            /*if(!(_.isObject(astNode.stmts) && _(_.keys(astNode.stmts).sort()).isEqual(['list', 'type']) && astNode.stmts.type === 'statements' && _.isArray(astNode.stmts.list))) {\r\n                throw new Error('Failed sanity checks on stmts!')\r\n            }\r\n            _.each(astNode.stmts.list, generateStatement)*/\r\n            generateStatement(astNode.stmts);\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('}');\r\n            break;\r\n\r\n        case 'const':\r\n            omitIndentation || printIndent();\r\n            print(strings.ANGL_GLOBALS_IDENTIFIER + '.' + astNode.name);\r\n            print(' = ');\r\n            generateExpression(astNode.expr);\r\n            break;\r\n\r\n        case 'switch':\r\n            omitIndentation || printIndent();\r\n            print('switch(');\r\n            generateExpression(astNode.expr);\r\n            print(') {\\n');\r\n            indent();\r\n            _.each(astNode.cases, function(caseNode) {\r\n                generateCase(caseNode);\r\n            });\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('}');\r\n            break;\r\n\r\n        case 'for':\r\n            omitIndentation || printIndent();\r\n            print('for(');\r\n            generateStatement(astNode.initstmt, true, true);\r\n            print('; ');\r\n            generateExpression(astNode.contexpr);\r\n            print('; ');\r\n            generateStatement(astNode.stepstmt, true, true);\r\n            print(') {\\n');\r\n            indent();\r\n            // TODO I bet there are some scoping issues I'm not dealing with correctly.\r\n            generateStatement(astNode.stmt);\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('}');\r\n            break;\r\n\r\n        case 'ifelse':\r\n            omitIndentation || printIndent();\r\n            print('if(');\r\n            generateExpression(astNode.expr);\r\n            print(') {\\n');\r\n            indent();\r\n            generateStatement(astNode.stmt1);\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('} else {\\n');\r\n            indent();\r\n            generateStatement(astNode.stmt2);\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('}');\r\n            break;\r\n\r\n        case 'if':\r\n            // This is a special case of ifelse where the else block is empty.\r\n            generateStatement({\r\n                type: 'ifelse',\r\n                expr: astNode.expr,\r\n                stmt1: astNode.stmt,\r\n                stmt2: {type: 'nop'}\r\n            }, omitTerminator, omitIndentation);\r\n            break;\r\n\r\n        case 'while':\r\n            omitIndentation || printIndent();\r\n            print('while(');\r\n            generateExpression(astNode.expr);\r\n            print(') {\\n');\r\n            indent();\r\n            generateStatement(astNode.stmt);\r\n            outdent();\r\n            printIndent();\r\n            print('}');\r\n            break;\r\n\r\n        case 'dountil':\r\n            omitIndentation || printIndent();\r\n            print('do {\\n');\r\n            indent();\r\n            generateStatement(astNode.stmt);\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('} while(!(');\r\n            generateExpression(astNode.expr);\r\n            print('))');\r\n            break;\r\n\r\n        case 'break':\r\n            omitIndentation || printIndent();\r\n            print('break');\r\n            // TODO are break semantics ever different in Angl than they are in JS?\r\n            break;\r\n\r\n        case 'continue':\r\n            omitIndentation || printIndent();\r\n            print('continue');\r\n            // TODO are continue semantics ever different in Angl than they are in JS?\r\n            break;\r\n\r\n        case 'statements':\r\n            _.each(astNode.list, function(statement) {\r\n                generateStatement(statement);\r\n            });\r\n            break;\r\n\r\n        case 'funccall':\r\n        case 'jsfunccall':\r\n            // Delegate to the expression generator\r\n            omitIndentation || printIndent();\r\n            generateExpression(astNode);\r\n            break;\r\n\r\n        case 'with':\r\n            // TODO I DONT WANNA IMPLEMENT THIS WAAAAAH\r\n            // Also it requires some sort of runtime that can find all instances of\r\n            // a given object type to iterate over.\r\n            // For now, I'm emitting a comment that explains code has been omitted.\r\n            var indexIdentifier = {\r\n                type: 'identifier',\r\n                variable: astNode.indexVariable\r\n            };\r\n            var allObjectsIdentifier = {\r\n                type: 'identifier',\r\n                variable: astNode.allObjectsVariable\r\n            };\r\n            var innerSelfIdentifier = {\r\n                type: 'identifier',\r\n                variable: astUtils.getAnglScope(astNode).getVariableByIdentifier('self')\r\n            };\r\n            omitIndentation || printIndent();\r\n            print('for(');\r\n            generateExpression(indexIdentifier);\r\n            print(' = 0; ');\r\n            generateExpression(indexIdentifier);\r\n            print(' < ');\r\n            generateExpression(allObjectsIdentifier);\r\n            print('.length; ');\r\n            generateExpression(indexIdentifier);\r\n            print('++) {\\n');\r\n            indent();\r\n            // Assign the value of inner `self`\r\n            omitIndentation || printIndent();\r\n            generateExpression(innerSelfIdentifier);\r\n            print(' = ');\r\n            generateExpression(allObjectsIdentifier);\r\n            print('[');\r\n            generateExpression(indexIdentifier);\r\n            print('];\\n');\r\n            generateStatement(astNode.stmt);\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('}');\r\n            break;\r\n\r\n        case 'return':\r\n            // TODO is there ever a situation where a Javascript 'return' won't do what we want?\r\n            // For example, inside a _.each() iterator function\r\n            omitIndentation || printIndent();\r\n            print('return (');\r\n            generateExpression(astNode.expr);\r\n            print(')');\r\n            break;\r\n\r\n        case 'exit':\r\n            // TODO same caveats as 'return'\r\n            omitIndentation || printIndent();\r\n            print('return');\r\n            break;\r\n\r\n        case 'object':\r\n            var objectExpr = strings.ANGL_GLOBALS_IDENTIFIER + '.' + astNode.name;\r\n            var protoExpr = objectExpr + '.prototype';\r\n            var parentObjectExpr = strings.ANGL_GLOBALS_IDENTIFIER + '.' + astNode.parent;\r\n            var parentProtoExpr = parentObjectExpr + '.prototype';\r\n            // Wrap object creation within a closure, and pass that closure into the proper runtime method.\r\n            // The Angl runtime will take care of creating objects in the proper order, so that the parent object\r\n            // already exists.\r\n            omitIndentation || printIndent();\r\n            print(strings.ANGL_RUNTIME_IDENTIFIER + '.createAnglObject(' +\r\n                  JSON.stringify(astNode.name) + ', ' + JSON.stringify(astNode.parent) + ', ');\r\n            print('function() {\\n');\r\n            indent();\r\n            // Generate the constructor function\r\n            omitIndentation || printIndent();\r\n            print(objectExpr + ' = function() { ' + parentObjectExpr + '.apply(this, arguments); };\\n');\r\n            // Set up inheritance\r\n            omitIndentation || printIndent();\r\n            print(strings.ANGL_RUNTIME_IDENTIFIER + '.inherit(' + objectExpr + ', ' + parentObjectExpr + ');\\n');\r\n            // Generate the property initialization function\r\n            omitIndentation || printIndent();\r\n            print(protoExpr + '.' + strings.OBJECT_INITPROPERTIES_METHOD_NAME + ' = ');\r\n            generateExpression(astNode.propertyinitscript);\r\n            print(';\\n');\r\n            // Generate the create event, if specified\r\n            if(astNode.createscript) {\r\n                omitIndentation || printIndent();\r\n                print(protoExpr + '.$create = ');\r\n                generateExpression(astNode.createscript);\r\n                print(';\\n');\r\n            }\r\n            // Generate the destroy event, if specified\r\n            if(astNode.destroyscript) {\r\n                omitIndentation || printIndent();\r\n                print(protoExpr + '.$destroy = ');\r\n                generateExpression(astNode.destroyscript);\r\n                print(';\\n');\r\n            }\r\n            // Generate all methods\r\n            _.each(astNode.methods, function(method) {\r\n                omitIndentation || printIndent();\r\n                print(protoExpr + '.' + method.methodname + ' = ');\r\n                generateExpression(method);\r\n                print(';\\n');\r\n            });\r\n            outdent();\r\n            omitIndentation || printIndent();\r\n            print('})');\r\n            break;\r\n            break;\r\n\r\n        case 'nop':\r\n            // No-ops don't do anything.  I'm assuming they never trigger any behavior by\r\n            // \"seperating\" adjacent statements.\r\n            break;\r\n\r\n        default:\r\n            throw new Error('Unknown statement type: \"' + astNode.type + '\"');\r\n    }\r\n    // Statements are terminated by a semicolon and a newline\r\n    // except for a few exceptions.\r\n    // Also, in certain contexts we want to omit this termination\r\n    // (e.g., initializer statement of a for loop)\r\n    if(!_.contains(['nop', 'statements'], astNode.type) && !omitTerminator) {\r\n        print(';\\n');\r\n    }\r\n};\r\n\r\nvar generateCase = function(astNode) {\r\n    switch(astNode.type) {\r\n\r\n        case 'case':\r\n            printIndent();\r\n            print('case (');\r\n            generateExpression(astNode.expr);\r\n            print('):\\n');\r\n            indent();\r\n            generateStatement(astNode.stmts);\r\n            outdent();\r\n            break;\r\n\r\n        case 'defaultcase':\r\n            printIndent();\r\n            print('default:\\n');\r\n            indent();\r\n            generateStatement(astNode.stmts);\r\n            outdent();\r\n            break;\r\n\r\n        default:\r\n            throw new Error('Unknown case type: \"' + astNode.type + '\"');\r\n    }\r\n};\r\n\r\nvar generateLocalVariableAllocation = function(astNode) {\r\n    var localVariables = _.filter(astUtils.getAnglScope(astNode).getVariablesArray(), function(variable) {\r\n        return variable.getAllocationType() === 'LOCAL';\r\n    });\r\n    if(localVariables.length) {\r\n        printIndent();\r\n        print('var ');\r\n        print(_.map(localVariables, function(variable) {\r\n            return variable.getJsIdentifier();\r\n        }).join(', '));\r\n        print(';\\n');\r\n    }\r\n}\r\n\r\nvar generateTopNode = function(astNode) {\r\n    switch(astNode.type) {\r\n\r\n        case 'file':\r\n            // RequireJS `define()` call\r\n            print('define(function(require) {\\n');\r\n            indent();\r\n            printIndent();\r\n            // Something removes \"use strict\" from the source code unless I split it up like so.  RequireJS perhaps?\r\n            print('\"use' + ' strict\";\\n');\r\n            // require modules\r\n            printIndent();\r\n            print('var ' + strings.ANGL_GLOBALS_IDENTIFIER + ' = require(' + JSON.stringify(strings.ANGL_GLOBALS_MODULE) + ');\\n');\r\n            printIndent();\r\n            print('var ' + strings.ANGL_RUNTIME_IDENTIFIER + ' = require(' + JSON.stringify(strings.ANGL_RUNTIME_MODULE) + ');\\n');\r\n            // allocate local variables\r\n            generateLocalVariableAllocation(astNode);\r\n            // delegate to the statement generator\r\n            _.each(astNode.stmts, function(node) {\r\n                generateStatement(node);\r\n            });\r\n            outdent();\r\n            print('});');\r\n            break;\r\n\r\n        default:\r\n            throw new Error('Unknown root node type: \"' + astNode.type + '\"');\r\n    }\r\n};\r\n\r\nvar compile = module.exports = function(ast) {\r\n    initializeCompiler();\r\n    generateTopNode(ast);\r\n    return _.flatten(buffer).join('');\r\n};\r\n\r\n\n});\n",
    "\ndefine('lib/compile',['require','exports','module','angl/out/angl','./run-all-transformations','./main'],function (require, exports, module) {var angl = require('angl/out/angl')\r\n\r\nvar allTransformations = require('./run-all-transformations')\r\nvar main = require('./main');\r\nfunction compile(anglSourceCode) {\r\n    var ast = angl.parse(anglSourceCode);\r\n    return compileAst(ast);\r\n}\r\nexports.compile = compile;\r\nfunction compileAst(anglAst) {\r\n    anglAst = allTransformations.runAllTransformations(anglAst);\r\n    var jsSource = main(anglAst);\r\n    return jsSource;\r\n}\r\nexports.compileAst = compileAst;\r\n//@ sourceMappingURL=compile.js.map\r\n\n});\n",
    "\ndefine('demo/index',['require','jquery','knockout','angl/out/angl','lib/compile'],function(require) {\r\n\r\nvar $ = require('jquery');\r\nvar ko = require('knockout');\r\nvar angl = require('angl/out/angl');\r\nvar compiler = require('lib/compile');\r\n\r\n$(document).ready(function($) {\r\n    var viewModel = window.viewModel = {};\r\n    (function() {\r\n        this.view = ko.observable('js');\r\n        this.parserErrors = ko.observable();\r\n        this.compilerErrors = ko.observable();\r\n        this.ast = ko.observable();\r\n        this.stringifiedAst = ko.observable();\r\n        this.compiledJs = ko.observable();\r\n        this.inputAngl = ko.observable('');\r\n        this.on_getPermalinkClicked = function() {\r\n            var hash = '#' + encodeURIComponent(this.inputAngl());\r\n            window.location.hash = hash;\r\n        };\r\n        _.bindAll(this, 'on_getPermalinkClicked');\r\n\r\n        var recompile = ko.computed(function() {\r\n            var ast;\r\n            try {\r\n                ast = angl.parse(this.inputAngl());\r\n                this.stringifiedAst(JSON.stringify(ast, null, '    '));\r\n            } catch(e) {\r\n                this.parserErrors(e.message);\r\n                return;\r\n            }\r\n            this.parserErrors(undefined);\r\n            try {\r\n                this.compiledJs(compiler.compileAst(ast));\r\n            } catch(e) {\r\n                this.compilerErrors(e.message);\r\n                return;\r\n            }\r\n            this.compilerErrors(undefined);\r\n        }, this).extend({throttle: 500});\r\n\r\n        if(window.location.hash) {\r\n            this.inputAngl(decodeURIComponent(window.location.hash.replace(/^#?/, '')));\r\n        }\r\n\r\n    }).apply(viewModel);\r\n\r\n    ko.applyBindings(viewModel);\r\n});\r\n\r\n});\r\n"
  ]
}